// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.20.3
// source: global_admin.proto

package client_sdk_go

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	GlobalAdmin_GetAccounts_FullMethodName = "/global_admin.GlobalAdmin/GetAccounts"
)

// GlobalAdminClient is the client API for GlobalAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GlobalAdminClient interface {
	GetAccounts(ctx context.Context, in *XGetAccountsRequest, opts ...grpc.CallOption) (*XGetAccountsResponse, error)
}

type globalAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewGlobalAdminClient(cc grpc.ClientConnInterface) GlobalAdminClient {
	return &globalAdminClient{cc}
}

func (c *globalAdminClient) GetAccounts(ctx context.Context, in *XGetAccountsRequest, opts ...grpc.CallOption) (*XGetAccountsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(XGetAccountsResponse)
	err := c.cc.Invoke(ctx, GlobalAdmin_GetAccounts_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GlobalAdminServer is the server API for GlobalAdmin service.
// All implementations must embed UnimplementedGlobalAdminServer
// for forward compatibility
type GlobalAdminServer interface {
	GetAccounts(context.Context, *XGetAccountsRequest) (*XGetAccountsResponse, error)
	mustEmbedUnimplementedGlobalAdminServer()
}

// UnimplementedGlobalAdminServer must be embedded to have forward compatible implementations.
type UnimplementedGlobalAdminServer struct {
}

func (UnimplementedGlobalAdminServer) GetAccounts(context.Context, *XGetAccountsRequest) (*XGetAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccounts not implemented")
}
func (UnimplementedGlobalAdminServer) mustEmbedUnimplementedGlobalAdminServer() {}

// UnsafeGlobalAdminServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GlobalAdminServer will
// result in compilation errors.
type UnsafeGlobalAdminServer interface {
	mustEmbedUnimplementedGlobalAdminServer()
}

func RegisterGlobalAdminServer(s grpc.ServiceRegistrar, srv GlobalAdminServer) {
	s.RegisterService(&GlobalAdmin_ServiceDesc, srv)
}

func _GlobalAdmin_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(XGetAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAdminServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GlobalAdmin_GetAccounts_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAdminServer).GetAccounts(ctx, req.(*XGetAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GlobalAdmin_ServiceDesc is the grpc.ServiceDesc for GlobalAdmin service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GlobalAdmin_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "global_admin.GlobalAdmin",
	HandlerType: (*GlobalAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccounts",
			Handler:    _GlobalAdmin_GetAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "global_admin.proto",
}
