// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: controlclient.proto

package client_sdk_go

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type XCreateStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreName string `protobuf:"bytes,1,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
}

func (x *XCreateStoreRequest) Reset() {
	*x = XCreateStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCreateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCreateStoreRequest) ProtoMessage() {}

func (x *XCreateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCreateStoreRequest.ProtoReflect.Descriptor instead.
func (*XCreateStoreRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{0}
}

func (x *XCreateStoreRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

type XCreateStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XCreateStoreResponse) Reset() {
	*x = XCreateStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCreateStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCreateStoreResponse) ProtoMessage() {}

func (x *XCreateStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCreateStoreResponse.ProtoReflect.Descriptor instead.
func (*XCreateStoreResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{1}
}

type XDeleteStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreName string `protobuf:"bytes,1,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
}

func (x *XDeleteStoreRequest) Reset() {
	*x = XDeleteStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDeleteStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDeleteStoreRequest) ProtoMessage() {}

func (x *XDeleteStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDeleteStoreRequest.ProtoReflect.Descriptor instead.
func (*XDeleteStoreRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{2}
}

func (x *XDeleteStoreRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

type XDeleteStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDeleteStoreResponse) Reset() {
	*x = XDeleteStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDeleteStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDeleteStoreResponse) ProtoMessage() {}

func (x *XDeleteStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDeleteStoreResponse.ProtoReflect.Descriptor instead.
func (*XDeleteStoreResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{3}
}

type XListStoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextToken string `protobuf:"bytes,1,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
}

func (x *XListStoresRequest) Reset() {
	*x = XListStoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListStoresRequest) ProtoMessage() {}

func (x *XListStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListStoresRequest.ProtoReflect.Descriptor instead.
func (*XListStoresRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{4}
}

func (x *XListStoresRequest) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type XListStoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store     []*XStore `protobuf:"bytes,1,rep,name=store,proto3" json:"store,omitempty"`
	NextToken string    `protobuf:"bytes,2,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
}

func (x *XListStoresResponse) Reset() {
	*x = XListStoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListStoresResponse) ProtoMessage() {}

func (x *XListStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListStoresResponse.ProtoReflect.Descriptor instead.
func (*XListStoresResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{5}
}

func (x *XListStoresResponse) GetStore() []*XStore {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *XListStoresResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type XStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreName string `protobuf:"bytes,1,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
}

func (x *XStore) Reset() {
	*x = XStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XStore) ProtoMessage() {}

func (x *XStore) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XStore.ProtoReflect.Descriptor instead.
func (*XStore) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{6}
}

func (x *XStore) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

type XSimilarityMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SimilarityMetric:
	//
	//	*XSimilarityMetric_EuclideanSimilarity
	//	*XSimilarityMetric_InnerProduct
	//	*XSimilarityMetric_CosineSimilarity
	SimilarityMetric isXSimilarityMetric_SimilarityMetric `protobuf_oneof:"similarity_metric"`
}

func (x *XSimilarityMetric) Reset() {
	*x = XSimilarityMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSimilarityMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSimilarityMetric) ProtoMessage() {}

func (x *XSimilarityMetric) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSimilarityMetric.ProtoReflect.Descriptor instead.
func (*XSimilarityMetric) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{7}
}

func (m *XSimilarityMetric) GetSimilarityMetric() isXSimilarityMetric_SimilarityMetric {
	if m != nil {
		return m.SimilarityMetric
	}
	return nil
}

func (x *XSimilarityMetric) GetEuclideanSimilarity() *XSimilarityMetric_XEuclideanSimilarity {
	if x, ok := x.GetSimilarityMetric().(*XSimilarityMetric_EuclideanSimilarity); ok {
		return x.EuclideanSimilarity
	}
	return nil
}

func (x *XSimilarityMetric) GetInnerProduct() *XSimilarityMetric_XInnerProduct {
	if x, ok := x.GetSimilarityMetric().(*XSimilarityMetric_InnerProduct); ok {
		return x.InnerProduct
	}
	return nil
}

func (x *XSimilarityMetric) GetCosineSimilarity() *XSimilarityMetric_XCosineSimilarity {
	if x, ok := x.GetSimilarityMetric().(*XSimilarityMetric_CosineSimilarity); ok {
		return x.CosineSimilarity
	}
	return nil
}

type isXSimilarityMetric_SimilarityMetric interface {
	isXSimilarityMetric_SimilarityMetric()
}

type XSimilarityMetric_EuclideanSimilarity struct {
	EuclideanSimilarity *XSimilarityMetric_XEuclideanSimilarity `protobuf:"bytes,1,opt,name=euclidean_similarity,json=euclideanSimilarity,proto3,oneof"`
}

type XSimilarityMetric_InnerProduct struct {
	InnerProduct *XSimilarityMetric_XInnerProduct `protobuf:"bytes,2,opt,name=inner_product,json=innerProduct,proto3,oneof"`
}

type XSimilarityMetric_CosineSimilarity struct {
	CosineSimilarity *XSimilarityMetric_XCosineSimilarity `protobuf:"bytes,3,opt,name=cosine_similarity,json=cosineSimilarity,proto3,oneof"`
}

func (*XSimilarityMetric_EuclideanSimilarity) isXSimilarityMetric_SimilarityMetric() {}

func (*XSimilarityMetric_InnerProduct) isXSimilarityMetric_SimilarityMetric() {}

func (*XSimilarityMetric_CosineSimilarity) isXSimilarityMetric_SimilarityMetric() {}

type XCreateIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName        string             `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	NumDimensions    uint64             `protobuf:"varint,2,opt,name=num_dimensions,json=numDimensions,proto3" json:"num_dimensions,omitempty"`
	SimilarityMetric *XSimilarityMetric `protobuf:"bytes,3,opt,name=similarity_metric,json=similarityMetric,proto3" json:"similarity_metric,omitempty"`
}

func (x *XCreateIndexRequest) Reset() {
	*x = XCreateIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCreateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCreateIndexRequest) ProtoMessage() {}

func (x *XCreateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCreateIndexRequest.ProtoReflect.Descriptor instead.
func (*XCreateIndexRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{8}
}

func (x *XCreateIndexRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *XCreateIndexRequest) GetNumDimensions() uint64 {
	if x != nil {
		return x.NumDimensions
	}
	return 0
}

func (x *XCreateIndexRequest) GetSimilarityMetric() *XSimilarityMetric {
	if x != nil {
		return x.SimilarityMetric
	}
	return nil
}

type XCreateIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XCreateIndexResponse) Reset() {
	*x = XCreateIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCreateIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCreateIndexResponse) ProtoMessage() {}

func (x *XCreateIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCreateIndexResponse.ProtoReflect.Descriptor instead.
func (*XCreateIndexResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{9}
}

type XDeleteIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
}

func (x *XDeleteIndexRequest) Reset() {
	*x = XDeleteIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDeleteIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDeleteIndexRequest) ProtoMessage() {}

func (x *XDeleteIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDeleteIndexRequest.ProtoReflect.Descriptor instead.
func (*XDeleteIndexRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{10}
}

func (x *XDeleteIndexRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

type XDeleteIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDeleteIndexResponse) Reset() {
	*x = XDeleteIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDeleteIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDeleteIndexResponse) ProtoMessage() {}

func (x *XDeleteIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDeleteIndexResponse.ProtoReflect.Descriptor instead.
func (*XDeleteIndexResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{11}
}

type XListIndexesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListIndexesRequest) Reset() {
	*x = XListIndexesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListIndexesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListIndexesRequest) ProtoMessage() {}

func (x *XListIndexesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListIndexesRequest.ProtoReflect.Descriptor instead.
func (*XListIndexesRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{12}
}

type XListIndexesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indexes []*XListIndexesResponse_XIndex `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *XListIndexesResponse) Reset() {
	*x = XListIndexesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListIndexesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListIndexesResponse) ProtoMessage() {}

func (x *XListIndexesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListIndexesResponse.ProtoReflect.Descriptor instead.
func (*XListIndexesResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{13}
}

func (x *XListIndexesResponse) GetIndexes() []*XListIndexesResponse_XIndex {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type XDeleteCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheName string `protobuf:"bytes,1,opt,name=cache_name,json=cacheName,proto3" json:"cache_name,omitempty"`
}

func (x *XDeleteCacheRequest) Reset() {
	*x = XDeleteCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDeleteCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDeleteCacheRequest) ProtoMessage() {}

func (x *XDeleteCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDeleteCacheRequest.ProtoReflect.Descriptor instead.
func (*XDeleteCacheRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{14}
}

func (x *XDeleteCacheRequest) GetCacheName() string {
	if x != nil {
		return x.CacheName
	}
	return ""
}

type XDeleteCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDeleteCacheResponse) Reset() {
	*x = XDeleteCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDeleteCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDeleteCacheResponse) ProtoMessage() {}

func (x *XDeleteCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDeleteCacheResponse.ProtoReflect.Descriptor instead.
func (*XDeleteCacheResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{15}
}

type XCreateCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheName string `protobuf:"bytes,1,opt,name=cache_name,json=cacheName,proto3" json:"cache_name,omitempty"`
}

func (x *XCreateCacheRequest) Reset() {
	*x = XCreateCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCreateCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCreateCacheRequest) ProtoMessage() {}

func (x *XCreateCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCreateCacheRequest.ProtoReflect.Descriptor instead.
func (*XCreateCacheRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{16}
}

func (x *XCreateCacheRequest) GetCacheName() string {
	if x != nil {
		return x.CacheName
	}
	return ""
}

type XCreateCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XCreateCacheResponse) Reset() {
	*x = XCreateCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCreateCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCreateCacheResponse) ProtoMessage() {}

func (x *XCreateCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCreateCacheResponse.ProtoReflect.Descriptor instead.
func (*XCreateCacheResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{17}
}

type XListCachesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextToken string `protobuf:"bytes,1,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
}

func (x *XListCachesRequest) Reset() {
	*x = XListCachesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListCachesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListCachesRequest) ProtoMessage() {}

func (x *XListCachesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListCachesRequest.ProtoReflect.Descriptor instead.
func (*XListCachesRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{18}
}

func (x *XListCachesRequest) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type XCacheLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of transactions per second that can be exercised
	MaxTrafficRate uint32 `protobuf:"varint,1,opt,name=max_traffic_rate,json=maxTrafficRate,proto3" json:"max_traffic_rate,omitempty"`
	// The amount of traffic per second that can be exercised in KiB
	MaxThroughputKbps uint32 `protobuf:"varint,2,opt,name=max_throughput_kbps,json=maxThroughputKbps,proto3" json:"max_throughput_kbps,omitempty"`
	// The maximum size of a single item in KiB
	MaxItemSizeKb uint32 `protobuf:"varint,3,opt,name=max_item_size_kb,json=maxItemSizeKb,proto3" json:"max_item_size_kb,omitempty"`
	// The maximum TTL allowed for a single item, in seconds
	MaxTtlSeconds uint64 `protobuf:"varint,4,opt,name=max_ttl_seconds,json=maxTtlSeconds,proto3" json:"max_ttl_seconds,omitempty"`
}

func (x *XCacheLimits) Reset() {
	*x = XCacheLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCacheLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCacheLimits) ProtoMessage() {}

func (x *XCacheLimits) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCacheLimits.ProtoReflect.Descriptor instead.
func (*XCacheLimits) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{19}
}

func (x *XCacheLimits) GetMaxTrafficRate() uint32 {
	if x != nil {
		return x.MaxTrafficRate
	}
	return 0
}

func (x *XCacheLimits) GetMaxThroughputKbps() uint32 {
	if x != nil {
		return x.MaxThroughputKbps
	}
	return 0
}

func (x *XCacheLimits) GetMaxItemSizeKb() uint32 {
	if x != nil {
		return x.MaxItemSizeKb
	}
	return 0
}

func (x *XCacheLimits) GetMaxTtlSeconds() uint64 {
	if x != nil {
		return x.MaxTtlSeconds
	}
	return 0
}

type XTopicLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of messages that can be published per second
	MaxPublishRate uint32 `protobuf:"varint,1,opt,name=max_publish_rate,json=maxPublishRate,proto3" json:"max_publish_rate,omitempty"`
	// The maximum amount of active subscriptions per cache
	MaxSubscriptionCount uint32 `protobuf:"varint,2,opt,name=max_subscription_count,json=maxSubscriptionCount,proto3" json:"max_subscription_count,omitempty"`
	// The maximum size of a single publish message, in KiB
	MaxPublishMessageSizeKb uint32 `protobuf:"varint,3,opt,name=max_publish_message_size_kb,json=maxPublishMessageSizeKb,proto3" json:"max_publish_message_size_kb,omitempty"`
}

func (x *XTopicLimits) Reset() {
	*x = XTopicLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XTopicLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XTopicLimits) ProtoMessage() {}

func (x *XTopicLimits) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XTopicLimits.ProtoReflect.Descriptor instead.
func (*XTopicLimits) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{20}
}

func (x *XTopicLimits) GetMaxPublishRate() uint32 {
	if x != nil {
		return x.MaxPublishRate
	}
	return 0
}

func (x *XTopicLimits) GetMaxSubscriptionCount() uint32 {
	if x != nil {
		return x.MaxSubscriptionCount
	}
	return 0
}

func (x *XTopicLimits) GetMaxPublishMessageSizeKb() uint32 {
	if x != nil {
		return x.MaxPublishMessageSizeKb
	}
	return 0
}

type XCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheName   string        `protobuf:"bytes,1,opt,name=cache_name,json=cacheName,proto3" json:"cache_name,omitempty"`
	CacheLimits *XCacheLimits `protobuf:"bytes,2,opt,name=cache_limits,json=cacheLimits,proto3" json:"cache_limits,omitempty"`
	TopicLimits *XTopicLimits `protobuf:"bytes,3,opt,name=topic_limits,json=topicLimits,proto3" json:"topic_limits,omitempty"`
}

func (x *XCache) Reset() {
	*x = XCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCache) ProtoMessage() {}

func (x *XCache) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCache.ProtoReflect.Descriptor instead.
func (*XCache) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{21}
}

func (x *XCache) GetCacheName() string {
	if x != nil {
		return x.CacheName
	}
	return ""
}

func (x *XCache) GetCacheLimits() *XCacheLimits {
	if x != nil {
		return x.CacheLimits
	}
	return nil
}

func (x *XCache) GetTopicLimits() *XTopicLimits {
	if x != nil {
		return x.TopicLimits
	}
	return nil
}

type XListCachesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cache     []*XCache `protobuf:"bytes,1,rep,name=cache,proto3" json:"cache,omitempty"`
	NextToken string    `protobuf:"bytes,2,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
}

func (x *XListCachesResponse) Reset() {
	*x = XListCachesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListCachesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListCachesResponse) ProtoMessage() {}

func (x *XListCachesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListCachesResponse.ProtoReflect.Descriptor instead.
func (*XListCachesResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{22}
}

func (x *XListCachesResponse) GetCache() []*XCache {
	if x != nil {
		return x.Cache
	}
	return nil
}

func (x *XListCachesResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type XCreateSigningKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TtlMinutes uint32 `protobuf:"varint,1,opt,name=ttl_minutes,json=ttlMinutes,proto3" json:"ttl_minutes,omitempty"`
}

func (x *XCreateSigningKeyRequest) Reset() {
	*x = XCreateSigningKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCreateSigningKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCreateSigningKeyRequest) ProtoMessage() {}

func (x *XCreateSigningKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCreateSigningKeyRequest.ProtoReflect.Descriptor instead.
func (*XCreateSigningKeyRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{23}
}

func (x *XCreateSigningKeyRequest) GetTtlMinutes() uint32 {
	if x != nil {
		return x.TtlMinutes
	}
	return 0
}

type XCreateSigningKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ExpiresAt uint64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *XCreateSigningKeyResponse) Reset() {
	*x = XCreateSigningKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XCreateSigningKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCreateSigningKeyResponse) ProtoMessage() {}

func (x *XCreateSigningKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCreateSigningKeyResponse.ProtoReflect.Descriptor instead.
func (*XCreateSigningKeyResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{24}
}

func (x *XCreateSigningKeyResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *XCreateSigningKeyResponse) GetExpiresAt() uint64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type XRevokeSigningKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *XRevokeSigningKeyRequest) Reset() {
	*x = XRevokeSigningKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRevokeSigningKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRevokeSigningKeyRequest) ProtoMessage() {}

func (x *XRevokeSigningKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRevokeSigningKeyRequest.ProtoReflect.Descriptor instead.
func (*XRevokeSigningKeyRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{25}
}

func (x *XRevokeSigningKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type XRevokeSigningKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XRevokeSigningKeyResponse) Reset() {
	*x = XRevokeSigningKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRevokeSigningKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRevokeSigningKeyResponse) ProtoMessage() {}

func (x *XRevokeSigningKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRevokeSigningKeyResponse.ProtoReflect.Descriptor instead.
func (*XRevokeSigningKeyResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{26}
}

type XSigningKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the signing key
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// Epoch time in seconds when the signing key expires
	ExpiresAt uint64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *XSigningKey) Reset() {
	*x = XSigningKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSigningKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSigningKey) ProtoMessage() {}

func (x *XSigningKey) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSigningKey.ProtoReflect.Descriptor instead.
func (*XSigningKey) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{27}
}

func (x *XSigningKey) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *XSigningKey) GetExpiresAt() uint64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type XListSigningKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextToken string `protobuf:"bytes,1,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
}

func (x *XListSigningKeysRequest) Reset() {
	*x = XListSigningKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListSigningKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListSigningKeysRequest) ProtoMessage() {}

func (x *XListSigningKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListSigningKeysRequest.ProtoReflect.Descriptor instead.
func (*XListSigningKeysRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{28}
}

func (x *XListSigningKeysRequest) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type XListSigningKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigningKey []*XSigningKey `protobuf:"bytes,1,rep,name=signing_key,json=signingKey,proto3" json:"signing_key,omitempty"`
	NextToken  string         `protobuf:"bytes,2,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
}

func (x *XListSigningKeysResponse) Reset() {
	*x = XListSigningKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListSigningKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListSigningKeysResponse) ProtoMessage() {}

func (x *XListSigningKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListSigningKeysResponse.ProtoReflect.Descriptor instead.
func (*XListSigningKeysResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{29}
}

func (x *XListSigningKeysResponse) GetSigningKey() []*XSigningKey {
	if x != nil {
		return x.SigningKey
	}
	return nil
}

func (x *XListSigningKeysResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

type XFlushCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheName string `protobuf:"bytes,1,opt,name=cache_name,json=cacheName,proto3" json:"cache_name,omitempty"`
}

func (x *XFlushCacheRequest) Reset() {
	*x = XFlushCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XFlushCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XFlushCacheRequest) ProtoMessage() {}

func (x *XFlushCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XFlushCacheRequest.ProtoReflect.Descriptor instead.
func (*XFlushCacheRequest) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{30}
}

func (x *XFlushCacheRequest) GetCacheName() string {
	if x != nil {
		return x.CacheName
	}
	return ""
}

type XFlushCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XFlushCacheResponse) Reset() {
	*x = XFlushCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XFlushCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XFlushCacheResponse) ProtoMessage() {}

func (x *XFlushCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XFlushCacheResponse.ProtoReflect.Descriptor instead.
func (*XFlushCacheResponse) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{31}
}

type XSimilarityMetric_XEuclideanSimilarity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSimilarityMetric_XEuclideanSimilarity) Reset() {
	*x = XSimilarityMetric_XEuclideanSimilarity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSimilarityMetric_XEuclideanSimilarity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSimilarityMetric_XEuclideanSimilarity) ProtoMessage() {}

func (x *XSimilarityMetric_XEuclideanSimilarity) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSimilarityMetric_XEuclideanSimilarity.ProtoReflect.Descriptor instead.
func (*XSimilarityMetric_XEuclideanSimilarity) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{7, 0}
}

type XSimilarityMetric_XInnerProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSimilarityMetric_XInnerProduct) Reset() {
	*x = XSimilarityMetric_XInnerProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSimilarityMetric_XInnerProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSimilarityMetric_XInnerProduct) ProtoMessage() {}

func (x *XSimilarityMetric_XInnerProduct) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSimilarityMetric_XInnerProduct.ProtoReflect.Descriptor instead.
func (*XSimilarityMetric_XInnerProduct) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{7, 1}
}

type XSimilarityMetric_XCosineSimilarity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSimilarityMetric_XCosineSimilarity) Reset() {
	*x = XSimilarityMetric_XCosineSimilarity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSimilarityMetric_XCosineSimilarity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSimilarityMetric_XCosineSimilarity) ProtoMessage() {}

func (x *XSimilarityMetric_XCosineSimilarity) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSimilarityMetric_XCosineSimilarity.ProtoReflect.Descriptor instead.
func (*XSimilarityMetric_XCosineSimilarity) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{7, 2}
}

type XListIndexesResponse_XIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName        string             `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	NumDimensions    uint64             `protobuf:"varint,2,opt,name=num_dimensions,json=numDimensions,proto3" json:"num_dimensions,omitempty"`
	SimilarityMetric *XSimilarityMetric `protobuf:"bytes,3,opt,name=similarity_metric,json=similarityMetric,proto3" json:"similarity_metric,omitempty"`
}

func (x *XListIndexesResponse_XIndex) Reset() {
	*x = XListIndexesResponse_XIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlclient_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListIndexesResponse_XIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListIndexesResponse_XIndex) ProtoMessage() {}

func (x *XListIndexesResponse_XIndex) ProtoReflect() protoreflect.Message {
	mi := &file_controlclient_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListIndexesResponse_XIndex.ProtoReflect.Descriptor instead.
func (*XListIndexesResponse_XIndex) Descriptor() ([]byte, []int) {
	return file_controlclient_proto_rawDescGZIP(), []int{13, 0}
}

func (x *XListIndexesResponse_XIndex) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *XListIndexesResponse_XIndex) GetNumDimensions() uint64 {
	if x != nil {
		return x.NumDimensions
	}
	return 0
}

func (x *XListIndexesResponse_XIndex) GetSimilarityMetric() *XSimilarityMetric {
	if x != nil {
		return x.SimilarityMetric
	}
	return nil
}

var File_controlclient_proto protoreflect.FileDescriptor

var file_controlclient_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x5f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x5f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x33, 0x0a, 0x12, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x62, 0x0a, 0x13, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a, 0x06, 0x5f, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x8f, 0x03, 0x0a, 0x11, 0x5f, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x6b, 0x0a, 0x14, 0x65, 0x75, 0x63,
	0x6c, 0x69, 0x64, 0x65, 0x61, 0x6e, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x5f, 0x45, 0x75, 0x63, 0x6c,
	0x69, 0x64, 0x65, 0x61, 0x6e, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x13, 0x65, 0x75, 0x63, 0x6c, 0x69, 0x64, 0x65, 0x61, 0x6e, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x0d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x2e, 0x5f, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x62,
	0x0a, 0x11, 0x63, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x5f, 0x43, 0x6f,
	0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x48, 0x00,
	0x52, 0x10, 0x63, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x1a, 0x16, 0x0a, 0x14, 0x5f, 0x45, 0x75, 0x63, 0x6c, 0x69, 0x64, 0x65, 0x61, 0x6e,
	0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x1a, 0x0f, 0x0a, 0x0d, 0x5f, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x13, 0x0a, 0x11, 0x5f,
	0x43, 0x6f, 0x73, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x42, 0x13, 0x0a, 0x11, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0xab, 0x01, 0x0a, 0x13, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x11, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x10, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x22, 0x16, 0x0a, 0x14, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x5f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x16, 0x0a, 0x14, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xfe, 0x01, 0x0a, 0x14, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x5f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x1a, 0x9e, 0x01, 0x0a, 0x06, 0x5f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x75,
	0x6d, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x4e, 0x0a, 0x11, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53,
	0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x10, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x22, 0x34, 0x0a, 0x13, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x5f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x34, 0x0a, 0x13, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a,
	0x12, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x0c, 0x5f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d,
	0x61, 0x78, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x5f,
	0x6b, 0x62, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x54,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x4b, 0x62, 0x70, 0x73, 0x12, 0x27, 0x0a,
	0x10, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6b,
	0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x74,
	0x6c, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x6d, 0x61, 0x78, 0x54, 0x74, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xac,
	0x01, 0x0a, 0x0c, 0x5f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12,
	0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x61, 0x78,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3c, 0x0a, 0x1b, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6b, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x22, 0xa9, 0x01,
	0x0a, 0x06, 0x5f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x0b, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x0b, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x13, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3b, 0x0a,
	0x18, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x74, 0x6c,
	0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x19, 0x5f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x31, 0x0a, 0x18, 0x5f, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x5f,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0b, 0x5f, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x38, 0x0a,
	0x17, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x77, 0x0a, 0x18, 0x5f, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x33, 0x0a, 0x12, 0x5f, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x5f, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd9, 0x09, 0x0a,
	0x0a, 0x53, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x5a, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x73, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a,
	0x46, 0x6c, 0x75, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x46, 0x6c, 0x75,
	0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x27,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x22, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x68, 0x0a, 0x13, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x68, 0x71, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x73,
	0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x3b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x64, 0x6b,
	0x5f, 0x67, 0x6f, 0xaa, 0x02, 0x1c, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_controlclient_proto_rawDescOnce sync.Once
	file_controlclient_proto_rawDescData = file_controlclient_proto_rawDesc
)

func file_controlclient_proto_rawDescGZIP() []byte {
	file_controlclient_proto_rawDescOnce.Do(func() {
		file_controlclient_proto_rawDescData = protoimpl.X.CompressGZIP(file_controlclient_proto_rawDescData)
	})
	return file_controlclient_proto_rawDescData
}

var file_controlclient_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_controlclient_proto_goTypes = []any{
	(*XCreateStoreRequest)(nil),                    // 0: control_client._CreateStoreRequest
	(*XCreateStoreResponse)(nil),                   // 1: control_client._CreateStoreResponse
	(*XDeleteStoreRequest)(nil),                    // 2: control_client._DeleteStoreRequest
	(*XDeleteStoreResponse)(nil),                   // 3: control_client._DeleteStoreResponse
	(*XListStoresRequest)(nil),                     // 4: control_client._ListStoresRequest
	(*XListStoresResponse)(nil),                    // 5: control_client._ListStoresResponse
	(*XStore)(nil),                                 // 6: control_client._Store
	(*XSimilarityMetric)(nil),                      // 7: control_client._SimilarityMetric
	(*XCreateIndexRequest)(nil),                    // 8: control_client._CreateIndexRequest
	(*XCreateIndexResponse)(nil),                   // 9: control_client._CreateIndexResponse
	(*XDeleteIndexRequest)(nil),                    // 10: control_client._DeleteIndexRequest
	(*XDeleteIndexResponse)(nil),                   // 11: control_client._DeleteIndexResponse
	(*XListIndexesRequest)(nil),                    // 12: control_client._ListIndexesRequest
	(*XListIndexesResponse)(nil),                   // 13: control_client._ListIndexesResponse
	(*XDeleteCacheRequest)(nil),                    // 14: control_client._DeleteCacheRequest
	(*XDeleteCacheResponse)(nil),                   // 15: control_client._DeleteCacheResponse
	(*XCreateCacheRequest)(nil),                    // 16: control_client._CreateCacheRequest
	(*XCreateCacheResponse)(nil),                   // 17: control_client._CreateCacheResponse
	(*XListCachesRequest)(nil),                     // 18: control_client._ListCachesRequest
	(*XCacheLimits)(nil),                           // 19: control_client._CacheLimits
	(*XTopicLimits)(nil),                           // 20: control_client._TopicLimits
	(*XCache)(nil),                                 // 21: control_client._Cache
	(*XListCachesResponse)(nil),                    // 22: control_client._ListCachesResponse
	(*XCreateSigningKeyRequest)(nil),               // 23: control_client._CreateSigningKeyRequest
	(*XCreateSigningKeyResponse)(nil),              // 24: control_client._CreateSigningKeyResponse
	(*XRevokeSigningKeyRequest)(nil),               // 25: control_client._RevokeSigningKeyRequest
	(*XRevokeSigningKeyResponse)(nil),              // 26: control_client._RevokeSigningKeyResponse
	(*XSigningKey)(nil),                            // 27: control_client._SigningKey
	(*XListSigningKeysRequest)(nil),                // 28: control_client._ListSigningKeysRequest
	(*XListSigningKeysResponse)(nil),               // 29: control_client._ListSigningKeysResponse
	(*XFlushCacheRequest)(nil),                     // 30: control_client._FlushCacheRequest
	(*XFlushCacheResponse)(nil),                    // 31: control_client._FlushCacheResponse
	(*XSimilarityMetric_XEuclideanSimilarity)(nil), // 32: control_client._SimilarityMetric._EuclideanSimilarity
	(*XSimilarityMetric_XInnerProduct)(nil),        // 33: control_client._SimilarityMetric._InnerProduct
	(*XSimilarityMetric_XCosineSimilarity)(nil),    // 34: control_client._SimilarityMetric._CosineSimilarity
	(*XListIndexesResponse_XIndex)(nil),            // 35: control_client._ListIndexesResponse._Index
}
var file_controlclient_proto_depIdxs = []int32{
	6,  // 0: control_client._ListStoresResponse.store:type_name -> control_client._Store
	32, // 1: control_client._SimilarityMetric.euclidean_similarity:type_name -> control_client._SimilarityMetric._EuclideanSimilarity
	33, // 2: control_client._SimilarityMetric.inner_product:type_name -> control_client._SimilarityMetric._InnerProduct
	34, // 3: control_client._SimilarityMetric.cosine_similarity:type_name -> control_client._SimilarityMetric._CosineSimilarity
	7,  // 4: control_client._CreateIndexRequest.similarity_metric:type_name -> control_client._SimilarityMetric
	35, // 5: control_client._ListIndexesResponse.indexes:type_name -> control_client._ListIndexesResponse._Index
	19, // 6: control_client._Cache.cache_limits:type_name -> control_client._CacheLimits
	20, // 7: control_client._Cache.topic_limits:type_name -> control_client._TopicLimits
	21, // 8: control_client._ListCachesResponse.cache:type_name -> control_client._Cache
	27, // 9: control_client._ListSigningKeysResponse.signing_key:type_name -> control_client._SigningKey
	7,  // 10: control_client._ListIndexesResponse._Index.similarity_metric:type_name -> control_client._SimilarityMetric
	16, // 11: control_client.ScsControl.CreateCache:input_type -> control_client._CreateCacheRequest
	14, // 12: control_client.ScsControl.DeleteCache:input_type -> control_client._DeleteCacheRequest
	18, // 13: control_client.ScsControl.ListCaches:input_type -> control_client._ListCachesRequest
	30, // 14: control_client.ScsControl.FlushCache:input_type -> control_client._FlushCacheRequest
	23, // 15: control_client.ScsControl.CreateSigningKey:input_type -> control_client._CreateSigningKeyRequest
	25, // 16: control_client.ScsControl.RevokeSigningKey:input_type -> control_client._RevokeSigningKeyRequest
	28, // 17: control_client.ScsControl.ListSigningKeys:input_type -> control_client._ListSigningKeysRequest
	8,  // 18: control_client.ScsControl.CreateIndex:input_type -> control_client._CreateIndexRequest
	10, // 19: control_client.ScsControl.DeleteIndex:input_type -> control_client._DeleteIndexRequest
	12, // 20: control_client.ScsControl.ListIndexes:input_type -> control_client._ListIndexesRequest
	0,  // 21: control_client.ScsControl.CreateStore:input_type -> control_client._CreateStoreRequest
	2,  // 22: control_client.ScsControl.DeleteStore:input_type -> control_client._DeleteStoreRequest
	4,  // 23: control_client.ScsControl.ListStores:input_type -> control_client._ListStoresRequest
	17, // 24: control_client.ScsControl.CreateCache:output_type -> control_client._CreateCacheResponse
	15, // 25: control_client.ScsControl.DeleteCache:output_type -> control_client._DeleteCacheResponse
	22, // 26: control_client.ScsControl.ListCaches:output_type -> control_client._ListCachesResponse
	31, // 27: control_client.ScsControl.FlushCache:output_type -> control_client._FlushCacheResponse
	24, // 28: control_client.ScsControl.CreateSigningKey:output_type -> control_client._CreateSigningKeyResponse
	26, // 29: control_client.ScsControl.RevokeSigningKey:output_type -> control_client._RevokeSigningKeyResponse
	29, // 30: control_client.ScsControl.ListSigningKeys:output_type -> control_client._ListSigningKeysResponse
	9,  // 31: control_client.ScsControl.CreateIndex:output_type -> control_client._CreateIndexResponse
	11, // 32: control_client.ScsControl.DeleteIndex:output_type -> control_client._DeleteIndexResponse
	13, // 33: control_client.ScsControl.ListIndexes:output_type -> control_client._ListIndexesResponse
	1,  // 34: control_client.ScsControl.CreateStore:output_type -> control_client._CreateStoreResponse
	3,  // 35: control_client.ScsControl.DeleteStore:output_type -> control_client._DeleteStoreResponse
	5,  // 36: control_client.ScsControl.ListStores:output_type -> control_client._ListStoresResponse
	24, // [24:37] is the sub-list for method output_type
	11, // [11:24] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_controlclient_proto_init() }
func file_controlclient_proto_init() {
	if File_controlclient_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_controlclient_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*XCreateStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*XCreateStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*XDeleteStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*XDeleteStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*XListStoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*XListStoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*XStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*XSimilarityMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*XCreateIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*XCreateIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*XDeleteIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*XDeleteIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*XListIndexesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*XListIndexesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*XDeleteCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*XDeleteCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*XCreateCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*XCreateCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*XListCachesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*XCacheLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*XTopicLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*XCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*XListCachesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*XCreateSigningKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*XCreateSigningKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*XRevokeSigningKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*XRevokeSigningKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*XSigningKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*XListSigningKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*XListSigningKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*XFlushCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*XFlushCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*XSimilarityMetric_XEuclideanSimilarity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*XSimilarityMetric_XInnerProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*XSimilarityMetric_XCosineSimilarity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlclient_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*XListIndexesResponse_XIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_controlclient_proto_msgTypes[7].OneofWrappers = []any{
		(*XSimilarityMetric_EuclideanSimilarity)(nil),
		(*XSimilarityMetric_InnerProduct)(nil),
		(*XSimilarityMetric_CosineSimilarity)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_controlclient_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_controlclient_proto_goTypes,
		DependencyIndexes: file_controlclient_proto_depIdxs,
		MessageInfos:      file_controlclient_proto_msgTypes,
	}.Build()
	File_controlclient_proto = out.File
	file_controlclient_proto_rawDesc = nil
	file_controlclient_proto_goTypes = nil
	file_controlclient_proto_depIdxs = nil
}
