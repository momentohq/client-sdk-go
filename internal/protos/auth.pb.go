// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.3
// source: auth.proto

package client_sdk_go

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Aliases for categories of functionality.
type XGenerateApiTokenRequest_CacheRole int32

const (
	XGenerateApiTokenRequest_CachePermitNone XGenerateApiTokenRequest_CacheRole = 0
	// Restricts access to apis that read and write data from caches: No higher level resource description or modification.
	XGenerateApiTokenRequest_CacheReadWrite XGenerateApiTokenRequest_CacheRole = 1
	// Restricts access to apis that read from caches: No higher level resource description or modification.
	XGenerateApiTokenRequest_CacheReadOnly XGenerateApiTokenRequest_CacheRole = 2
)

// Enum value maps for XGenerateApiTokenRequest_CacheRole.
var (
	XGenerateApiTokenRequest_CacheRole_name = map[int32]string{
		0: "CachePermitNone",
		1: "CacheReadWrite",
		2: "CacheReadOnly",
	}
	XGenerateApiTokenRequest_CacheRole_value = map[string]int32{
		"CachePermitNone": 0,
		"CacheReadWrite":  1,
		"CacheReadOnly":   2,
	}
)

func (x XGenerateApiTokenRequest_CacheRole) Enum() *XGenerateApiTokenRequest_CacheRole {
	p := new(XGenerateApiTokenRequest_CacheRole)
	*p = x
	return p
}

func (x XGenerateApiTokenRequest_CacheRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XGenerateApiTokenRequest_CacheRole) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_proto_enumTypes[0].Descriptor()
}

func (XGenerateApiTokenRequest_CacheRole) Type() protoreflect.EnumType {
	return &file_auth_proto_enumTypes[0]
}

func (x XGenerateApiTokenRequest_CacheRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XGenerateApiTokenRequest_CacheRole.Descriptor instead.
func (XGenerateApiTokenRequest_CacheRole) EnumDescriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 0}
}

// Aliases for categories of functionality.
type XGenerateApiTokenRequest_TopicRole int32

const (
	XGenerateApiTokenRequest_TopicPermitNone XGenerateApiTokenRequest_TopicRole = 0
	// Restricts access to apis that read and write data from topics: No higher level resource description or modification.
	XGenerateApiTokenRequest_TopicReadWrite XGenerateApiTokenRequest_TopicRole = 1
	// Restricts access to apis that read from topics: No higher level resource description or modification.
	XGenerateApiTokenRequest_TopicReadOnly XGenerateApiTokenRequest_TopicRole = 2
)

// Enum value maps for XGenerateApiTokenRequest_TopicRole.
var (
	XGenerateApiTokenRequest_TopicRole_name = map[int32]string{
		0: "TopicPermitNone",
		1: "TopicReadWrite",
		2: "TopicReadOnly",
	}
	XGenerateApiTokenRequest_TopicRole_value = map[string]int32{
		"TopicPermitNone": 0,
		"TopicReadWrite":  1,
		"TopicReadOnly":   2,
	}
)

func (x XGenerateApiTokenRequest_TopicRole) Enum() *XGenerateApiTokenRequest_TopicRole {
	p := new(XGenerateApiTokenRequest_TopicRole)
	*p = x
	return p
}

func (x XGenerateApiTokenRequest_TopicRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XGenerateApiTokenRequest_TopicRole) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_proto_enumTypes[1].Descriptor()
}

func (XGenerateApiTokenRequest_TopicRole) Type() protoreflect.EnumType {
	return &file_auth_proto_enumTypes[1]
}

func (x XGenerateApiTokenRequest_TopicRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XGenerateApiTokenRequest_TopicRole.Descriptor instead.
func (XGenerateApiTokenRequest_TopicRole) EnumDescriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 1}
}

type XGenerateApiTokenRequest_SuperUserPermissions int32

const (
	XGenerateApiTokenRequest_SuperUser XGenerateApiTokenRequest_SuperUserPermissions = 0
)

// Enum value maps for XGenerateApiTokenRequest_SuperUserPermissions.
var (
	XGenerateApiTokenRequest_SuperUserPermissions_name = map[int32]string{
		0: "SuperUser",
	}
	XGenerateApiTokenRequest_SuperUserPermissions_value = map[string]int32{
		"SuperUser": 0,
	}
)

func (x XGenerateApiTokenRequest_SuperUserPermissions) Enum() *XGenerateApiTokenRequest_SuperUserPermissions {
	p := new(XGenerateApiTokenRequest_SuperUserPermissions)
	*p = x
	return p
}

func (x XGenerateApiTokenRequest_SuperUserPermissions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XGenerateApiTokenRequest_SuperUserPermissions) Descriptor() protoreflect.EnumDescriptor {
	return file_auth_proto_enumTypes[2].Descriptor()
}

func (XGenerateApiTokenRequest_SuperUserPermissions) Type() protoreflect.EnumType {
	return &file_auth_proto_enumTypes[2]
}

func (x XGenerateApiTokenRequest_SuperUserPermissions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XGenerateApiTokenRequest_SuperUserPermissions.Descriptor instead.
func (XGenerateApiTokenRequest_SuperUserPermissions) EnumDescriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 2}
}

type XLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XLoginRequest) Reset() {
	*x = XLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XLoginRequest) ProtoMessage() {}

func (x *XLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XLoginRequest.ProtoReflect.Descriptor instead.
func (*XLoginRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{0}
}

type XLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to State:
	//
	//	*XLoginResponse_DirectBrowser_
	//	*XLoginResponse_LoggedIn_
	//	*XLoginResponse_Message_
	//	*XLoginResponse_Error_
	State isXLoginResponse_State `protobuf_oneof:"state"`
}

func (x *XLoginResponse) Reset() {
	*x = XLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XLoginResponse) ProtoMessage() {}

func (x *XLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XLoginResponse.ProtoReflect.Descriptor instead.
func (*XLoginResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1}
}

func (m *XLoginResponse) GetState() isXLoginResponse_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *XLoginResponse) GetDirectBrowser() *XLoginResponse_DirectBrowser {
	if x, ok := x.GetState().(*XLoginResponse_DirectBrowser_); ok {
		return x.DirectBrowser
	}
	return nil
}

func (x *XLoginResponse) GetLoggedIn() *XLoginResponse_LoggedIn {
	if x, ok := x.GetState().(*XLoginResponse_LoggedIn_); ok {
		return x.LoggedIn
	}
	return nil
}

func (x *XLoginResponse) GetMessage() *XLoginResponse_Message {
	if x, ok := x.GetState().(*XLoginResponse_Message_); ok {
		return x.Message
	}
	return nil
}

func (x *XLoginResponse) GetError() *XLoginResponse_Error {
	if x, ok := x.GetState().(*XLoginResponse_Error_); ok {
		return x.Error
	}
	return nil
}

type isXLoginResponse_State interface {
	isXLoginResponse_State()
}

type XLoginResponse_DirectBrowser_ struct {
	DirectBrowser *XLoginResponse_DirectBrowser `protobuf:"bytes,1,opt,name=direct_browser,json=directBrowser,proto3,oneof"`
}

type XLoginResponse_LoggedIn_ struct {
	LoggedIn *XLoginResponse_LoggedIn `protobuf:"bytes,2,opt,name=logged_in,json=loggedIn,proto3,oneof"`
}

type XLoginResponse_Message_ struct {
	Message *XLoginResponse_Message `protobuf:"bytes,3,opt,name=message,proto3,oneof"`
}

type XLoginResponse_Error_ struct {
	Error *XLoginResponse_Error `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*XLoginResponse_DirectBrowser_) isXLoginResponse_State() {}

func (*XLoginResponse_LoggedIn_) isXLoginResponse_State() {}

func (*XLoginResponse_Message_) isXLoginResponse_State() {}

func (*XLoginResponse_Error_) isXLoginResponse_State() {}

type XGenerateApiTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Expiry:
	//
	//	*XGenerateApiTokenRequest_Never_
	//	*XGenerateApiTokenRequest_Expires_
	Expiry      isXGenerateApiTokenRequest_Expiry     `protobuf_oneof:"expiry"`
	AuthToken   string                                `protobuf:"bytes,3,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Permissions *XGenerateApiTokenRequest_Permissions `protobuf:"bytes,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *XGenerateApiTokenRequest) Reset() {
	*x = XGenerateApiTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest) ProtoMessage() {}

func (x *XGenerateApiTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2}
}

func (m *XGenerateApiTokenRequest) GetExpiry() isXGenerateApiTokenRequest_Expiry {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (x *XGenerateApiTokenRequest) GetNever() *XGenerateApiTokenRequest_Never {
	if x, ok := x.GetExpiry().(*XGenerateApiTokenRequest_Never_); ok {
		return x.Never
	}
	return nil
}

func (x *XGenerateApiTokenRequest) GetExpires() *XGenerateApiTokenRequest_Expires {
	if x, ok := x.GetExpiry().(*XGenerateApiTokenRequest_Expires_); ok {
		return x.Expires
	}
	return nil
}

func (x *XGenerateApiTokenRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *XGenerateApiTokenRequest) GetPermissions() *XGenerateApiTokenRequest_Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type isXGenerateApiTokenRequest_Expiry interface {
	isXGenerateApiTokenRequest_Expiry()
}

type XGenerateApiTokenRequest_Never_ struct {
	Never *XGenerateApiTokenRequest_Never `protobuf:"bytes,1,opt,name=never,proto3,oneof"`
}

type XGenerateApiTokenRequest_Expires_ struct {
	Expires *XGenerateApiTokenRequest_Expires `protobuf:"bytes,2,opt,name=expires,proto3,oneof"`
}

func (*XGenerateApiTokenRequest_Never_) isXGenerateApiTokenRequest_Expiry() {}

func (*XGenerateApiTokenRequest_Expires_) isXGenerateApiTokenRequest_Expiry() {}

type XGenerateApiTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the api key used for authentication against Momento backend
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// the token that will allow the api token to be refreshed, which will
	// give you back a new refresh and api token
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// the Momento endpoint that this token is allowed to make requests against
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// epoch seconds when the api token expires
	ValidUntil uint64 `protobuf:"varint,4,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
}

func (x *XGenerateApiTokenResponse) Reset() {
	*x = XGenerateApiTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenResponse) ProtoMessage() {}

func (x *XGenerateApiTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenResponse.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{3}
}

func (x *XGenerateApiTokenResponse) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *XGenerateApiTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *XGenerateApiTokenResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *XGenerateApiTokenResponse) GetValidUntil() uint64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

type XRefreshApiTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the existing api token to be refreshed
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// the refresh token that was generated with that api token
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *XRefreshApiTokenRequest) Reset() {
	*x = XRefreshApiTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRefreshApiTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRefreshApiTokenRequest) ProtoMessage() {}

func (x *XRefreshApiTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRefreshApiTokenRequest.ProtoReflect.Descriptor instead.
func (*XRefreshApiTokenRequest) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{4}
}

func (x *XRefreshApiTokenRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *XRefreshApiTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type XRefreshApiTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the new api key used for authentication against Momento backend
	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// the token that will allow the api token to be refreshed, which will
	// give you back a new refresh and api token
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// the Momento endpoint that this token is allowed to make requests against
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// epoch seconds when the api token expires
	ValidUntil uint64 `protobuf:"varint,4,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
}

func (x *XRefreshApiTokenResponse) Reset() {
	*x = XRefreshApiTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XRefreshApiTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XRefreshApiTokenResponse) ProtoMessage() {}

func (x *XRefreshApiTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XRefreshApiTokenResponse.ProtoReflect.Descriptor instead.
func (*XRefreshApiTokenResponse) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{5}
}

func (x *XRefreshApiTokenResponse) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *XRefreshApiTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *XRefreshApiTokenResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *XRefreshApiTokenResponse) GetValidUntil() uint64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

// Terminal state, login success
type XLoginResponse_LoggedIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionToken string `protobuf:"bytes,1,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	// How many seconds the token was valid for when issued.
	// Will vary slightly from reality upon receipt, as
	// time has passed since the token was minted.
	// You might expect to see this true to within 10
	// seconds of client-side timekeeping but as is
	// ever the case, there are no guarantees with
	// public network timing.
	ValidForSeconds uint32 `protobuf:"varint,2,opt,name=valid_for_seconds,json=validForSeconds,proto3" json:"valid_for_seconds,omitempty"`
}

func (x *XLoginResponse_LoggedIn) Reset() {
	*x = XLoginResponse_LoggedIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XLoginResponse_LoggedIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XLoginResponse_LoggedIn) ProtoMessage() {}

func (x *XLoginResponse_LoggedIn) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XLoginResponse_LoggedIn.ProtoReflect.Descriptor instead.
func (*XLoginResponse_LoggedIn) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1, 0}
}

func (x *XLoginResponse_LoggedIn) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *XLoginResponse_LoggedIn) GetValidForSeconds() uint32 {
	if x != nil {
		return x.ValidForSeconds
	}
	return 0
}

// Terminal state, login error
type XLoginResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *XLoginResponse_Error) Reset() {
	*x = XLoginResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XLoginResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XLoginResponse_Error) ProtoMessage() {}

func (x *XLoginResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XLoginResponse_Error.ProtoReflect.Descriptor instead.
func (*XLoginResponse_Error) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1, 1}
}

func (x *XLoginResponse_Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Open a browser to a url, for interactive login
type XLoginResponse_DirectBrowser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *XLoginResponse_DirectBrowser) Reset() {
	*x = XLoginResponse_DirectBrowser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XLoginResponse_DirectBrowser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XLoginResponse_DirectBrowser) ProtoMessage() {}

func (x *XLoginResponse_DirectBrowser) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XLoginResponse_DirectBrowser.ProtoReflect.Descriptor instead.
func (*XLoginResponse_DirectBrowser) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1, 2}
}

func (x *XLoginResponse_DirectBrowser) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Logging info about the login process
type XLoginResponse_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *XLoginResponse_Message) Reset() {
	*x = XLoginResponse_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XLoginResponse_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XLoginResponse_Message) ProtoMessage() {}

func (x *XLoginResponse_Message) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XLoginResponse_Message.ProtoReflect.Descriptor instead.
func (*XLoginResponse_Message) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1, 3}
}

func (x *XLoginResponse_Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// generate a token that will never expire
type XGenerateApiTokenRequest_Never struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XGenerateApiTokenRequest_Never) Reset() {
	*x = XGenerateApiTokenRequest_Never{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_Never) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_Never) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_Never) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_Never.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_Never) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 0}
}

// generate a token that has an expiry
type XGenerateApiTokenRequest_Expires struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// how many seconds do you want the api token to be valid for?
	ValidForSeconds uint32 `protobuf:"varint,1,opt,name=valid_for_seconds,json=validForSeconds,proto3" json:"valid_for_seconds,omitempty"`
}

func (x *XGenerateApiTokenRequest_Expires) Reset() {
	*x = XGenerateApiTokenRequest_Expires{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_Expires) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_Expires) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_Expires) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_Expires.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_Expires) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 1}
}

func (x *XGenerateApiTokenRequest_Expires) GetValidForSeconds() uint32 {
	if x != nil {
		return x.ValidForSeconds
	}
	return 0
}

type XGenerateApiTokenRequest_Permissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*XGenerateApiTokenRequest_Permissions_SuperUser
	//	*XGenerateApiTokenRequest_Permissions_Explicit
	Kind isXGenerateApiTokenRequest_Permissions_Kind `protobuf_oneof:"kind"`
}

func (x *XGenerateApiTokenRequest_Permissions) Reset() {
	*x = XGenerateApiTokenRequest_Permissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_Permissions) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_Permissions.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_Permissions) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 2}
}

func (m *XGenerateApiTokenRequest_Permissions) GetKind() isXGenerateApiTokenRequest_Permissions_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *XGenerateApiTokenRequest_Permissions) GetSuperUser() XGenerateApiTokenRequest_SuperUserPermissions {
	if x, ok := x.GetKind().(*XGenerateApiTokenRequest_Permissions_SuperUser); ok {
		return x.SuperUser
	}
	return XGenerateApiTokenRequest_SuperUser
}

func (x *XGenerateApiTokenRequest_Permissions) GetExplicit() *XGenerateApiTokenRequest_ExplicitPermissions {
	if x, ok := x.GetKind().(*XGenerateApiTokenRequest_Permissions_Explicit); ok {
		return x.Explicit
	}
	return nil
}

type isXGenerateApiTokenRequest_Permissions_Kind interface {
	isXGenerateApiTokenRequest_Permissions_Kind()
}

type XGenerateApiTokenRequest_Permissions_SuperUser struct {
	SuperUser XGenerateApiTokenRequest_SuperUserPermissions `protobuf:"varint,1,opt,name=super_user,json=superUser,proto3,enum=auth.XGenerateApiTokenRequest_SuperUserPermissions,oneof"`
}

type XGenerateApiTokenRequest_Permissions_Explicit struct {
	Explicit *XGenerateApiTokenRequest_ExplicitPermissions `protobuf:"bytes,2,opt,name=explicit,proto3,oneof"`
}

func (*XGenerateApiTokenRequest_Permissions_SuperUser) isXGenerateApiTokenRequest_Permissions_Kind() {
}

func (*XGenerateApiTokenRequest_Permissions_Explicit) isXGenerateApiTokenRequest_Permissions_Kind() {}

type XGenerateApiTokenRequest_ExplicitPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []*XGenerateApiTokenRequest_PermissionsType `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *XGenerateApiTokenRequest_ExplicitPermissions) Reset() {
	*x = XGenerateApiTokenRequest_ExplicitPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_ExplicitPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_ExplicitPermissions) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_ExplicitPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_ExplicitPermissions.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_ExplicitPermissions) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 3}
}

func (x *XGenerateApiTokenRequest_ExplicitPermissions) GetPermissions() []*XGenerateApiTokenRequest_PermissionsType {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type XGenerateApiTokenRequest_PermissionsType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*XGenerateApiTokenRequest_PermissionsType_CachePermissions_
	//	*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_
	Kind isXGenerateApiTokenRequest_PermissionsType_Kind `protobuf_oneof:"kind"`
}

func (x *XGenerateApiTokenRequest_PermissionsType) Reset() {
	*x = XGenerateApiTokenRequest_PermissionsType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_PermissionsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_PermissionsType) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_PermissionsType) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_PermissionsType.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_PermissionsType) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 4}
}

func (m *XGenerateApiTokenRequest_PermissionsType) GetKind() isXGenerateApiTokenRequest_PermissionsType_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType) GetCachePermissions() *XGenerateApiTokenRequest_PermissionsType_CachePermissions {
	if x, ok := x.GetKind().(*XGenerateApiTokenRequest_PermissionsType_CachePermissions_); ok {
		return x.CachePermissions
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType) GetTopicPermissions() *XGenerateApiTokenRequest_PermissionsType_TopicPermissions {
	if x, ok := x.GetKind().(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_); ok {
		return x.TopicPermissions
	}
	return nil
}

type isXGenerateApiTokenRequest_PermissionsType_Kind interface {
	isXGenerateApiTokenRequest_PermissionsType_Kind()
}

type XGenerateApiTokenRequest_PermissionsType_CachePermissions_ struct {
	CachePermissions *XGenerateApiTokenRequest_PermissionsType_CachePermissions `protobuf:"bytes,1,opt,name=cache_permissions,json=cachePermissions,proto3,oneof"`
}

type XGenerateApiTokenRequest_PermissionsType_TopicPermissions_ struct {
	TopicPermissions *XGenerateApiTokenRequest_PermissionsType_TopicPermissions `protobuf:"bytes,2,opt,name=topic_permissions,json=topicPermissions,proto3,oneof"`
}

func (*XGenerateApiTokenRequest_PermissionsType_CachePermissions_) isXGenerateApiTokenRequest_PermissionsType_Kind() {
}

func (*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_) isXGenerateApiTokenRequest_PermissionsType_Kind() {
}

type XGenerateApiTokenRequest_PermissionsType_All struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XGenerateApiTokenRequest_PermissionsType_All) Reset() {
	*x = XGenerateApiTokenRequest_PermissionsType_All{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_PermissionsType_All) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_PermissionsType_All) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_PermissionsType_All) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_PermissionsType_All.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_PermissionsType_All) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 4, 0}
}

type XGenerateApiTokenRequest_PermissionsType_CacheSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*XGenerateApiTokenRequest_PermissionsType_CacheSelector_CacheName
	Kind isXGenerateApiTokenRequest_PermissionsType_CacheSelector_Kind `protobuf_oneof:"kind"`
}

func (x *XGenerateApiTokenRequest_PermissionsType_CacheSelector) Reset() {
	*x = XGenerateApiTokenRequest_PermissionsType_CacheSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_PermissionsType_CacheSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_PermissionsType_CacheSelector) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_PermissionsType_CacheSelector) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_PermissionsType_CacheSelector.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_PermissionsType_CacheSelector) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 4, 1}
}

func (m *XGenerateApiTokenRequest_PermissionsType_CacheSelector) GetKind() isXGenerateApiTokenRequest_PermissionsType_CacheSelector_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType_CacheSelector) GetCacheName() string {
	if x, ok := x.GetKind().(*XGenerateApiTokenRequest_PermissionsType_CacheSelector_CacheName); ok {
		return x.CacheName
	}
	return ""
}

type isXGenerateApiTokenRequest_PermissionsType_CacheSelector_Kind interface {
	isXGenerateApiTokenRequest_PermissionsType_CacheSelector_Kind()
}

type XGenerateApiTokenRequest_PermissionsType_CacheSelector_CacheName struct {
	CacheName string `protobuf:"bytes,1,opt,name=cache_name,json=cacheName,proto3,oneof"`
}

func (*XGenerateApiTokenRequest_PermissionsType_CacheSelector_CacheName) isXGenerateApiTokenRequest_PermissionsType_CacheSelector_Kind() {
}

type XGenerateApiTokenRequest_PermissionsType_CachePermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role XGenerateApiTokenRequest_CacheRole `protobuf:"varint,1,opt,name=role,proto3,enum=auth.XGenerateApiTokenRequest_CacheRole" json:"role,omitempty"`
	// Types that are assignable to Cache:
	//
	//	*XGenerateApiTokenRequest_PermissionsType_CachePermissions_AllCaches
	//	*XGenerateApiTokenRequest_PermissionsType_CachePermissions_CacheSelector
	Cache isXGenerateApiTokenRequest_PermissionsType_CachePermissions_Cache `protobuf_oneof:"cache"`
}

func (x *XGenerateApiTokenRequest_PermissionsType_CachePermissions) Reset() {
	*x = XGenerateApiTokenRequest_PermissionsType_CachePermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_PermissionsType_CachePermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_PermissionsType_CachePermissions) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_PermissionsType_CachePermissions) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_PermissionsType_CachePermissions.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_PermissionsType_CachePermissions) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 4, 2}
}

func (x *XGenerateApiTokenRequest_PermissionsType_CachePermissions) GetRole() XGenerateApiTokenRequest_CacheRole {
	if x != nil {
		return x.Role
	}
	return XGenerateApiTokenRequest_CachePermitNone
}

func (m *XGenerateApiTokenRequest_PermissionsType_CachePermissions) GetCache() isXGenerateApiTokenRequest_PermissionsType_CachePermissions_Cache {
	if m != nil {
		return m.Cache
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType_CachePermissions) GetAllCaches() *XGenerateApiTokenRequest_PermissionsType_All {
	if x, ok := x.GetCache().(*XGenerateApiTokenRequest_PermissionsType_CachePermissions_AllCaches); ok {
		return x.AllCaches
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType_CachePermissions) GetCacheSelector() *XGenerateApiTokenRequest_PermissionsType_CacheSelector {
	if x, ok := x.GetCache().(*XGenerateApiTokenRequest_PermissionsType_CachePermissions_CacheSelector); ok {
		return x.CacheSelector
	}
	return nil
}

type isXGenerateApiTokenRequest_PermissionsType_CachePermissions_Cache interface {
	isXGenerateApiTokenRequest_PermissionsType_CachePermissions_Cache()
}

type XGenerateApiTokenRequest_PermissionsType_CachePermissions_AllCaches struct {
	AllCaches *XGenerateApiTokenRequest_PermissionsType_All `protobuf:"bytes,2,opt,name=all_caches,json=allCaches,proto3,oneof"`
}

type XGenerateApiTokenRequest_PermissionsType_CachePermissions_CacheSelector struct {
	CacheSelector *XGenerateApiTokenRequest_PermissionsType_CacheSelector `protobuf:"bytes,3,opt,name=cache_selector,json=cacheSelector,proto3,oneof"`
}

func (*XGenerateApiTokenRequest_PermissionsType_CachePermissions_AllCaches) isXGenerateApiTokenRequest_PermissionsType_CachePermissions_Cache() {
}

func (*XGenerateApiTokenRequest_PermissionsType_CachePermissions_CacheSelector) isXGenerateApiTokenRequest_PermissionsType_CachePermissions_Cache() {
}

type XGenerateApiTokenRequest_PermissionsType_TopicSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*XGenerateApiTokenRequest_PermissionsType_TopicSelector_TopicName
	Kind isXGenerateApiTokenRequest_PermissionsType_TopicSelector_Kind `protobuf_oneof:"kind"`
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicSelector) Reset() {
	*x = XGenerateApiTokenRequest_PermissionsType_TopicSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_PermissionsType_TopicSelector) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicSelector) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_PermissionsType_TopicSelector.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_PermissionsType_TopicSelector) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 4, 3}
}

func (m *XGenerateApiTokenRequest_PermissionsType_TopicSelector) GetKind() isXGenerateApiTokenRequest_PermissionsType_TopicSelector_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicSelector) GetTopicName() string {
	if x, ok := x.GetKind().(*XGenerateApiTokenRequest_PermissionsType_TopicSelector_TopicName); ok {
		return x.TopicName
	}
	return ""
}

type isXGenerateApiTokenRequest_PermissionsType_TopicSelector_Kind interface {
	isXGenerateApiTokenRequest_PermissionsType_TopicSelector_Kind()
}

type XGenerateApiTokenRequest_PermissionsType_TopicSelector_TopicName struct {
	TopicName string `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3,oneof"`
}

func (*XGenerateApiTokenRequest_PermissionsType_TopicSelector_TopicName) isXGenerateApiTokenRequest_PermissionsType_TopicSelector_Kind() {
}

type XGenerateApiTokenRequest_PermissionsType_TopicPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role XGenerateApiTokenRequest_TopicRole `protobuf:"varint,1,opt,name=role,proto3,enum=auth.XGenerateApiTokenRequest_TopicRole" json:"role,omitempty"`
	// Types that are assignable to Cache:
	//
	//	*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllCaches
	//	*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_CacheSelector
	Cache isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Cache `protobuf_oneof:"cache"`
	// Types that are assignable to Topic:
	//
	//	*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllTopics
	//	*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_TopicSelector
	Topic isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Topic `protobuf_oneof:"topic"`
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) Reset() {
	*x = XGenerateApiTokenRequest_PermissionsType_TopicPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGenerateApiTokenRequest_PermissionsType_TopicPermissions) ProtoMessage() {}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGenerateApiTokenRequest_PermissionsType_TopicPermissions.ProtoReflect.Descriptor instead.
func (*XGenerateApiTokenRequest_PermissionsType_TopicPermissions) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 4, 4}
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) GetRole() XGenerateApiTokenRequest_TopicRole {
	if x != nil {
		return x.Role
	}
	return XGenerateApiTokenRequest_TopicPermitNone
}

func (m *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) GetCache() isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Cache {
	if m != nil {
		return m.Cache
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) GetAllCaches() *XGenerateApiTokenRequest_PermissionsType_All {
	if x, ok := x.GetCache().(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllCaches); ok {
		return x.AllCaches
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) GetCacheSelector() *XGenerateApiTokenRequest_PermissionsType_CacheSelector {
	if x, ok := x.GetCache().(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_CacheSelector); ok {
		return x.CacheSelector
	}
	return nil
}

func (m *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) GetTopic() isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Topic {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) GetAllTopics() *XGenerateApiTokenRequest_PermissionsType_All {
	if x, ok := x.GetTopic().(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllTopics); ok {
		return x.AllTopics
	}
	return nil
}

func (x *XGenerateApiTokenRequest_PermissionsType_TopicPermissions) GetTopicSelector() *XGenerateApiTokenRequest_PermissionsType_TopicSelector {
	if x, ok := x.GetTopic().(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_TopicSelector); ok {
		return x.TopicSelector
	}
	return nil
}

type isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Cache interface {
	isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Cache()
}

type XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllCaches struct {
	AllCaches *XGenerateApiTokenRequest_PermissionsType_All `protobuf:"bytes,2,opt,name=all_caches,json=allCaches,proto3,oneof"`
}

type XGenerateApiTokenRequest_PermissionsType_TopicPermissions_CacheSelector struct {
	CacheSelector *XGenerateApiTokenRequest_PermissionsType_CacheSelector `protobuf:"bytes,3,opt,name=cache_selector,json=cacheSelector,proto3,oneof"`
}

func (*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllCaches) isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Cache() {
}

func (*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_CacheSelector) isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Cache() {
}

type isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Topic interface {
	isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Topic()
}

type XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllTopics struct {
	AllTopics *XGenerateApiTokenRequest_PermissionsType_All `protobuf:"bytes,4,opt,name=all_topics,json=allTopics,proto3,oneof"`
}

type XGenerateApiTokenRequest_PermissionsType_TopicPermissions_TopicSelector struct {
	TopicSelector *XGenerateApiTokenRequest_PermissionsType_TopicSelector `protobuf:"bytes,5,opt,name=topic_selector,json=topicSelector,proto3,oneof"`
}

func (*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllTopics) isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Topic() {
}

func (*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_TopicSelector) isXGenerateApiTokenRequest_PermissionsType_TopicPermissions_Topic() {
}

var File_auth_proto protoreflect.FileDescriptor

var file_auth_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0x0f, 0x0a, 0x0d, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xdc, 0x03, 0x0a, 0x0e, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x67, 0x65, 0x64, 0x49, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49,
	0x6e, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0x5b, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0x29, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x21, 0x0a, 0x0d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x1d, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0xa1, 0x0f, 0x0a, 0x18, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x05, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e,
	0x65, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x12, 0x42, 0x0a,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x4c, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x07,
	0x0a, 0x05, 0x4e, 0x65, 0x76, 0x65, 0x72, 0x1a, 0x35, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0xbd,
	0x01, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54,
	0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x08, 0x65, 0x78,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x67,
	0x0a, 0x13, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xe9, 0x08, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6e, 0x0a, 0x11, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x10, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6e, 0x0a, 0x11, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x05, 0x0a, 0x03, 0x41,
	0x6c, 0x6c, 0x1a, 0x38, 0x0a, 0x0d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0x95, 0x02, 0x0a,
	0x10, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3c, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x53, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x1a, 0x38, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x1a, 0xda,
	0x03, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x53, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x6c,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0d,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x53, 0x0a,
	0x0a, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x48, 0x01, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x12, 0x65, 0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x01, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x06, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x22, 0x47, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x10, 0x02, 0x22, 0x47, 0x0a, 0x09,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x6c, 0x79, 0x10, 0x02, 0x22, 0x25, 0x0a, 0x14, 0x53, 0x75, 0x70, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x75, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x10, 0x00, 0x42, 0x08, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x96, 0x01, 0x0a, 0x19, 0x5f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22,
	0x57, 0x0a, 0x17, 0x5f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x70, 0x69, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70,
	0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x18, 0x5f, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x32, 0xe9, 0x01, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x05, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x55, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x5f, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x5f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x70, 0x69, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x5f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42, 0x0a, 0x0c,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x50, 0x01, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x6f, 0x68, 0x71, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2d,
	0x67, 0x6f, 0x3b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x64, 0x6b, 0x5f, 0x67, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auth_proto_rawDescOnce sync.Once
	file_auth_proto_rawDescData = file_auth_proto_rawDesc
)

func file_auth_proto_rawDescGZIP() []byte {
	file_auth_proto_rawDescOnce.Do(func() {
		file_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_proto_rawDescData)
	})
	return file_auth_proto_rawDescData
}

var file_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_auth_proto_goTypes = []interface{}{
	(XGenerateApiTokenRequest_CacheRole)(0),                           // 0: auth._GenerateApiTokenRequest.CacheRole
	(XGenerateApiTokenRequest_TopicRole)(0),                           // 1: auth._GenerateApiTokenRequest.TopicRole
	(XGenerateApiTokenRequest_SuperUserPermissions)(0),                // 2: auth._GenerateApiTokenRequest.SuperUserPermissions
	(*XLoginRequest)(nil),                                             // 3: auth._LoginRequest
	(*XLoginResponse)(nil),                                            // 4: auth._LoginResponse
	(*XGenerateApiTokenRequest)(nil),                                  // 5: auth._GenerateApiTokenRequest
	(*XGenerateApiTokenResponse)(nil),                                 // 6: auth._GenerateApiTokenResponse
	(*XRefreshApiTokenRequest)(nil),                                   // 7: auth._RefreshApiTokenRequest
	(*XRefreshApiTokenResponse)(nil),                                  // 8: auth._RefreshApiTokenResponse
	(*XLoginResponse_LoggedIn)(nil),                                   // 9: auth._LoginResponse.LoggedIn
	(*XLoginResponse_Error)(nil),                                      // 10: auth._LoginResponse.Error
	(*XLoginResponse_DirectBrowser)(nil),                              // 11: auth._LoginResponse.DirectBrowser
	(*XLoginResponse_Message)(nil),                                    // 12: auth._LoginResponse.Message
	(*XGenerateApiTokenRequest_Never)(nil),                            // 13: auth._GenerateApiTokenRequest.Never
	(*XGenerateApiTokenRequest_Expires)(nil),                          // 14: auth._GenerateApiTokenRequest.Expires
	(*XGenerateApiTokenRequest_Permissions)(nil),                      // 15: auth._GenerateApiTokenRequest.Permissions
	(*XGenerateApiTokenRequest_ExplicitPermissions)(nil),              // 16: auth._GenerateApiTokenRequest.ExplicitPermissions
	(*XGenerateApiTokenRequest_PermissionsType)(nil),                  // 17: auth._GenerateApiTokenRequest.PermissionsType
	(*XGenerateApiTokenRequest_PermissionsType_All)(nil),              // 18: auth._GenerateApiTokenRequest.PermissionsType.All
	(*XGenerateApiTokenRequest_PermissionsType_CacheSelector)(nil),    // 19: auth._GenerateApiTokenRequest.PermissionsType.CacheSelector
	(*XGenerateApiTokenRequest_PermissionsType_CachePermissions)(nil), // 20: auth._GenerateApiTokenRequest.PermissionsType.CachePermissions
	(*XGenerateApiTokenRequest_PermissionsType_TopicSelector)(nil),    // 21: auth._GenerateApiTokenRequest.PermissionsType.TopicSelector
	(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions)(nil), // 22: auth._GenerateApiTokenRequest.PermissionsType.TopicPermissions
}
var file_auth_proto_depIdxs = []int32{
	11, // 0: auth._LoginResponse.direct_browser:type_name -> auth._LoginResponse.DirectBrowser
	9,  // 1: auth._LoginResponse.logged_in:type_name -> auth._LoginResponse.LoggedIn
	12, // 2: auth._LoginResponse.message:type_name -> auth._LoginResponse.Message
	10, // 3: auth._LoginResponse.error:type_name -> auth._LoginResponse.Error
	13, // 4: auth._GenerateApiTokenRequest.never:type_name -> auth._GenerateApiTokenRequest.Never
	14, // 5: auth._GenerateApiTokenRequest.expires:type_name -> auth._GenerateApiTokenRequest.Expires
	15, // 6: auth._GenerateApiTokenRequest.permissions:type_name -> auth._GenerateApiTokenRequest.Permissions
	2,  // 7: auth._GenerateApiTokenRequest.Permissions.super_user:type_name -> auth._GenerateApiTokenRequest.SuperUserPermissions
	16, // 8: auth._GenerateApiTokenRequest.Permissions.explicit:type_name -> auth._GenerateApiTokenRequest.ExplicitPermissions
	17, // 9: auth._GenerateApiTokenRequest.ExplicitPermissions.permissions:type_name -> auth._GenerateApiTokenRequest.PermissionsType
	20, // 10: auth._GenerateApiTokenRequest.PermissionsType.cache_permissions:type_name -> auth._GenerateApiTokenRequest.PermissionsType.CachePermissions
	22, // 11: auth._GenerateApiTokenRequest.PermissionsType.topic_permissions:type_name -> auth._GenerateApiTokenRequest.PermissionsType.TopicPermissions
	0,  // 12: auth._GenerateApiTokenRequest.PermissionsType.CachePermissions.role:type_name -> auth._GenerateApiTokenRequest.CacheRole
	18, // 13: auth._GenerateApiTokenRequest.PermissionsType.CachePermissions.all_caches:type_name -> auth._GenerateApiTokenRequest.PermissionsType.All
	19, // 14: auth._GenerateApiTokenRequest.PermissionsType.CachePermissions.cache_selector:type_name -> auth._GenerateApiTokenRequest.PermissionsType.CacheSelector
	1,  // 15: auth._GenerateApiTokenRequest.PermissionsType.TopicPermissions.role:type_name -> auth._GenerateApiTokenRequest.TopicRole
	18, // 16: auth._GenerateApiTokenRequest.PermissionsType.TopicPermissions.all_caches:type_name -> auth._GenerateApiTokenRequest.PermissionsType.All
	19, // 17: auth._GenerateApiTokenRequest.PermissionsType.TopicPermissions.cache_selector:type_name -> auth._GenerateApiTokenRequest.PermissionsType.CacheSelector
	18, // 18: auth._GenerateApiTokenRequest.PermissionsType.TopicPermissions.all_topics:type_name -> auth._GenerateApiTokenRequest.PermissionsType.All
	21, // 19: auth._GenerateApiTokenRequest.PermissionsType.TopicPermissions.topic_selector:type_name -> auth._GenerateApiTokenRequest.PermissionsType.TopicSelector
	3,  // 20: auth.Auth.Login:input_type -> auth._LoginRequest
	5,  // 21: auth.Auth.GenerateApiToken:input_type -> auth._GenerateApiTokenRequest
	7,  // 22: auth.Auth.RefreshApiToken:input_type -> auth._RefreshApiTokenRequest
	4,  // 23: auth.Auth.Login:output_type -> auth._LoginResponse
	6,  // 24: auth.Auth.GenerateApiToken:output_type -> auth._GenerateApiTokenResponse
	8,  // 25: auth.Auth.RefreshApiToken:output_type -> auth._RefreshApiTokenResponse
	23, // [23:26] is the sub-list for method output_type
	20, // [20:23] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_auth_proto_init() }
func file_auth_proto_init() {
	if File_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRefreshApiTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XRefreshApiTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XLoginResponse_LoggedIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XLoginResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XLoginResponse_DirectBrowser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XLoginResponse_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_Never); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_Expires); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_Permissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_ExplicitPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_PermissionsType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_PermissionsType_All); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_PermissionsType_CacheSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_PermissionsType_CachePermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_PermissionsType_TopicSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_auth_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*XLoginResponse_DirectBrowser_)(nil),
		(*XLoginResponse_LoggedIn_)(nil),
		(*XLoginResponse_Message_)(nil),
		(*XLoginResponse_Error_)(nil),
	}
	file_auth_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*XGenerateApiTokenRequest_Never_)(nil),
		(*XGenerateApiTokenRequest_Expires_)(nil),
	}
	file_auth_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*XGenerateApiTokenRequest_Permissions_SuperUser)(nil),
		(*XGenerateApiTokenRequest_Permissions_Explicit)(nil),
	}
	file_auth_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*XGenerateApiTokenRequest_PermissionsType_CachePermissions_)(nil),
		(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_)(nil),
	}
	file_auth_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*XGenerateApiTokenRequest_PermissionsType_CacheSelector_CacheName)(nil),
	}
	file_auth_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*XGenerateApiTokenRequest_PermissionsType_CachePermissions_AllCaches)(nil),
		(*XGenerateApiTokenRequest_PermissionsType_CachePermissions_CacheSelector)(nil),
	}
	file_auth_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*XGenerateApiTokenRequest_PermissionsType_TopicSelector_TopicName)(nil),
	}
	file_auth_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllCaches)(nil),
		(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_CacheSelector)(nil),
		(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_AllTopics)(nil),
		(*XGenerateApiTokenRequest_PermissionsType_TopicPermissions_TopicSelector)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_proto_goTypes,
		DependencyIndexes: file_auth_proto_depIdxs,
		EnumInfos:         file_auth_proto_enumTypes,
		MessageInfos:      file_auth_proto_msgTypes,
	}.Build()
	File_auth_proto = out.File
	file_auth_proto_rawDesc = nil
	file_auth_proto_goTypes = nil
	file_auth_proto_depIdxs = nil
}
