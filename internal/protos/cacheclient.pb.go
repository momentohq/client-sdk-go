// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.24.4
// source: cacheclient.proto

package client_sdk_go

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ECacheResult int32

const (
	ECacheResult_Invalid ECacheResult = 0
	ECacheResult_Ok      ECacheResult = 1
	ECacheResult_Hit     ECacheResult = 2
	ECacheResult_Miss    ECacheResult = 3
)

// Enum value maps for ECacheResult.
var (
	ECacheResult_name = map[int32]string{
		0: "Invalid",
		1: "Ok",
		2: "Hit",
		3: "Miss",
	}
	ECacheResult_value = map[string]int32{
		"Invalid": 0,
		"Ok":      1,
		"Hit":     2,
		"Miss":    3,
	}
)

func (x ECacheResult) Enum() *ECacheResult {
	p := new(ECacheResult)
	*p = x
	return p
}

func (x ECacheResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECacheResult) Descriptor() protoreflect.EnumDescriptor {
	return file_cacheclient_proto_enumTypes[0].Descriptor()
}

func (ECacheResult) Type() protoreflect.EnumType {
	return &file_cacheclient_proto_enumTypes[0]
}

func (x ECacheResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ECacheResult.Descriptor instead.
func (ECacheResult) EnumDescriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{0}
}

type XItemGetTypeResponse_ItemType int32

const (
	XItemGetTypeResponse_SCALAR     XItemGetTypeResponse_ItemType = 0
	XItemGetTypeResponse_DICTIONARY XItemGetTypeResponse_ItemType = 1
	XItemGetTypeResponse_SET        XItemGetTypeResponse_ItemType = 2
	XItemGetTypeResponse_LIST       XItemGetTypeResponse_ItemType = 3
	XItemGetTypeResponse_SORTED_SET XItemGetTypeResponse_ItemType = 4
)

// Enum value maps for XItemGetTypeResponse_ItemType.
var (
	XItemGetTypeResponse_ItemType_name = map[int32]string{
		0: "SCALAR",
		1: "DICTIONARY",
		2: "SET",
		3: "LIST",
		4: "SORTED_SET",
	}
	XItemGetTypeResponse_ItemType_value = map[string]int32{
		"SCALAR":     0,
		"DICTIONARY": 1,
		"SET":        2,
		"LIST":       3,
		"SORTED_SET": 4,
	}
)

func (x XItemGetTypeResponse_ItemType) Enum() *XItemGetTypeResponse_ItemType {
	p := new(XItemGetTypeResponse_ItemType)
	*p = x
	return p
}

func (x XItemGetTypeResponse_ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XItemGetTypeResponse_ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_cacheclient_proto_enumTypes[1].Descriptor()
}

func (XItemGetTypeResponse_ItemType) Type() protoreflect.EnumType {
	return &file_cacheclient_proto_enumTypes[1]
}

func (x XItemGetTypeResponse_ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XItemGetTypeResponse_ItemType.Descriptor instead.
func (XItemGetTypeResponse_ItemType) EnumDescriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{21, 0}
}

type XSortedSetFetchRequest_Order int32

const (
	XSortedSetFetchRequest_ASCENDING  XSortedSetFetchRequest_Order = 0
	XSortedSetFetchRequest_DESCENDING XSortedSetFetchRequest_Order = 1
)

// Enum value maps for XSortedSetFetchRequest_Order.
var (
	XSortedSetFetchRequest_Order_name = map[int32]string{
		0: "ASCENDING",
		1: "DESCENDING",
	}
	XSortedSetFetchRequest_Order_value = map[string]int32{
		"ASCENDING":  0,
		"DESCENDING": 1,
	}
)

func (x XSortedSetFetchRequest_Order) Enum() *XSortedSetFetchRequest_Order {
	p := new(XSortedSetFetchRequest_Order)
	*p = x
	return p
}

func (x XSortedSetFetchRequest_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XSortedSetFetchRequest_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_cacheclient_proto_enumTypes[2].Descriptor()
}

func (XSortedSetFetchRequest_Order) Type() protoreflect.EnumType {
	return &file_cacheclient_proto_enumTypes[2]
}

func (x XSortedSetFetchRequest_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XSortedSetFetchRequest_Order.Descriptor instead.
func (XSortedSetFetchRequest_Order) EnumDescriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{75, 0}
}

type XSortedSetGetRankRequest_Order int32

const (
	XSortedSetGetRankRequest_ASCENDING  XSortedSetGetRankRequest_Order = 0
	XSortedSetGetRankRequest_DESCENDING XSortedSetGetRankRequest_Order = 1
)

// Enum value maps for XSortedSetGetRankRequest_Order.
var (
	XSortedSetGetRankRequest_Order_name = map[int32]string{
		0: "ASCENDING",
		1: "DESCENDING",
	}
	XSortedSetGetRankRequest_Order_value = map[string]int32{
		"ASCENDING":  0,
		"DESCENDING": 1,
	}
)

func (x XSortedSetGetRankRequest_Order) Enum() *XSortedSetGetRankRequest_Order {
	p := new(XSortedSetGetRankRequest_Order)
	*p = x
	return p
}

func (x XSortedSetGetRankRequest_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XSortedSetGetRankRequest_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_cacheclient_proto_enumTypes[3].Descriptor()
}

func (XSortedSetGetRankRequest_Order) Type() protoreflect.EnumType {
	return &file_cacheclient_proto_enumTypes[3]
}

func (x XSortedSetGetRankRequest_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XSortedSetGetRankRequest_Order.Descriptor instead.
func (XSortedSetGetRankRequest_Order) EnumDescriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{83, 0}
}

type XGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
}

func (x *XGetRequest) Reset() {
	*x = XGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGetRequest) ProtoMessage() {}

func (x *XGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGetRequest.ProtoReflect.Descriptor instead.
func (*XGetRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{0}
}

func (x *XGetRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

type XGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    ECacheResult `protobuf:"varint,1,opt,name=result,proto3,enum=cache_client.ECacheResult" json:"result,omitempty"`
	CacheBody []byte       `protobuf:"bytes,2,opt,name=cache_body,json=cacheBody,proto3" json:"cache_body,omitempty"`
	Message   string       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *XGetResponse) Reset() {
	*x = XGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGetResponse) ProtoMessage() {}

func (x *XGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGetResponse.ProtoReflect.Descriptor instead.
func (*XGetResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{1}
}

func (x *XGetResponse) GetResult() ECacheResult {
	if x != nil {
		return x.Result
	}
	return ECacheResult_Invalid
}

func (x *XGetResponse) GetCacheBody() []byte {
	if x != nil {
		return x.CacheBody
	}
	return nil
}

func (x *XGetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type XGetBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*XGetRequest `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *XGetBatchRequest) Reset() {
	*x = XGetBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XGetBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XGetBatchRequest) ProtoMessage() {}

func (x *XGetBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XGetBatchRequest.ProtoReflect.Descriptor instead.
func (*XGetBatchRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{2}
}

func (x *XGetBatchRequest) GetItems() []*XGetRequest {
	if x != nil {
		return x.Items
	}
	return nil
}

type XDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
}

func (x *XDeleteRequest) Reset() {
	*x = XDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDeleteRequest) ProtoMessage() {}

func (x *XDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDeleteRequest.ProtoReflect.Descriptor instead.
func (*XDeleteRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{3}
}

func (x *XDeleteRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

type XDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDeleteResponse) Reset() {
	*x = XDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDeleteResponse) ProtoMessage() {}

func (x *XDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDeleteResponse.ProtoReflect.Descriptor instead.
func (*XDeleteResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{4}
}

type XSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey        []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
	CacheBody       []byte `protobuf:"bytes,2,opt,name=cache_body,json=cacheBody,proto3" json:"cache_body,omitempty"`
	TtlMilliseconds uint64 `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
}

func (x *XSetRequest) Reset() {
	*x = XSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetRequest) ProtoMessage() {}

func (x *XSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetRequest.ProtoReflect.Descriptor instead.
func (*XSetRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{5}
}

func (x *XSetRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

func (x *XSetRequest) GetCacheBody() []byte {
	if x != nil {
		return x.CacheBody
	}
	return nil
}

func (x *XSetRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

type XSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  ECacheResult `protobuf:"varint,1,opt,name=result,proto3,enum=cache_client.ECacheResult" json:"result,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *XSetResponse) Reset() {
	*x = XSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetResponse) ProtoMessage() {}

func (x *XSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetResponse.ProtoReflect.Descriptor instead.
func (*XSetResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{6}
}

func (x *XSetResponse) GetResult() ECacheResult {
	if x != nil {
		return x.Result
	}
	return ECacheResult_Invalid
}

func (x *XSetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type XSetBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*XSetRequest `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *XSetBatchRequest) Reset() {
	*x = XSetBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetBatchRequest) ProtoMessage() {}

func (x *XSetBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetBatchRequest.ProtoReflect.Descriptor instead.
func (*XSetBatchRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{7}
}

func (x *XSetBatchRequest) GetItems() []*XSetRequest {
	if x != nil {
		return x.Items
	}
	return nil
}

type XSetIfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey        []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
	CacheBody       []byte `protobuf:"bytes,2,opt,name=cache_body,json=cacheBody,proto3" json:"cache_body,omitempty"`
	TtlMilliseconds uint64 `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	// Types that are assignable to Condition:
	//
	//	*XSetIfRequest_Present
	//	*XSetIfRequest_PresentAndNotEqual
	//	*XSetIfRequest_Absent
	//	*XSetIfRequest_Equal
	//	*XSetIfRequest_AbsentOrEqual
	//	*XSetIfRequest_NotEqual
	Condition isXSetIfRequest_Condition `protobuf_oneof:"condition"`
}

func (x *XSetIfRequest) Reset() {
	*x = XSetIfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetIfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetIfRequest) ProtoMessage() {}

func (x *XSetIfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetIfRequest.ProtoReflect.Descriptor instead.
func (*XSetIfRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{8}
}

func (x *XSetIfRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

func (x *XSetIfRequest) GetCacheBody() []byte {
	if x != nil {
		return x.CacheBody
	}
	return nil
}

func (x *XSetIfRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (m *XSetIfRequest) GetCondition() isXSetIfRequest_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (x *XSetIfRequest) GetPresent() *Present {
	if x, ok := x.GetCondition().(*XSetIfRequest_Present); ok {
		return x.Present
	}
	return nil
}

func (x *XSetIfRequest) GetPresentAndNotEqual() *PresentAndNotEqual {
	if x, ok := x.GetCondition().(*XSetIfRequest_PresentAndNotEqual); ok {
		return x.PresentAndNotEqual
	}
	return nil
}

func (x *XSetIfRequest) GetAbsent() *Absent {
	if x, ok := x.GetCondition().(*XSetIfRequest_Absent); ok {
		return x.Absent
	}
	return nil
}

func (x *XSetIfRequest) GetEqual() *Equal {
	if x, ok := x.GetCondition().(*XSetIfRequest_Equal); ok {
		return x.Equal
	}
	return nil
}

func (x *XSetIfRequest) GetAbsentOrEqual() *AbsentOrEqual {
	if x, ok := x.GetCondition().(*XSetIfRequest_AbsentOrEqual); ok {
		return x.AbsentOrEqual
	}
	return nil
}

func (x *XSetIfRequest) GetNotEqual() *NotEqual {
	if x, ok := x.GetCondition().(*XSetIfRequest_NotEqual); ok {
		return x.NotEqual
	}
	return nil
}

type isXSetIfRequest_Condition interface {
	isXSetIfRequest_Condition()
}

type XSetIfRequest_Present struct {
	Present *Present `protobuf:"bytes,4,opt,name=present,proto3,oneof"`
}

type XSetIfRequest_PresentAndNotEqual struct {
	PresentAndNotEqual *PresentAndNotEqual `protobuf:"bytes,5,opt,name=present_and_not_equal,json=presentAndNotEqual,proto3,oneof"`
}

type XSetIfRequest_Absent struct {
	Absent *Absent `protobuf:"bytes,6,opt,name=absent,proto3,oneof"`
}

type XSetIfRequest_Equal struct {
	Equal *Equal `protobuf:"bytes,7,opt,name=equal,proto3,oneof"`
}

type XSetIfRequest_AbsentOrEqual struct {
	AbsentOrEqual *AbsentOrEqual `protobuf:"bytes,8,opt,name=absent_or_equal,json=absentOrEqual,proto3,oneof"`
}

type XSetIfRequest_NotEqual struct {
	NotEqual *NotEqual `protobuf:"bytes,9,opt,name=not_equal,json=notEqual,proto3,oneof"`
}

func (*XSetIfRequest_Present) isXSetIfRequest_Condition() {}

func (*XSetIfRequest_PresentAndNotEqual) isXSetIfRequest_Condition() {}

func (*XSetIfRequest_Absent) isXSetIfRequest_Condition() {}

func (*XSetIfRequest_Equal) isXSetIfRequest_Condition() {}

func (*XSetIfRequest_AbsentOrEqual) isXSetIfRequest_Condition() {}

func (*XSetIfRequest_NotEqual) isXSetIfRequest_Condition() {}

type XSetIfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*XSetIfResponse_Stored
	//	*XSetIfResponse_NotStored
	Result isXSetIfResponse_Result `protobuf_oneof:"result"`
}

func (x *XSetIfResponse) Reset() {
	*x = XSetIfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetIfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetIfResponse) ProtoMessage() {}

func (x *XSetIfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetIfResponse.ProtoReflect.Descriptor instead.
func (*XSetIfResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{9}
}

func (m *XSetIfResponse) GetResult() isXSetIfResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *XSetIfResponse) GetStored() *XSetIfResponse_XStored {
	if x, ok := x.GetResult().(*XSetIfResponse_Stored); ok {
		return x.Stored
	}
	return nil
}

func (x *XSetIfResponse) GetNotStored() *XSetIfResponse_XNotStored {
	if x, ok := x.GetResult().(*XSetIfResponse_NotStored); ok {
		return x.NotStored
	}
	return nil
}

type isXSetIfResponse_Result interface {
	isXSetIfResponse_Result()
}

type XSetIfResponse_Stored struct {
	Stored *XSetIfResponse_XStored `protobuf:"bytes,1,opt,name=stored,proto3,oneof"`
}

type XSetIfResponse_NotStored struct {
	NotStored *XSetIfResponse_XNotStored `protobuf:"bytes,2,opt,name=not_stored,json=notStored,proto3,oneof"`
}

func (*XSetIfResponse_Stored) isXSetIfResponse_Result() {}

func (*XSetIfResponse_NotStored) isXSetIfResponse_Result() {}

type XSetIfNotExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey        []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
	CacheBody       []byte `protobuf:"bytes,2,opt,name=cache_body,json=cacheBody,proto3" json:"cache_body,omitempty"`
	TtlMilliseconds uint64 `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
}

func (x *XSetIfNotExistsRequest) Reset() {
	*x = XSetIfNotExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetIfNotExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetIfNotExistsRequest) ProtoMessage() {}

func (x *XSetIfNotExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetIfNotExistsRequest.ProtoReflect.Descriptor instead.
func (*XSetIfNotExistsRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{10}
}

func (x *XSetIfNotExistsRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

func (x *XSetIfNotExistsRequest) GetCacheBody() []byte {
	if x != nil {
		return x.CacheBody
	}
	return nil
}

func (x *XSetIfNotExistsRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

type XSetIfNotExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*XSetIfNotExistsResponse_Stored
	//	*XSetIfNotExistsResponse_NotStored
	Result isXSetIfNotExistsResponse_Result `protobuf_oneof:"result"`
}

func (x *XSetIfNotExistsResponse) Reset() {
	*x = XSetIfNotExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetIfNotExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetIfNotExistsResponse) ProtoMessage() {}

func (x *XSetIfNotExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetIfNotExistsResponse.ProtoReflect.Descriptor instead.
func (*XSetIfNotExistsResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{11}
}

func (m *XSetIfNotExistsResponse) GetResult() isXSetIfNotExistsResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *XSetIfNotExistsResponse) GetStored() *XSetIfNotExistsResponse_XStored {
	if x, ok := x.GetResult().(*XSetIfNotExistsResponse_Stored); ok {
		return x.Stored
	}
	return nil
}

func (x *XSetIfNotExistsResponse) GetNotStored() *XSetIfNotExistsResponse_XNotStored {
	if x, ok := x.GetResult().(*XSetIfNotExistsResponse_NotStored); ok {
		return x.NotStored
	}
	return nil
}

type isXSetIfNotExistsResponse_Result interface {
	isXSetIfNotExistsResponse_Result()
}

type XSetIfNotExistsResponse_Stored struct {
	Stored *XSetIfNotExistsResponse_XStored `protobuf:"bytes,1,opt,name=stored,proto3,oneof"`
}

type XSetIfNotExistsResponse_NotStored struct {
	NotStored *XSetIfNotExistsResponse_XNotStored `protobuf:"bytes,2,opt,name=not_stored,json=notStored,proto3,oneof"`
}

func (*XSetIfNotExistsResponse_Stored) isXSetIfNotExistsResponse_Result() {}

func (*XSetIfNotExistsResponse_NotStored) isXSetIfNotExistsResponse_Result() {}

type XKeysExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKeys [][]byte `protobuf:"bytes,1,rep,name=cache_keys,json=cacheKeys,proto3" json:"cache_keys,omitempty"`
}

func (x *XKeysExistRequest) Reset() {
	*x = XKeysExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XKeysExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XKeysExistRequest) ProtoMessage() {}

func (x *XKeysExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XKeysExistRequest.ProtoReflect.Descriptor instead.
func (*XKeysExistRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{12}
}

func (x *XKeysExistRequest) GetCacheKeys() [][]byte {
	if x != nil {
		return x.CacheKeys
	}
	return nil
}

type XKeysExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists []bool `protobuf:"varint,1,rep,packed,name=exists,proto3" json:"exists,omitempty"`
}

func (x *XKeysExistResponse) Reset() {
	*x = XKeysExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XKeysExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XKeysExistResponse) ProtoMessage() {}

func (x *XKeysExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XKeysExistResponse.ProtoReflect.Descriptor instead.
func (*XKeysExistResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{13}
}

func (x *XKeysExistResponse) GetExists() []bool {
	if x != nil {
		return x.Exists
	}
	return nil
}

type XIncrementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
	// Amount to add to the stored value.
	// If this key doesn't currently exist, it's created with this value (encoded as a base 10 string)
	Amount          int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	TtlMilliseconds uint64 `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
}

func (x *XIncrementRequest) Reset() {
	*x = XIncrementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XIncrementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XIncrementRequest) ProtoMessage() {}

func (x *XIncrementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XIncrementRequest.ProtoReflect.Descriptor instead.
func (*XIncrementRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{14}
}

func (x *XIncrementRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

func (x *XIncrementRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *XIncrementRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

type XIncrementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The value stored after the increment operation.
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *XIncrementResponse) Reset() {
	*x = XIncrementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XIncrementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XIncrementResponse) ProtoMessage() {}

func (x *XIncrementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XIncrementResponse.ProtoReflect.Descriptor instead.
func (*XIncrementResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{15}
}

func (x *XIncrementResponse) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type XUpdateTtlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
	// Types that are assignable to UpdateTtl:
	//
	//	*XUpdateTtlRequest_IncreaseToMilliseconds
	//	*XUpdateTtlRequest_DecreaseToMilliseconds
	//	*XUpdateTtlRequest_OverwriteToMilliseconds
	UpdateTtl isXUpdateTtlRequest_UpdateTtl `protobuf_oneof:"update_ttl"`
}

func (x *XUpdateTtlRequest) Reset() {
	*x = XUpdateTtlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XUpdateTtlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XUpdateTtlRequest) ProtoMessage() {}

func (x *XUpdateTtlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XUpdateTtlRequest.ProtoReflect.Descriptor instead.
func (*XUpdateTtlRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{16}
}

func (x *XUpdateTtlRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

func (m *XUpdateTtlRequest) GetUpdateTtl() isXUpdateTtlRequest_UpdateTtl {
	if m != nil {
		return m.UpdateTtl
	}
	return nil
}

func (x *XUpdateTtlRequest) GetIncreaseToMilliseconds() uint64 {
	if x, ok := x.GetUpdateTtl().(*XUpdateTtlRequest_IncreaseToMilliseconds); ok {
		return x.IncreaseToMilliseconds
	}
	return 0
}

func (x *XUpdateTtlRequest) GetDecreaseToMilliseconds() uint64 {
	if x, ok := x.GetUpdateTtl().(*XUpdateTtlRequest_DecreaseToMilliseconds); ok {
		return x.DecreaseToMilliseconds
	}
	return 0
}

func (x *XUpdateTtlRequest) GetOverwriteToMilliseconds() uint64 {
	if x, ok := x.GetUpdateTtl().(*XUpdateTtlRequest_OverwriteToMilliseconds); ok {
		return x.OverwriteToMilliseconds
	}
	return 0
}

type isXUpdateTtlRequest_UpdateTtl interface {
	isXUpdateTtlRequest_UpdateTtl()
}

type XUpdateTtlRequest_IncreaseToMilliseconds struct {
	// Sets the ttl to this value only if it is an increase compared to the existing ttl
	IncreaseToMilliseconds uint64 `protobuf:"varint,2,opt,name=increase_to_milliseconds,json=increaseToMilliseconds,proto3,oneof"`
}

type XUpdateTtlRequest_DecreaseToMilliseconds struct {
	// Sets the ttl to this value only if it is a decrease compared to the existing ttl
	DecreaseToMilliseconds uint64 `protobuf:"varint,3,opt,name=decrease_to_milliseconds,json=decreaseToMilliseconds,proto3,oneof"`
}

type XUpdateTtlRequest_OverwriteToMilliseconds struct {
	// Sets the ttl to this value unconditionally
	OverwriteToMilliseconds uint64 `protobuf:"varint,4,opt,name=overwrite_to_milliseconds,json=overwriteToMilliseconds,proto3,oneof"`
}

func (*XUpdateTtlRequest_IncreaseToMilliseconds) isXUpdateTtlRequest_UpdateTtl() {}

func (*XUpdateTtlRequest_DecreaseToMilliseconds) isXUpdateTtlRequest_UpdateTtl() {}

func (*XUpdateTtlRequest_OverwriteToMilliseconds) isXUpdateTtlRequest_UpdateTtl() {}

type XUpdateTtlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*XUpdateTtlResponse_Set
	//	*XUpdateTtlResponse_NotSet
	//	*XUpdateTtlResponse_Missing
	Result isXUpdateTtlResponse_Result `protobuf_oneof:"result"`
}

func (x *XUpdateTtlResponse) Reset() {
	*x = XUpdateTtlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XUpdateTtlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XUpdateTtlResponse) ProtoMessage() {}

func (x *XUpdateTtlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XUpdateTtlResponse.ProtoReflect.Descriptor instead.
func (*XUpdateTtlResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{17}
}

func (m *XUpdateTtlResponse) GetResult() isXUpdateTtlResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *XUpdateTtlResponse) GetSet() *XUpdateTtlResponse_XSet {
	if x, ok := x.GetResult().(*XUpdateTtlResponse_Set); ok {
		return x.Set
	}
	return nil
}

func (x *XUpdateTtlResponse) GetNotSet() *XUpdateTtlResponse_XNotSet {
	if x, ok := x.GetResult().(*XUpdateTtlResponse_NotSet); ok {
		return x.NotSet
	}
	return nil
}

func (x *XUpdateTtlResponse) GetMissing() *XUpdateTtlResponse_XMissing {
	if x, ok := x.GetResult().(*XUpdateTtlResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXUpdateTtlResponse_Result interface {
	isXUpdateTtlResponse_Result()
}

type XUpdateTtlResponse_Set struct {
	Set *XUpdateTtlResponse_XSet `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type XUpdateTtlResponse_NotSet struct {
	NotSet *XUpdateTtlResponse_XNotSet `protobuf:"bytes,2,opt,name=not_set,json=notSet,proto3,oneof"`
}

type XUpdateTtlResponse_Missing struct {
	Missing *XUpdateTtlResponse_XMissing `protobuf:"bytes,3,opt,name=missing,proto3,oneof"`
}

func (*XUpdateTtlResponse_Set) isXUpdateTtlResponse_Result() {}

func (*XUpdateTtlResponse_NotSet) isXUpdateTtlResponse_Result() {}

func (*XUpdateTtlResponse_Missing) isXUpdateTtlResponse_Result() {}

type XItemGetTtlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
}

func (x *XItemGetTtlRequest) Reset() {
	*x = XItemGetTtlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XItemGetTtlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XItemGetTtlRequest) ProtoMessage() {}

func (x *XItemGetTtlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XItemGetTtlRequest.ProtoReflect.Descriptor instead.
func (*XItemGetTtlRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{18}
}

func (x *XItemGetTtlRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

type XItemGetTtlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*XItemGetTtlResponse_Found
	//	*XItemGetTtlResponse_Missing
	Result isXItemGetTtlResponse_Result `protobuf_oneof:"result"`
}

func (x *XItemGetTtlResponse) Reset() {
	*x = XItemGetTtlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XItemGetTtlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XItemGetTtlResponse) ProtoMessage() {}

func (x *XItemGetTtlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XItemGetTtlResponse.ProtoReflect.Descriptor instead.
func (*XItemGetTtlResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{19}
}

func (m *XItemGetTtlResponse) GetResult() isXItemGetTtlResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *XItemGetTtlResponse) GetFound() *XItemGetTtlResponse_XFound {
	if x, ok := x.GetResult().(*XItemGetTtlResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XItemGetTtlResponse) GetMissing() *XItemGetTtlResponse_XMissing {
	if x, ok := x.GetResult().(*XItemGetTtlResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXItemGetTtlResponse_Result interface {
	isXItemGetTtlResponse_Result()
}

type XItemGetTtlResponse_Found struct {
	Found *XItemGetTtlResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XItemGetTtlResponse_Missing struct {
	Missing *XItemGetTtlResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XItemGetTtlResponse_Found) isXItemGetTtlResponse_Result() {}

func (*XItemGetTtlResponse_Missing) isXItemGetTtlResponse_Result() {}

type XItemGetTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKey []byte `protobuf:"bytes,1,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"`
}

func (x *XItemGetTypeRequest) Reset() {
	*x = XItemGetTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XItemGetTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XItemGetTypeRequest) ProtoMessage() {}

func (x *XItemGetTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XItemGetTypeRequest.ProtoReflect.Descriptor instead.
func (*XItemGetTypeRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{20}
}

func (x *XItemGetTypeRequest) GetCacheKey() []byte {
	if x != nil {
		return x.CacheKey
	}
	return nil
}

type XItemGetTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*XItemGetTypeResponse_Found
	//	*XItemGetTypeResponse_Missing
	Result isXItemGetTypeResponse_Result `protobuf_oneof:"result"`
}

func (x *XItemGetTypeResponse) Reset() {
	*x = XItemGetTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XItemGetTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XItemGetTypeResponse) ProtoMessage() {}

func (x *XItemGetTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XItemGetTypeResponse.ProtoReflect.Descriptor instead.
func (*XItemGetTypeResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{21}
}

func (m *XItemGetTypeResponse) GetResult() isXItemGetTypeResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *XItemGetTypeResponse) GetFound() *XItemGetTypeResponse_XFound {
	if x, ok := x.GetResult().(*XItemGetTypeResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XItemGetTypeResponse) GetMissing() *XItemGetTypeResponse_XMissing {
	if x, ok := x.GetResult().(*XItemGetTypeResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXItemGetTypeResponse_Result interface {
	isXItemGetTypeResponse_Result()
}

type XItemGetTypeResponse_Found struct {
	Found *XItemGetTypeResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XItemGetTypeResponse_Missing struct {
	Missing *XItemGetTypeResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XItemGetTypeResponse_Found) isXItemGetTypeResponse_Result() {}

func (*XItemGetTypeResponse_Missing) isXItemGetTypeResponse_Result() {}

type XDictionaryGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryName []byte   `protobuf:"bytes,1,opt,name=dictionary_name,json=dictionaryName,proto3" json:"dictionary_name,omitempty"`
	Fields         [][]byte `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *XDictionaryGetRequest) Reset() {
	*x = XDictionaryGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryGetRequest) ProtoMessage() {}

func (x *XDictionaryGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryGetRequest.ProtoReflect.Descriptor instead.
func (*XDictionaryGetRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{22}
}

func (x *XDictionaryGetRequest) GetDictionaryName() []byte {
	if x != nil {
		return x.DictionaryName
	}
	return nil
}

func (x *XDictionaryGetRequest) GetFields() [][]byte {
	if x != nil {
		return x.Fields
	}
	return nil
}

type XDictionaryGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Dictionary:
	//
	//	*XDictionaryGetResponse_Found
	//	*XDictionaryGetResponse_Missing
	Dictionary isXDictionaryGetResponse_Dictionary `protobuf_oneof:"dictionary"`
}

func (x *XDictionaryGetResponse) Reset() {
	*x = XDictionaryGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryGetResponse) ProtoMessage() {}

func (x *XDictionaryGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryGetResponse.ProtoReflect.Descriptor instead.
func (*XDictionaryGetResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{23}
}

func (m *XDictionaryGetResponse) GetDictionary() isXDictionaryGetResponse_Dictionary {
	if m != nil {
		return m.Dictionary
	}
	return nil
}

func (x *XDictionaryGetResponse) GetFound() *XDictionaryGetResponse_XFound {
	if x, ok := x.GetDictionary().(*XDictionaryGetResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XDictionaryGetResponse) GetMissing() *XDictionaryGetResponse_XMissing {
	if x, ok := x.GetDictionary().(*XDictionaryGetResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXDictionaryGetResponse_Dictionary interface {
	isXDictionaryGetResponse_Dictionary()
}

type XDictionaryGetResponse_Found struct {
	Found *XDictionaryGetResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XDictionaryGetResponse_Missing struct {
	Missing *XDictionaryGetResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XDictionaryGetResponse_Found) isXDictionaryGetResponse_Dictionary() {}

func (*XDictionaryGetResponse_Missing) isXDictionaryGetResponse_Dictionary() {}

type XDictionaryFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryName []byte `protobuf:"bytes,1,opt,name=dictionary_name,json=dictionaryName,proto3" json:"dictionary_name,omitempty"`
}

func (x *XDictionaryFetchRequest) Reset() {
	*x = XDictionaryFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryFetchRequest) ProtoMessage() {}

func (x *XDictionaryFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryFetchRequest.ProtoReflect.Descriptor instead.
func (*XDictionaryFetchRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{24}
}

func (x *XDictionaryFetchRequest) GetDictionaryName() []byte {
	if x != nil {
		return x.DictionaryName
	}
	return nil
}

type XDictionaryFieldValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field []byte `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *XDictionaryFieldValuePair) Reset() {
	*x = XDictionaryFieldValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryFieldValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryFieldValuePair) ProtoMessage() {}

func (x *XDictionaryFieldValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryFieldValuePair.ProtoReflect.Descriptor instead.
func (*XDictionaryFieldValuePair) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{25}
}

func (x *XDictionaryFieldValuePair) GetField() []byte {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *XDictionaryFieldValuePair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type XDictionaryFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Dictionary:
	//
	//	*XDictionaryFetchResponse_Found
	//	*XDictionaryFetchResponse_Missing
	Dictionary isXDictionaryFetchResponse_Dictionary `protobuf_oneof:"dictionary"`
}

func (x *XDictionaryFetchResponse) Reset() {
	*x = XDictionaryFetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryFetchResponse) ProtoMessage() {}

func (x *XDictionaryFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryFetchResponse.ProtoReflect.Descriptor instead.
func (*XDictionaryFetchResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{26}
}

func (m *XDictionaryFetchResponse) GetDictionary() isXDictionaryFetchResponse_Dictionary {
	if m != nil {
		return m.Dictionary
	}
	return nil
}

func (x *XDictionaryFetchResponse) GetFound() *XDictionaryFetchResponse_XFound {
	if x, ok := x.GetDictionary().(*XDictionaryFetchResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XDictionaryFetchResponse) GetMissing() *XDictionaryFetchResponse_XMissing {
	if x, ok := x.GetDictionary().(*XDictionaryFetchResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXDictionaryFetchResponse_Dictionary interface {
	isXDictionaryFetchResponse_Dictionary()
}

type XDictionaryFetchResponse_Found struct {
	Found *XDictionaryFetchResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XDictionaryFetchResponse_Missing struct {
	Missing *XDictionaryFetchResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XDictionaryFetchResponse_Found) isXDictionaryFetchResponse_Dictionary() {}

func (*XDictionaryFetchResponse_Missing) isXDictionaryFetchResponse_Dictionary() {}

type XDictionarySetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryName  []byte                       `protobuf:"bytes,1,opt,name=dictionary_name,json=dictionaryName,proto3" json:"dictionary_name,omitempty"`
	Items           []*XDictionaryFieldValuePair `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	TtlMilliseconds uint64                       `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool                         `protobuf:"varint,4,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
}

func (x *XDictionarySetRequest) Reset() {
	*x = XDictionarySetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionarySetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionarySetRequest) ProtoMessage() {}

func (x *XDictionarySetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionarySetRequest.ProtoReflect.Descriptor instead.
func (*XDictionarySetRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{27}
}

func (x *XDictionarySetRequest) GetDictionaryName() []byte {
	if x != nil {
		return x.DictionaryName
	}
	return nil
}

func (x *XDictionarySetRequest) GetItems() []*XDictionaryFieldValuePair {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *XDictionarySetRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XDictionarySetRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

type XDictionarySetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDictionarySetResponse) Reset() {
	*x = XDictionarySetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionarySetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionarySetResponse) ProtoMessage() {}

func (x *XDictionarySetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionarySetResponse.ProtoReflect.Descriptor instead.
func (*XDictionarySetResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{28}
}

type XDictionaryIncrementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryName  []byte `protobuf:"bytes,1,opt,name=dictionary_name,json=dictionaryName,proto3" json:"dictionary_name,omitempty"`
	Field           []byte `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Amount          int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TtlMilliseconds uint64 `protobuf:"varint,4,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool   `protobuf:"varint,5,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
}

func (x *XDictionaryIncrementRequest) Reset() {
	*x = XDictionaryIncrementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryIncrementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryIncrementRequest) ProtoMessage() {}

func (x *XDictionaryIncrementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryIncrementRequest.ProtoReflect.Descriptor instead.
func (*XDictionaryIncrementRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{29}
}

func (x *XDictionaryIncrementRequest) GetDictionaryName() []byte {
	if x != nil {
		return x.DictionaryName
	}
	return nil
}

func (x *XDictionaryIncrementRequest) GetField() []byte {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *XDictionaryIncrementRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *XDictionaryIncrementRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XDictionaryIncrementRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

type XDictionaryIncrementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *XDictionaryIncrementResponse) Reset() {
	*x = XDictionaryIncrementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryIncrementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryIncrementResponse) ProtoMessage() {}

func (x *XDictionaryIncrementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryIncrementResponse.ProtoReflect.Descriptor instead.
func (*XDictionaryIncrementResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{30}
}

func (x *XDictionaryIncrementResponse) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type XDictionaryDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryName []byte `protobuf:"bytes,1,opt,name=dictionary_name,json=dictionaryName,proto3" json:"dictionary_name,omitempty"`
	// Types that are assignable to Delete:
	//
	//	*XDictionaryDeleteRequest_Some_
	//	*XDictionaryDeleteRequest_All_
	Delete isXDictionaryDeleteRequest_Delete `protobuf_oneof:"delete"`
}

func (x *XDictionaryDeleteRequest) Reset() {
	*x = XDictionaryDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryDeleteRequest) ProtoMessage() {}

func (x *XDictionaryDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryDeleteRequest.ProtoReflect.Descriptor instead.
func (*XDictionaryDeleteRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{31}
}

func (x *XDictionaryDeleteRequest) GetDictionaryName() []byte {
	if x != nil {
		return x.DictionaryName
	}
	return nil
}

func (m *XDictionaryDeleteRequest) GetDelete() isXDictionaryDeleteRequest_Delete {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (x *XDictionaryDeleteRequest) GetSome() *XDictionaryDeleteRequest_Some {
	if x, ok := x.GetDelete().(*XDictionaryDeleteRequest_Some_); ok {
		return x.Some
	}
	return nil
}

func (x *XDictionaryDeleteRequest) GetAll() *XDictionaryDeleteRequest_All {
	if x, ok := x.GetDelete().(*XDictionaryDeleteRequest_All_); ok {
		return x.All
	}
	return nil
}

type isXDictionaryDeleteRequest_Delete interface {
	isXDictionaryDeleteRequest_Delete()
}

type XDictionaryDeleteRequest_Some_ struct {
	Some *XDictionaryDeleteRequest_Some `protobuf:"bytes,2,opt,name=some,proto3,oneof"`
}

type XDictionaryDeleteRequest_All_ struct {
	All *XDictionaryDeleteRequest_All `protobuf:"bytes,3,opt,name=all,proto3,oneof"`
}

func (*XDictionaryDeleteRequest_Some_) isXDictionaryDeleteRequest_Delete() {}

func (*XDictionaryDeleteRequest_All_) isXDictionaryDeleteRequest_Delete() {}

type XDictionaryDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDictionaryDeleteResponse) Reset() {
	*x = XDictionaryDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryDeleteResponse) ProtoMessage() {}

func (x *XDictionaryDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryDeleteResponse.ProtoReflect.Descriptor instead.
func (*XDictionaryDeleteResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{32}
}

type XDictionaryLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryName []byte `protobuf:"bytes,1,opt,name=dictionary_name,json=dictionaryName,proto3" json:"dictionary_name,omitempty"`
}

func (x *XDictionaryLengthRequest) Reset() {
	*x = XDictionaryLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryLengthRequest) ProtoMessage() {}

func (x *XDictionaryLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryLengthRequest.ProtoReflect.Descriptor instead.
func (*XDictionaryLengthRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{33}
}

func (x *XDictionaryLengthRequest) GetDictionaryName() []byte {
	if x != nil {
		return x.DictionaryName
	}
	return nil
}

type XDictionaryLengthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Dictionary:
	//
	//	*XDictionaryLengthResponse_Found
	//	*XDictionaryLengthResponse_Missing
	Dictionary isXDictionaryLengthResponse_Dictionary `protobuf_oneof:"dictionary"`
}

func (x *XDictionaryLengthResponse) Reset() {
	*x = XDictionaryLengthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryLengthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryLengthResponse) ProtoMessage() {}

func (x *XDictionaryLengthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryLengthResponse.ProtoReflect.Descriptor instead.
func (*XDictionaryLengthResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{34}
}

func (m *XDictionaryLengthResponse) GetDictionary() isXDictionaryLengthResponse_Dictionary {
	if m != nil {
		return m.Dictionary
	}
	return nil
}

func (x *XDictionaryLengthResponse) GetFound() *XDictionaryLengthResponse_XFound {
	if x, ok := x.GetDictionary().(*XDictionaryLengthResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XDictionaryLengthResponse) GetMissing() *XDictionaryLengthResponse_XMissing {
	if x, ok := x.GetDictionary().(*XDictionaryLengthResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXDictionaryLengthResponse_Dictionary interface {
	isXDictionaryLengthResponse_Dictionary()
}

type XDictionaryLengthResponse_Found struct {
	Found *XDictionaryLengthResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XDictionaryLengthResponse_Missing struct {
	Missing *XDictionaryLengthResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XDictionaryLengthResponse_Found) isXDictionaryLengthResponse_Dictionary() {}

func (*XDictionaryLengthResponse_Missing) isXDictionaryLengthResponse_Dictionary() {}

type XSetFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
}

func (x *XSetFetchRequest) Reset() {
	*x = XSetFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetFetchRequest) ProtoMessage() {}

func (x *XSetFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetFetchRequest.ProtoReflect.Descriptor instead.
func (*XSetFetchRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{35}
}

func (x *XSetFetchRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

type XSetFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Set:
	//
	//	*XSetFetchResponse_Found
	//	*XSetFetchResponse_Missing
	Set isXSetFetchResponse_Set `protobuf_oneof:"set"`
}

func (x *XSetFetchResponse) Reset() {
	*x = XSetFetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetFetchResponse) ProtoMessage() {}

func (x *XSetFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetFetchResponse.ProtoReflect.Descriptor instead.
func (*XSetFetchResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{36}
}

func (m *XSetFetchResponse) GetSet() isXSetFetchResponse_Set {
	if m != nil {
		return m.Set
	}
	return nil
}

func (x *XSetFetchResponse) GetFound() *XSetFetchResponse_XFound {
	if x, ok := x.GetSet().(*XSetFetchResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSetFetchResponse) GetMissing() *XSetFetchResponse_XMissing {
	if x, ok := x.GetSet().(*XSetFetchResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSetFetchResponse_Set interface {
	isXSetFetchResponse_Set()
}

type XSetFetchResponse_Found struct {
	Found *XSetFetchResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSetFetchResponse_Missing struct {
	Missing *XSetFetchResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSetFetchResponse_Found) isXSetFetchResponse_Set() {}

func (*XSetFetchResponse_Missing) isXSetFetchResponse_Set() {}

type XSetSampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Limit   uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *XSetSampleRequest) Reset() {
	*x = XSetSampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetSampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetSampleRequest) ProtoMessage() {}

func (x *XSetSampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetSampleRequest.ProtoReflect.Descriptor instead.
func (*XSetSampleRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{37}
}

func (x *XSetSampleRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSetSampleRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type XSetSampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Set:
	//
	//	*XSetSampleResponse_Found
	//	*XSetSampleResponse_Missing
	Set isXSetSampleResponse_Set `protobuf_oneof:"set"`
}

func (x *XSetSampleResponse) Reset() {
	*x = XSetSampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetSampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetSampleResponse) ProtoMessage() {}

func (x *XSetSampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetSampleResponse.ProtoReflect.Descriptor instead.
func (*XSetSampleResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{38}
}

func (m *XSetSampleResponse) GetSet() isXSetSampleResponse_Set {
	if m != nil {
		return m.Set
	}
	return nil
}

func (x *XSetSampleResponse) GetFound() *XSetSampleResponse_XFound {
	if x, ok := x.GetSet().(*XSetSampleResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSetSampleResponse) GetMissing() *XSetSampleResponse_XMissing {
	if x, ok := x.GetSet().(*XSetSampleResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSetSampleResponse_Set interface {
	isXSetSampleResponse_Set()
}

type XSetSampleResponse_Found struct {
	Found *XSetSampleResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSetSampleResponse_Missing struct {
	Missing *XSetSampleResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSetSampleResponse_Found) isXSetSampleResponse_Set() {}

func (*XSetSampleResponse_Missing) isXSetSampleResponse_Set() {}

type XSetUnionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName         []byte   `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Elements        [][]byte `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
	TtlMilliseconds uint64   `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool     `protobuf:"varint,4,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
}

func (x *XSetUnionRequest) Reset() {
	*x = XSetUnionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetUnionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetUnionRequest) ProtoMessage() {}

func (x *XSetUnionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetUnionRequest.ProtoReflect.Descriptor instead.
func (*XSetUnionRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{39}
}

func (x *XSetUnionRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSetUnionRequest) GetElements() [][]byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *XSetUnionRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XSetUnionRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

type XSetUnionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetUnionResponse) Reset() {
	*x = XSetUnionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetUnionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetUnionResponse) ProtoMessage() {}

func (x *XSetUnionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetUnionResponse.ProtoReflect.Descriptor instead.
func (*XSetUnionResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{40}
}

type XSetDifferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	// Types that are assignable to Difference:
	//
	//	*XSetDifferenceRequest_Minuend
	//	*XSetDifferenceRequest_Subtrahend
	Difference isXSetDifferenceRequest_Difference `protobuf_oneof:"difference"`
}

func (x *XSetDifferenceRequest) Reset() {
	*x = XSetDifferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetDifferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetDifferenceRequest) ProtoMessage() {}

func (x *XSetDifferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetDifferenceRequest.ProtoReflect.Descriptor instead.
func (*XSetDifferenceRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{41}
}

func (x *XSetDifferenceRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (m *XSetDifferenceRequest) GetDifference() isXSetDifferenceRequest_Difference {
	if m != nil {
		return m.Difference
	}
	return nil
}

func (x *XSetDifferenceRequest) GetMinuend() *XSetDifferenceRequest_XMinuend {
	if x, ok := x.GetDifference().(*XSetDifferenceRequest_Minuend); ok {
		return x.Minuend
	}
	return nil
}

func (x *XSetDifferenceRequest) GetSubtrahend() *XSetDifferenceRequest_XSubtrahend {
	if x, ok := x.GetDifference().(*XSetDifferenceRequest_Subtrahend); ok {
		return x.Subtrahend
	}
	return nil
}

type isXSetDifferenceRequest_Difference interface {
	isXSetDifferenceRequest_Difference()
}

type XSetDifferenceRequest_Minuend struct {
	Minuend *XSetDifferenceRequest_XMinuend `protobuf:"bytes,2,opt,name=minuend,proto3,oneof"`
}

type XSetDifferenceRequest_Subtrahend struct {
	Subtrahend *XSetDifferenceRequest_XSubtrahend `protobuf:"bytes,3,opt,name=subtrahend,proto3,oneof"`
}

func (*XSetDifferenceRequest_Minuend) isXSetDifferenceRequest_Difference() {}

func (*XSetDifferenceRequest_Subtrahend) isXSetDifferenceRequest_Difference() {}

type XSetDifferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Set:
	//
	//	*XSetDifferenceResponse_Found
	//	*XSetDifferenceResponse_Missing
	Set isXSetDifferenceResponse_Set `protobuf_oneof:"set"`
}

func (x *XSetDifferenceResponse) Reset() {
	*x = XSetDifferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetDifferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetDifferenceResponse) ProtoMessage() {}

func (x *XSetDifferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetDifferenceResponse.ProtoReflect.Descriptor instead.
func (*XSetDifferenceResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{42}
}

func (m *XSetDifferenceResponse) GetSet() isXSetDifferenceResponse_Set {
	if m != nil {
		return m.Set
	}
	return nil
}

func (x *XSetDifferenceResponse) GetFound() *XSetDifferenceResponse_XFound {
	if x, ok := x.GetSet().(*XSetDifferenceResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSetDifferenceResponse) GetMissing() *XSetDifferenceResponse_XMissing {
	if x, ok := x.GetSet().(*XSetDifferenceResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSetDifferenceResponse_Set interface {
	isXSetDifferenceResponse_Set()
}

type XSetDifferenceResponse_Found struct {
	Found *XSetDifferenceResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSetDifferenceResponse_Missing struct {
	Missing *XSetDifferenceResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSetDifferenceResponse_Found) isXSetDifferenceResponse_Set() {}

func (*XSetDifferenceResponse_Missing) isXSetDifferenceResponse_Set() {}

type XSetContainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName  []byte   `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Elements [][]byte `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *XSetContainsRequest) Reset() {
	*x = XSetContainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetContainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetContainsRequest) ProtoMessage() {}

func (x *XSetContainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetContainsRequest.ProtoReflect.Descriptor instead.
func (*XSetContainsRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{43}
}

func (x *XSetContainsRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSetContainsRequest) GetElements() [][]byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

type XSetContainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Set:
	//
	//	*XSetContainsResponse_Found
	//	*XSetContainsResponse_Missing
	Set isXSetContainsResponse_Set `protobuf_oneof:"set"`
}

func (x *XSetContainsResponse) Reset() {
	*x = XSetContainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetContainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetContainsResponse) ProtoMessage() {}

func (x *XSetContainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetContainsResponse.ProtoReflect.Descriptor instead.
func (*XSetContainsResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{44}
}

func (m *XSetContainsResponse) GetSet() isXSetContainsResponse_Set {
	if m != nil {
		return m.Set
	}
	return nil
}

func (x *XSetContainsResponse) GetFound() *XSetContainsResponse_XFound {
	if x, ok := x.GetSet().(*XSetContainsResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSetContainsResponse) GetMissing() *XSetContainsResponse_XMissing {
	if x, ok := x.GetSet().(*XSetContainsResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSetContainsResponse_Set interface {
	isXSetContainsResponse_Set()
}

type XSetContainsResponse_Found struct {
	Found *XSetContainsResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSetContainsResponse_Missing struct {
	Missing *XSetContainsResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSetContainsResponse_Found) isXSetContainsResponse_Set() {}

func (*XSetContainsResponse_Missing) isXSetContainsResponse_Set() {}

type XSetLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
}

func (x *XSetLengthRequest) Reset() {
	*x = XSetLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetLengthRequest) ProtoMessage() {}

func (x *XSetLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetLengthRequest.ProtoReflect.Descriptor instead.
func (*XSetLengthRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{45}
}

func (x *XSetLengthRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

type XSetLengthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Set:
	//
	//	*XSetLengthResponse_Found
	//	*XSetLengthResponse_Missing
	Set isXSetLengthResponse_Set `protobuf_oneof:"set"`
}

func (x *XSetLengthResponse) Reset() {
	*x = XSetLengthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetLengthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetLengthResponse) ProtoMessage() {}

func (x *XSetLengthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetLengthResponse.ProtoReflect.Descriptor instead.
func (*XSetLengthResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{46}
}

func (m *XSetLengthResponse) GetSet() isXSetLengthResponse_Set {
	if m != nil {
		return m.Set
	}
	return nil
}

func (x *XSetLengthResponse) GetFound() *XSetLengthResponse_XFound {
	if x, ok := x.GetSet().(*XSetLengthResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSetLengthResponse) GetMissing() *XSetLengthResponse_XMissing {
	if x, ok := x.GetSet().(*XSetLengthResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSetLengthResponse_Set interface {
	isXSetLengthResponse_Set()
}

type XSetLengthResponse_Found struct {
	Found *XSetLengthResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSetLengthResponse_Missing struct {
	Missing *XSetLengthResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSetLengthResponse_Found) isXSetLengthResponse_Set() {}

func (*XSetLengthResponse_Missing) isXSetLengthResponse_Set() {}

type XSetPopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Count   uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *XSetPopRequest) Reset() {
	*x = XSetPopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetPopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetPopRequest) ProtoMessage() {}

func (x *XSetPopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetPopRequest.ProtoReflect.Descriptor instead.
func (*XSetPopRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{47}
}

func (x *XSetPopRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSetPopRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type XSetPopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Set:
	//
	//	*XSetPopResponse_Found
	//	*XSetPopResponse_Missing
	Set isXSetPopResponse_Set `protobuf_oneof:"set"`
}

func (x *XSetPopResponse) Reset() {
	*x = XSetPopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetPopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetPopResponse) ProtoMessage() {}

func (x *XSetPopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetPopResponse.ProtoReflect.Descriptor instead.
func (*XSetPopResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{48}
}

func (m *XSetPopResponse) GetSet() isXSetPopResponse_Set {
	if m != nil {
		return m.Set
	}
	return nil
}

func (x *XSetPopResponse) GetFound() *XSetPopResponse_XFound {
	if x, ok := x.GetSet().(*XSetPopResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSetPopResponse) GetMissing() *XSetPopResponse_XMissing {
	if x, ok := x.GetSet().(*XSetPopResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSetPopResponse_Set interface {
	isXSetPopResponse_Set()
}

type XSetPopResponse_Found struct {
	Found *XSetPopResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSetPopResponse_Missing struct {
	Missing *XSetPopResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSetPopResponse_Found) isXSetPopResponse_Set() {}

func (*XSetPopResponse_Missing) isXSetPopResponse_Set() {}

type XListConcatenateFrontRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName        []byte   `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
	Values          [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	TtlMilliseconds uint64   `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool     `protobuf:"varint,4,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
	// ensure total length <= this; remove excess from back of list
	TruncateBackToSize uint32 `protobuf:"varint,5,opt,name=truncate_back_to_size,json=truncateBackToSize,proto3" json:"truncate_back_to_size,omitempty"`
}

func (x *XListConcatenateFrontRequest) Reset() {
	*x = XListConcatenateFrontRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListConcatenateFrontRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListConcatenateFrontRequest) ProtoMessage() {}

func (x *XListConcatenateFrontRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListConcatenateFrontRequest.ProtoReflect.Descriptor instead.
func (*XListConcatenateFrontRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{49}
}

func (x *XListConcatenateFrontRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

func (x *XListConcatenateFrontRequest) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *XListConcatenateFrontRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XListConcatenateFrontRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

func (x *XListConcatenateFrontRequest) GetTruncateBackToSize() uint32 {
	if x != nil {
		return x.TruncateBackToSize
	}
	return 0
}

type XListConcatenateFrontResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// length of the list after the concatenation
	ListLength uint32 `protobuf:"varint,1,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListConcatenateFrontResponse) Reset() {
	*x = XListConcatenateFrontResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListConcatenateFrontResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListConcatenateFrontResponse) ProtoMessage() {}

func (x *XListConcatenateFrontResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListConcatenateFrontResponse.ProtoReflect.Descriptor instead.
func (*XListConcatenateFrontResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{50}
}

func (x *XListConcatenateFrontResponse) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

type XListConcatenateBackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName        []byte   `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
	Values          [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	TtlMilliseconds uint64   `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool     `protobuf:"varint,4,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
	// ensure total length <= this; remove excess from front of list
	TruncateFrontToSize uint32 `protobuf:"varint,5,opt,name=truncate_front_to_size,json=truncateFrontToSize,proto3" json:"truncate_front_to_size,omitempty"`
}

func (x *XListConcatenateBackRequest) Reset() {
	*x = XListConcatenateBackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListConcatenateBackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListConcatenateBackRequest) ProtoMessage() {}

func (x *XListConcatenateBackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListConcatenateBackRequest.ProtoReflect.Descriptor instead.
func (*XListConcatenateBackRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{51}
}

func (x *XListConcatenateBackRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

func (x *XListConcatenateBackRequest) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *XListConcatenateBackRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XListConcatenateBackRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

func (x *XListConcatenateBackRequest) GetTruncateFrontToSize() uint32 {
	if x != nil {
		return x.TruncateFrontToSize
	}
	return 0
}

type XListConcatenateBackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// length of the list after the concatenation
	ListLength uint32 `protobuf:"varint,1,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListConcatenateBackResponse) Reset() {
	*x = XListConcatenateBackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListConcatenateBackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListConcatenateBackResponse) ProtoMessage() {}

func (x *XListConcatenateBackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListConcatenateBackResponse.ProtoReflect.Descriptor instead.
func (*XListConcatenateBackResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{52}
}

func (x *XListConcatenateBackResponse) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

// stored = request + stored
type XListPushFrontRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName        []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
	Value           []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TtlMilliseconds uint64 `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool   `protobuf:"varint,4,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
	// ensure total length <= this; remove excess from back of list
	TruncateBackToSize uint32 `protobuf:"varint,5,opt,name=truncate_back_to_size,json=truncateBackToSize,proto3" json:"truncate_back_to_size,omitempty"`
}

func (x *XListPushFrontRequest) Reset() {
	*x = XListPushFrontRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPushFrontRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPushFrontRequest) ProtoMessage() {}

func (x *XListPushFrontRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPushFrontRequest.ProtoReflect.Descriptor instead.
func (*XListPushFrontRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{53}
}

func (x *XListPushFrontRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

func (x *XListPushFrontRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *XListPushFrontRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XListPushFrontRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

func (x *XListPushFrontRequest) GetTruncateBackToSize() uint32 {
	if x != nil {
		return x.TruncateBackToSize
	}
	return 0
}

type XListPushFrontResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// length of the list after the push
	ListLength uint32 `protobuf:"varint,1,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListPushFrontResponse) Reset() {
	*x = XListPushFrontResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPushFrontResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPushFrontResponse) ProtoMessage() {}

func (x *XListPushFrontResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPushFrontResponse.ProtoReflect.Descriptor instead.
func (*XListPushFrontResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{54}
}

func (x *XListPushFrontResponse) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

// stored = stored + request
type XListPushBackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName        []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
	Value           []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TtlMilliseconds uint64 `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool   `protobuf:"varint,4,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
	// ensure total length <= this; remove excess from front of list
	TruncateFrontToSize uint32 `protobuf:"varint,5,opt,name=truncate_front_to_size,json=truncateFrontToSize,proto3" json:"truncate_front_to_size,omitempty"`
}

func (x *XListPushBackRequest) Reset() {
	*x = XListPushBackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPushBackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPushBackRequest) ProtoMessage() {}

func (x *XListPushBackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPushBackRequest.ProtoReflect.Descriptor instead.
func (*XListPushBackRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{55}
}

func (x *XListPushBackRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

func (x *XListPushBackRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *XListPushBackRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XListPushBackRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

func (x *XListPushBackRequest) GetTruncateFrontToSize() uint32 {
	if x != nil {
		return x.TruncateFrontToSize
	}
	return 0
}

type XListPushBackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// length of the list after the push
	ListLength uint32 `protobuf:"varint,1,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListPushBackResponse) Reset() {
	*x = XListPushBackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPushBackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPushBackResponse) ProtoMessage() {}

func (x *XListPushBackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPushBackResponse.ProtoReflect.Descriptor instead.
func (*XListPushBackResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{56}
}

func (x *XListPushBackResponse) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

type XListPopFrontRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
}

func (x *XListPopFrontRequest) Reset() {
	*x = XListPopFrontRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPopFrontRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPopFrontRequest) ProtoMessage() {}

func (x *XListPopFrontRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPopFrontRequest.ProtoReflect.Descriptor instead.
func (*XListPopFrontRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{57}
}

func (x *XListPopFrontRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

type XListPopFrontResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to List:
	//
	//	*XListPopFrontResponse_Found
	//	*XListPopFrontResponse_Missing
	List isXListPopFrontResponse_List `protobuf_oneof:"list"`
}

func (x *XListPopFrontResponse) Reset() {
	*x = XListPopFrontResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPopFrontResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPopFrontResponse) ProtoMessage() {}

func (x *XListPopFrontResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPopFrontResponse.ProtoReflect.Descriptor instead.
func (*XListPopFrontResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{58}
}

func (m *XListPopFrontResponse) GetList() isXListPopFrontResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

func (x *XListPopFrontResponse) GetFound() *XListPopFrontResponse_XFound {
	if x, ok := x.GetList().(*XListPopFrontResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XListPopFrontResponse) GetMissing() *XListPopFrontResponse_XMissing {
	if x, ok := x.GetList().(*XListPopFrontResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXListPopFrontResponse_List interface {
	isXListPopFrontResponse_List()
}

type XListPopFrontResponse_Found struct {
	Found *XListPopFrontResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XListPopFrontResponse_Missing struct {
	Missing *XListPopFrontResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XListPopFrontResponse_Found) isXListPopFrontResponse_List() {}

func (*XListPopFrontResponse_Missing) isXListPopFrontResponse_List() {}

type XListPopBackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
}

func (x *XListPopBackRequest) Reset() {
	*x = XListPopBackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPopBackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPopBackRequest) ProtoMessage() {}

func (x *XListPopBackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPopBackRequest.ProtoReflect.Descriptor instead.
func (*XListPopBackRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{59}
}

func (x *XListPopBackRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

type XListPopBackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to List:
	//
	//	*XListPopBackResponse_Found
	//	*XListPopBackResponse_Missing
	List isXListPopBackResponse_List `protobuf_oneof:"list"`
}

func (x *XListPopBackResponse) Reset() {
	*x = XListPopBackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPopBackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPopBackResponse) ProtoMessage() {}

func (x *XListPopBackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPopBackResponse.ProtoReflect.Descriptor instead.
func (*XListPopBackResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{60}
}

func (m *XListPopBackResponse) GetList() isXListPopBackResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

func (x *XListPopBackResponse) GetFound() *XListPopBackResponse_XFound {
	if x, ok := x.GetList().(*XListPopBackResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XListPopBackResponse) GetMissing() *XListPopBackResponse_XMissing {
	if x, ok := x.GetList().(*XListPopBackResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXListPopBackResponse_List interface {
	isXListPopBackResponse_List()
}

type XListPopBackResponse_Found struct {
	Found *XListPopBackResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XListPopBackResponse_Missing struct {
	Missing *XListPopBackResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XListPopBackResponse_Found) isXListPopBackResponse_List() {}

func (*XListPopBackResponse_Missing) isXListPopBackResponse_List() {}

type XListRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginIndex uint32 `protobuf:"varint,1,opt,name=begin_index,json=beginIndex,proto3" json:"begin_index,omitempty"`
	Count      uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *XListRange) Reset() {
	*x = XListRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRange) ProtoMessage() {}

func (x *XListRange) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRange.ProtoReflect.Descriptor instead.
func (*XListRange) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{61}
}

func (x *XListRange) GetBeginIndex() uint32 {
	if x != nil {
		return x.BeginIndex
	}
	return 0
}

func (x *XListRange) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type XListEraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
	// Types that are assignable to Erase:
	//
	//	*XListEraseRequest_Some
	//	*XListEraseRequest_All
	Erase isXListEraseRequest_Erase `protobuf_oneof:"erase"`
}

func (x *XListEraseRequest) Reset() {
	*x = XListEraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListEraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListEraseRequest) ProtoMessage() {}

func (x *XListEraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListEraseRequest.ProtoReflect.Descriptor instead.
func (*XListEraseRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{62}
}

func (x *XListEraseRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

func (m *XListEraseRequest) GetErase() isXListEraseRequest_Erase {
	if m != nil {
		return m.Erase
	}
	return nil
}

func (x *XListEraseRequest) GetSome() *XListEraseRequest_XListRanges {
	if x, ok := x.GetErase().(*XListEraseRequest_Some); ok {
		return x.Some
	}
	return nil
}

func (x *XListEraseRequest) GetAll() *XListEraseRequest_XAll {
	if x, ok := x.GetErase().(*XListEraseRequest_All); ok {
		return x.All
	}
	return nil
}

type isXListEraseRequest_Erase interface {
	isXListEraseRequest_Erase()
}

type XListEraseRequest_Some struct {
	Some *XListEraseRequest_XListRanges `protobuf:"bytes,2,opt,name=some,proto3,oneof"`
}

type XListEraseRequest_All struct {
	All *XListEraseRequest_XAll `protobuf:"bytes,3,opt,name=all,proto3,oneof"`
}

func (*XListEraseRequest_Some) isXListEraseRequest_Erase() {}

func (*XListEraseRequest_All) isXListEraseRequest_Erase() {}

type XListEraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to List:
	//
	//	*XListEraseResponse_Found
	//	*XListEraseResponse_Missing
	List isXListEraseResponse_List `protobuf_oneof:"list"`
}

func (x *XListEraseResponse) Reset() {
	*x = XListEraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListEraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListEraseResponse) ProtoMessage() {}

func (x *XListEraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListEraseResponse.ProtoReflect.Descriptor instead.
func (*XListEraseResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{63}
}

func (m *XListEraseResponse) GetList() isXListEraseResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

func (x *XListEraseResponse) GetFound() *XListEraseResponse_XFound {
	if x, ok := x.GetList().(*XListEraseResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XListEraseResponse) GetMissing() *XListEraseResponse_XMissing {
	if x, ok := x.GetList().(*XListEraseResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXListEraseResponse_List interface {
	isXListEraseResponse_List()
}

type XListEraseResponse_Found struct {
	Found *XListEraseResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XListEraseResponse_Missing struct {
	Missing *XListEraseResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XListEraseResponse_Found) isXListEraseResponse_List() {}

func (*XListEraseResponse_Missing) isXListEraseResponse_List() {}

type XListRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
	// Types that are assignable to Remove:
	//
	//	*XListRemoveRequest_AllElementsWithValue
	Remove isXListRemoveRequest_Remove `protobuf_oneof:"remove"`
}

func (x *XListRemoveRequest) Reset() {
	*x = XListRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRemoveRequest) ProtoMessage() {}

func (x *XListRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRemoveRequest.ProtoReflect.Descriptor instead.
func (*XListRemoveRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{64}
}

func (x *XListRemoveRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

func (m *XListRemoveRequest) GetRemove() isXListRemoveRequest_Remove {
	if m != nil {
		return m.Remove
	}
	return nil
}

func (x *XListRemoveRequest) GetAllElementsWithValue() []byte {
	if x, ok := x.GetRemove().(*XListRemoveRequest_AllElementsWithValue); ok {
		return x.AllElementsWithValue
	}
	return nil
}

type isXListRemoveRequest_Remove interface {
	isXListRemoveRequest_Remove()
}

type XListRemoveRequest_AllElementsWithValue struct {
	// Remove all appearances in the list where the element is this value
	AllElementsWithValue []byte `protobuf:"bytes,2,opt,name=all_elements_with_value,json=allElementsWithValue,proto3,oneof"`
}

func (*XListRemoveRequest_AllElementsWithValue) isXListRemoveRequest_Remove() {}

type XListRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to List:
	//
	//	*XListRemoveResponse_Found
	//	*XListRemoveResponse_Missing
	List isXListRemoveResponse_List `protobuf_oneof:"list"`
}

func (x *XListRemoveResponse) Reset() {
	*x = XListRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRemoveResponse) ProtoMessage() {}

func (x *XListRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRemoveResponse.ProtoReflect.Descriptor instead.
func (*XListRemoveResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{65}
}

func (m *XListRemoveResponse) GetList() isXListRemoveResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

func (x *XListRemoveResponse) GetFound() *XListRemoveResponse_XFound {
	if x, ok := x.GetList().(*XListRemoveResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XListRemoveResponse) GetMissing() *XListRemoveResponse_XMissing {
	if x, ok := x.GetList().(*XListRemoveResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXListRemoveResponse_List interface {
	isXListRemoveResponse_List()
}

type XListRemoveResponse_Found struct {
	Found *XListRemoveResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XListRemoveResponse_Missing struct {
	Missing *XListRemoveResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XListRemoveResponse_Found) isXListRemoveResponse_List() {}

func (*XListRemoveResponse_Missing) isXListRemoveResponse_List() {}

type XListFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
	// Inclusive.
	// If unbounded, 0 (start of list) by default
	// A negative index counts from the end of the list
	//
	// Types that are assignable to StartIndex:
	//
	//	*XListFetchRequest_UnboundedStart
	//	*XListFetchRequest_InclusiveStart
	StartIndex isXListFetchRequest_StartIndex `protobuf_oneof:"start_index"`
	// Exclusive.
	// If unbounded, this effectively means list.length()
	// If end_index is > the number of elements to return, return as much as you can
	// A negative index counts from the end of the list
	//
	// Types that are assignable to EndIndex:
	//
	//	*XListFetchRequest_UnboundedEnd
	//	*XListFetchRequest_ExclusiveEnd
	EndIndex isXListFetchRequest_EndIndex `protobuf_oneof:"end_index"`
}

func (x *XListFetchRequest) Reset() {
	*x = XListFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListFetchRequest) ProtoMessage() {}

func (x *XListFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListFetchRequest.ProtoReflect.Descriptor instead.
func (*XListFetchRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{66}
}

func (x *XListFetchRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

func (m *XListFetchRequest) GetStartIndex() isXListFetchRequest_StartIndex {
	if m != nil {
		return m.StartIndex
	}
	return nil
}

func (x *XListFetchRequest) GetUnboundedStart() *XUnbounded {
	if x, ok := x.GetStartIndex().(*XListFetchRequest_UnboundedStart); ok {
		return x.UnboundedStart
	}
	return nil
}

func (x *XListFetchRequest) GetInclusiveStart() int32 {
	if x, ok := x.GetStartIndex().(*XListFetchRequest_InclusiveStart); ok {
		return x.InclusiveStart
	}
	return 0
}

func (m *XListFetchRequest) GetEndIndex() isXListFetchRequest_EndIndex {
	if m != nil {
		return m.EndIndex
	}
	return nil
}

func (x *XListFetchRequest) GetUnboundedEnd() *XUnbounded {
	if x, ok := x.GetEndIndex().(*XListFetchRequest_UnboundedEnd); ok {
		return x.UnboundedEnd
	}
	return nil
}

func (x *XListFetchRequest) GetExclusiveEnd() int32 {
	if x, ok := x.GetEndIndex().(*XListFetchRequest_ExclusiveEnd); ok {
		return x.ExclusiveEnd
	}
	return 0
}

type isXListFetchRequest_StartIndex interface {
	isXListFetchRequest_StartIndex()
}

type XListFetchRequest_UnboundedStart struct {
	UnboundedStart *XUnbounded `protobuf:"bytes,2,opt,name=unbounded_start,json=unboundedStart,proto3,oneof"`
}

type XListFetchRequest_InclusiveStart struct {
	InclusiveStart int32 `protobuf:"zigzag32,3,opt,name=inclusive_start,json=inclusiveStart,proto3,oneof"`
}

func (*XListFetchRequest_UnboundedStart) isXListFetchRequest_StartIndex() {}

func (*XListFetchRequest_InclusiveStart) isXListFetchRequest_StartIndex() {}

type isXListFetchRequest_EndIndex interface {
	isXListFetchRequest_EndIndex()
}

type XListFetchRequest_UnboundedEnd struct {
	UnboundedEnd *XUnbounded `protobuf:"bytes,4,opt,name=unbounded_end,json=unboundedEnd,proto3,oneof"`
}

type XListFetchRequest_ExclusiveEnd struct {
	ExclusiveEnd int32 `protobuf:"zigzag32,5,opt,name=exclusive_end,json=exclusiveEnd,proto3,oneof"`
}

func (*XListFetchRequest_UnboundedEnd) isXListFetchRequest_EndIndex() {}

func (*XListFetchRequest_ExclusiveEnd) isXListFetchRequest_EndIndex() {}

type XListRetainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
	// Types that are assignable to StartIndex:
	//
	//	*XListRetainRequest_UnboundedStart
	//	*XListRetainRequest_InclusiveStart
	StartIndex isXListRetainRequest_StartIndex `protobuf_oneof:"start_index"`
	// Types that are assignable to EndIndex:
	//
	//	*XListRetainRequest_UnboundedEnd
	//	*XListRetainRequest_ExclusiveEnd
	EndIndex        isXListRetainRequest_EndIndex `protobuf_oneof:"end_index"`
	TtlMilliseconds uint64                        `protobuf:"varint,6,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool                          `protobuf:"varint,7,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
}

func (x *XListRetainRequest) Reset() {
	*x = XListRetainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRetainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRetainRequest) ProtoMessage() {}

func (x *XListRetainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRetainRequest.ProtoReflect.Descriptor instead.
func (*XListRetainRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{67}
}

func (x *XListRetainRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

func (m *XListRetainRequest) GetStartIndex() isXListRetainRequest_StartIndex {
	if m != nil {
		return m.StartIndex
	}
	return nil
}

func (x *XListRetainRequest) GetUnboundedStart() *XUnbounded {
	if x, ok := x.GetStartIndex().(*XListRetainRequest_UnboundedStart); ok {
		return x.UnboundedStart
	}
	return nil
}

func (x *XListRetainRequest) GetInclusiveStart() int32 {
	if x, ok := x.GetStartIndex().(*XListRetainRequest_InclusiveStart); ok {
		return x.InclusiveStart
	}
	return 0
}

func (m *XListRetainRequest) GetEndIndex() isXListRetainRequest_EndIndex {
	if m != nil {
		return m.EndIndex
	}
	return nil
}

func (x *XListRetainRequest) GetUnboundedEnd() *XUnbounded {
	if x, ok := x.GetEndIndex().(*XListRetainRequest_UnboundedEnd); ok {
		return x.UnboundedEnd
	}
	return nil
}

func (x *XListRetainRequest) GetExclusiveEnd() int32 {
	if x, ok := x.GetEndIndex().(*XListRetainRequest_ExclusiveEnd); ok {
		return x.ExclusiveEnd
	}
	return 0
}

func (x *XListRetainRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XListRetainRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

type isXListRetainRequest_StartIndex interface {
	isXListRetainRequest_StartIndex()
}

type XListRetainRequest_UnboundedStart struct {
	UnboundedStart *XUnbounded `protobuf:"bytes,2,opt,name=unbounded_start,json=unboundedStart,proto3,oneof"`
}

type XListRetainRequest_InclusiveStart struct {
	InclusiveStart int32 `protobuf:"zigzag32,3,opt,name=inclusive_start,json=inclusiveStart,proto3,oneof"`
}

func (*XListRetainRequest_UnboundedStart) isXListRetainRequest_StartIndex() {}

func (*XListRetainRequest_InclusiveStart) isXListRetainRequest_StartIndex() {}

type isXListRetainRequest_EndIndex interface {
	isXListRetainRequest_EndIndex()
}

type XListRetainRequest_UnboundedEnd struct {
	UnboundedEnd *XUnbounded `protobuf:"bytes,4,opt,name=unbounded_end,json=unboundedEnd,proto3,oneof"`
}

type XListRetainRequest_ExclusiveEnd struct {
	ExclusiveEnd int32 `protobuf:"zigzag32,5,opt,name=exclusive_end,json=exclusiveEnd,proto3,oneof"`
}

func (*XListRetainRequest_UnboundedEnd) isXListRetainRequest_EndIndex() {}

func (*XListRetainRequest_ExclusiveEnd) isXListRetainRequest_EndIndex() {}

type XListRetainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to List:
	//
	//	*XListRetainResponse_Found
	//	*XListRetainResponse_Missing
	List isXListRetainResponse_List `protobuf_oneof:"list"`
}

func (x *XListRetainResponse) Reset() {
	*x = XListRetainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRetainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRetainResponse) ProtoMessage() {}

func (x *XListRetainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRetainResponse.ProtoReflect.Descriptor instead.
func (*XListRetainResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{68}
}

func (m *XListRetainResponse) GetList() isXListRetainResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

func (x *XListRetainResponse) GetFound() *XListRetainResponse_XFound {
	if x, ok := x.GetList().(*XListRetainResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XListRetainResponse) GetMissing() *XListRetainResponse_XMissing {
	if x, ok := x.GetList().(*XListRetainResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXListRetainResponse_List interface {
	isXListRetainResponse_List()
}

type XListRetainResponse_Found struct {
	Found *XListRetainResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XListRetainResponse_Missing struct {
	Missing *XListRetainResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XListRetainResponse_Found) isXListRetainResponse_List() {}

func (*XListRetainResponse_Missing) isXListRetainResponse_List() {}

type XListFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to List:
	//
	//	*XListFetchResponse_Found
	//	*XListFetchResponse_Missing
	List isXListFetchResponse_List `protobuf_oneof:"list"`
}

func (x *XListFetchResponse) Reset() {
	*x = XListFetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListFetchResponse) ProtoMessage() {}

func (x *XListFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListFetchResponse.ProtoReflect.Descriptor instead.
func (*XListFetchResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{69}
}

func (m *XListFetchResponse) GetList() isXListFetchResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

func (x *XListFetchResponse) GetFound() *XListFetchResponse_XFound {
	if x, ok := x.GetList().(*XListFetchResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XListFetchResponse) GetMissing() *XListFetchResponse_XMissing {
	if x, ok := x.GetList().(*XListFetchResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXListFetchResponse_List interface {
	isXListFetchResponse_List()
}

type XListFetchResponse_Found struct {
	Found *XListFetchResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XListFetchResponse_Missing struct {
	Missing *XListFetchResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XListFetchResponse_Found) isXListFetchResponse_List() {}

func (*XListFetchResponse_Missing) isXListFetchResponse_List() {}

type XListLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListName []byte `protobuf:"bytes,1,opt,name=list_name,json=listName,proto3" json:"list_name,omitempty"`
}

func (x *XListLengthRequest) Reset() {
	*x = XListLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListLengthRequest) ProtoMessage() {}

func (x *XListLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListLengthRequest.ProtoReflect.Descriptor instead.
func (*XListLengthRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{70}
}

func (x *XListLengthRequest) GetListName() []byte {
	if x != nil {
		return x.ListName
	}
	return nil
}

type XListLengthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to List:
	//
	//	*XListLengthResponse_Found
	//	*XListLengthResponse_Missing
	List isXListLengthResponse_List `protobuf_oneof:"list"`
}

func (x *XListLengthResponse) Reset() {
	*x = XListLengthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListLengthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListLengthResponse) ProtoMessage() {}

func (x *XListLengthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListLengthResponse.ProtoReflect.Descriptor instead.
func (*XListLengthResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{71}
}

func (m *XListLengthResponse) GetList() isXListLengthResponse_List {
	if m != nil {
		return m.List
	}
	return nil
}

func (x *XListLengthResponse) GetFound() *XListLengthResponse_XFound {
	if x, ok := x.GetList().(*XListLengthResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XListLengthResponse) GetMissing() *XListLengthResponse_XMissing {
	if x, ok := x.GetList().(*XListLengthResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXListLengthResponse_List interface {
	isXListLengthResponse_List()
}

type XListLengthResponse_Found struct {
	Found *XListLengthResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XListLengthResponse_Missing struct {
	Missing *XListLengthResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XListLengthResponse_Found) isXListLengthResponse_List() {}

func (*XListLengthResponse_Missing) isXListLengthResponse_List() {}

type XSortedSetElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte  `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Score float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *XSortedSetElement) Reset() {
	*x = XSortedSetElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetElement) ProtoMessage() {}

func (x *XSortedSetElement) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetElement.ProtoReflect.Descriptor instead.
func (*XSortedSetElement) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{72}
}

func (x *XSortedSetElement) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *XSortedSetElement) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type XSortedSetPutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName         []byte               `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Elements        []*XSortedSetElement `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
	TtlMilliseconds uint64               `protobuf:"varint,3,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool                 `protobuf:"varint,4,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
}

func (x *XSortedSetPutRequest) Reset() {
	*x = XSortedSetPutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetPutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetPutRequest) ProtoMessage() {}

func (x *XSortedSetPutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetPutRequest.ProtoReflect.Descriptor instead.
func (*XSortedSetPutRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{73}
}

func (x *XSortedSetPutRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSortedSetPutRequest) GetElements() []*XSortedSetElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *XSortedSetPutRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XSortedSetPutRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

type XSortedSetPutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSortedSetPutResponse) Reset() {
	*x = XSortedSetPutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetPutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetPutResponse) ProtoMessage() {}

func (x *XSortedSetPutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetPutResponse.ProtoReflect.Descriptor instead.
func (*XSortedSetPutResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{74}
}

type XSortedSetFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName    []byte                       `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Order      XSortedSetFetchRequest_Order `protobuf:"varint,2,opt,name=order,proto3,enum=cache_client.XSortedSetFetchRequest_Order" json:"order,omitempty"`
	WithScores bool                         `protobuf:"varint,3,opt,name=with_scores,json=withScores,proto3" json:"with_scores,omitempty"`
	// Types that are assignable to Range:
	//
	//	*XSortedSetFetchRequest_ByIndex
	//	*XSortedSetFetchRequest_ByScore
	Range isXSortedSetFetchRequest_Range `protobuf_oneof:"range"`
}

func (x *XSortedSetFetchRequest) Reset() {
	*x = XSortedSetFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchRequest) ProtoMessage() {}

func (x *XSortedSetFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchRequest.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{75}
}

func (x *XSortedSetFetchRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSortedSetFetchRequest) GetOrder() XSortedSetFetchRequest_Order {
	if x != nil {
		return x.Order
	}
	return XSortedSetFetchRequest_ASCENDING
}

func (x *XSortedSetFetchRequest) GetWithScores() bool {
	if x != nil {
		return x.WithScores
	}
	return false
}

func (m *XSortedSetFetchRequest) GetRange() isXSortedSetFetchRequest_Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (x *XSortedSetFetchRequest) GetByIndex() *XSortedSetFetchRequest_XByIndex {
	if x, ok := x.GetRange().(*XSortedSetFetchRequest_ByIndex); ok {
		return x.ByIndex
	}
	return nil
}

func (x *XSortedSetFetchRequest) GetByScore() *XSortedSetFetchRequest_XByScore {
	if x, ok := x.GetRange().(*XSortedSetFetchRequest_ByScore); ok {
		return x.ByScore
	}
	return nil
}

type isXSortedSetFetchRequest_Range interface {
	isXSortedSetFetchRequest_Range()
}

type XSortedSetFetchRequest_ByIndex struct {
	ByIndex *XSortedSetFetchRequest_XByIndex `protobuf:"bytes,4,opt,name=by_index,json=byIndex,proto3,oneof"`
}

type XSortedSetFetchRequest_ByScore struct {
	ByScore *XSortedSetFetchRequest_XByScore `protobuf:"bytes,5,opt,name=by_score,json=byScore,proto3,oneof"`
}

func (*XSortedSetFetchRequest_ByIndex) isXSortedSetFetchRequest_Range() {}

func (*XSortedSetFetchRequest_ByScore) isXSortedSetFetchRequest_Range() {}

type XSortedSetFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SortedSet:
	//
	//	*XSortedSetFetchResponse_Found
	//	*XSortedSetFetchResponse_Missing
	SortedSet isXSortedSetFetchResponse_SortedSet `protobuf_oneof:"sorted_set"`
}

func (x *XSortedSetFetchResponse) Reset() {
	*x = XSortedSetFetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchResponse) ProtoMessage() {}

func (x *XSortedSetFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchResponse.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{76}
}

func (m *XSortedSetFetchResponse) GetSortedSet() isXSortedSetFetchResponse_SortedSet {
	if m != nil {
		return m.SortedSet
	}
	return nil
}

func (x *XSortedSetFetchResponse) GetFound() *XSortedSetFetchResponse_XFound {
	if x, ok := x.GetSortedSet().(*XSortedSetFetchResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSortedSetFetchResponse) GetMissing() *XSortedSetFetchResponse_XMissing {
	if x, ok := x.GetSortedSet().(*XSortedSetFetchResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSortedSetFetchResponse_SortedSet interface {
	isXSortedSetFetchResponse_SortedSet()
}

type XSortedSetFetchResponse_Found struct {
	Found *XSortedSetFetchResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSortedSetFetchResponse_Missing struct {
	Missing *XSortedSetFetchResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSortedSetFetchResponse_Found) isXSortedSetFetchResponse_SortedSet() {}

func (*XSortedSetFetchResponse_Missing) isXSortedSetFetchResponse_SortedSet() {}

type XSortedSetGetScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte   `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Values  [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *XSortedSetGetScoreRequest) Reset() {
	*x = XSortedSetGetScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetScoreRequest) ProtoMessage() {}

func (x *XSortedSetGetScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetScoreRequest.ProtoReflect.Descriptor instead.
func (*XSortedSetGetScoreRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{77}
}

func (x *XSortedSetGetScoreRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSortedSetGetScoreRequest) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type XSortedSetGetScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SortedSet:
	//
	//	*XSortedSetGetScoreResponse_Found
	//	*XSortedSetGetScoreResponse_Missing
	SortedSet isXSortedSetGetScoreResponse_SortedSet `protobuf_oneof:"sorted_set"`
}

func (x *XSortedSetGetScoreResponse) Reset() {
	*x = XSortedSetGetScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetScoreResponse) ProtoMessage() {}

func (x *XSortedSetGetScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetScoreResponse.ProtoReflect.Descriptor instead.
func (*XSortedSetGetScoreResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{78}
}

func (m *XSortedSetGetScoreResponse) GetSortedSet() isXSortedSetGetScoreResponse_SortedSet {
	if m != nil {
		return m.SortedSet
	}
	return nil
}

func (x *XSortedSetGetScoreResponse) GetFound() *XSortedSetGetScoreResponse_XSortedSetFound {
	if x, ok := x.GetSortedSet().(*XSortedSetGetScoreResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSortedSetGetScoreResponse) GetMissing() *XSortedSetGetScoreResponse_XSortedSetMissing {
	if x, ok := x.GetSortedSet().(*XSortedSetGetScoreResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSortedSetGetScoreResponse_SortedSet interface {
	isXSortedSetGetScoreResponse_SortedSet()
}

type XSortedSetGetScoreResponse_Found struct {
	Found *XSortedSetGetScoreResponse_XSortedSetFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSortedSetGetScoreResponse_Missing struct {
	Missing *XSortedSetGetScoreResponse_XSortedSetMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSortedSetGetScoreResponse_Found) isXSortedSetGetScoreResponse_SortedSet() {}

func (*XSortedSetGetScoreResponse_Missing) isXSortedSetGetScoreResponse_SortedSet() {}

type XSortedSetRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	// Types that are assignable to RemoveElements:
	//
	//	*XSortedSetRemoveRequest_All
	//	*XSortedSetRemoveRequest_Some
	RemoveElements isXSortedSetRemoveRequest_RemoveElements `protobuf_oneof:"remove_elements"`
}

func (x *XSortedSetRemoveRequest) Reset() {
	*x = XSortedSetRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetRemoveRequest) ProtoMessage() {}

func (x *XSortedSetRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetRemoveRequest.ProtoReflect.Descriptor instead.
func (*XSortedSetRemoveRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{79}
}

func (x *XSortedSetRemoveRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (m *XSortedSetRemoveRequest) GetRemoveElements() isXSortedSetRemoveRequest_RemoveElements {
	if m != nil {
		return m.RemoveElements
	}
	return nil
}

func (x *XSortedSetRemoveRequest) GetAll() *XSortedSetRemoveRequest_XAll {
	if x, ok := x.GetRemoveElements().(*XSortedSetRemoveRequest_All); ok {
		return x.All
	}
	return nil
}

func (x *XSortedSetRemoveRequest) GetSome() *XSortedSetRemoveRequest_XSome {
	if x, ok := x.GetRemoveElements().(*XSortedSetRemoveRequest_Some); ok {
		return x.Some
	}
	return nil
}

type isXSortedSetRemoveRequest_RemoveElements interface {
	isXSortedSetRemoveRequest_RemoveElements()
}

type XSortedSetRemoveRequest_All struct {
	All *XSortedSetRemoveRequest_XAll `protobuf:"bytes,2,opt,name=all,proto3,oneof"`
}

type XSortedSetRemoveRequest_Some struct {
	Some *XSortedSetRemoveRequest_XSome `protobuf:"bytes,3,opt,name=some,proto3,oneof"`
}

func (*XSortedSetRemoveRequest_All) isXSortedSetRemoveRequest_RemoveElements() {}

func (*XSortedSetRemoveRequest_Some) isXSortedSetRemoveRequest_RemoveElements() {}

type XSortedSetRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSortedSetRemoveResponse) Reset() {
	*x = XSortedSetRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetRemoveResponse) ProtoMessage() {}

func (x *XSortedSetRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetRemoveResponse.ProtoReflect.Descriptor instead.
func (*XSortedSetRemoveResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{80}
}

type XSortedSetIncrementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName         []byte  `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Value           []byte  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Amount          float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TtlMilliseconds uint64  `protobuf:"varint,4,opt,name=ttl_milliseconds,json=ttlMilliseconds,proto3" json:"ttl_milliseconds,omitempty"`
	RefreshTtl      bool    `protobuf:"varint,5,opt,name=refresh_ttl,json=refreshTtl,proto3" json:"refresh_ttl,omitempty"`
}

func (x *XSortedSetIncrementRequest) Reset() {
	*x = XSortedSetIncrementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetIncrementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetIncrementRequest) ProtoMessage() {}

func (x *XSortedSetIncrementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetIncrementRequest.ProtoReflect.Descriptor instead.
func (*XSortedSetIncrementRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{81}
}

func (x *XSortedSetIncrementRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSortedSetIncrementRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *XSortedSetIncrementRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *XSortedSetIncrementRequest) GetTtlMilliseconds() uint64 {
	if x != nil {
		return x.TtlMilliseconds
	}
	return 0
}

func (x *XSortedSetIncrementRequest) GetRefreshTtl() bool {
	if x != nil {
		return x.RefreshTtl
	}
	return false
}

type XSortedSetIncrementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated score stored after the increment operation.
	Score float64 `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *XSortedSetIncrementResponse) Reset() {
	*x = XSortedSetIncrementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetIncrementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetIncrementResponse) ProtoMessage() {}

func (x *XSortedSetIncrementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetIncrementResponse.ProtoReflect.Descriptor instead.
func (*XSortedSetIncrementResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{82}
}

func (x *XSortedSetIncrementResponse) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type XSortedSetGetRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	Value   []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// The order in which sorted set will be sorted to determine the rank.
	//
	// When Order.ASCENDING is specified, will return the rank of the value
	// when sorted set scores are ordered from low to high. This is the default
	// when no Order is specified.
	//
	// When Order.DESCENDING is specified, will return the rank of the value
	// when sorted set scores are ordered from high to low.
	Order XSortedSetGetRankRequest_Order `protobuf:"varint,3,opt,name=order,proto3,enum=cache_client.XSortedSetGetRankRequest_Order" json:"order,omitempty"`
}

func (x *XSortedSetGetRankRequest) Reset() {
	*x = XSortedSetGetRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetRankRequest) ProtoMessage() {}

func (x *XSortedSetGetRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetRankRequest.ProtoReflect.Descriptor instead.
func (*XSortedSetGetRankRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{83}
}

func (x *XSortedSetGetRankRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (x *XSortedSetGetRankRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *XSortedSetGetRankRequest) GetOrder() XSortedSetGetRankRequest_Order {
	if x != nil {
		return x.Order
	}
	return XSortedSetGetRankRequest_ASCENDING
}

type XSortedSetGetRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Rank:
	//
	//	*XSortedSetGetRankResponse_ElementRank
	//	*XSortedSetGetRankResponse_Missing
	Rank isXSortedSetGetRankResponse_Rank `protobuf_oneof:"rank"`
}

func (x *XSortedSetGetRankResponse) Reset() {
	*x = XSortedSetGetRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetRankResponse) ProtoMessage() {}

func (x *XSortedSetGetRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetRankResponse.ProtoReflect.Descriptor instead.
func (*XSortedSetGetRankResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{84}
}

func (m *XSortedSetGetRankResponse) GetRank() isXSortedSetGetRankResponse_Rank {
	if m != nil {
		return m.Rank
	}
	return nil
}

func (x *XSortedSetGetRankResponse) GetElementRank() *XSortedSetGetRankResponse_XRankResponsePart {
	if x, ok := x.GetRank().(*XSortedSetGetRankResponse_ElementRank); ok {
		return x.ElementRank
	}
	return nil
}

func (x *XSortedSetGetRankResponse) GetMissing() *XSortedSetGetRankResponse_XSortedSetMissing {
	if x, ok := x.GetRank().(*XSortedSetGetRankResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSortedSetGetRankResponse_Rank interface {
	isXSortedSetGetRankResponse_Rank()
}

type XSortedSetGetRankResponse_ElementRank struct {
	ElementRank *XSortedSetGetRankResponse_XRankResponsePart `protobuf:"bytes,1,opt,name=element_rank,json=elementRank,proto3,oneof"`
}

type XSortedSetGetRankResponse_Missing struct {
	Missing *XSortedSetGetRankResponse_XSortedSetMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSortedSetGetRankResponse_ElementRank) isXSortedSetGetRankResponse_Rank() {}

func (*XSortedSetGetRankResponse_Missing) isXSortedSetGetRankResponse_Rank() {}

type XSortedSetLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
}

func (x *XSortedSetLengthRequest) Reset() {
	*x = XSortedSetLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetLengthRequest) ProtoMessage() {}

func (x *XSortedSetLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetLengthRequest.ProtoReflect.Descriptor instead.
func (*XSortedSetLengthRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{85}
}

func (x *XSortedSetLengthRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

type XSortedSetLengthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SortedSet:
	//
	//	*XSortedSetLengthResponse_Found
	//	*XSortedSetLengthResponse_Missing
	SortedSet isXSortedSetLengthResponse_SortedSet `protobuf_oneof:"sorted_set"`
}

func (x *XSortedSetLengthResponse) Reset() {
	*x = XSortedSetLengthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetLengthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetLengthResponse) ProtoMessage() {}

func (x *XSortedSetLengthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetLengthResponse.ProtoReflect.Descriptor instead.
func (*XSortedSetLengthResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{86}
}

func (m *XSortedSetLengthResponse) GetSortedSet() isXSortedSetLengthResponse_SortedSet {
	if m != nil {
		return m.SortedSet
	}
	return nil
}

func (x *XSortedSetLengthResponse) GetFound() *XSortedSetLengthResponse_XFound {
	if x, ok := x.GetSortedSet().(*XSortedSetLengthResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSortedSetLengthResponse) GetMissing() *XSortedSetLengthResponse_XMissing {
	if x, ok := x.GetSortedSet().(*XSortedSetLengthResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSortedSetLengthResponse_SortedSet interface {
	isXSortedSetLengthResponse_SortedSet()
}

type XSortedSetLengthResponse_Found struct {
	Found *XSortedSetLengthResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSortedSetLengthResponse_Missing struct {
	Missing *XSortedSetLengthResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSortedSetLengthResponse_Found) isXSortedSetLengthResponse_SortedSet() {}

func (*XSortedSetLengthResponse_Missing) isXSortedSetLengthResponse_SortedSet() {}

type XSortedSetLengthByScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetName []byte `protobuf:"bytes,1,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	// Types that are assignable to Min:
	//
	//	*XSortedSetLengthByScoreRequest_InclusiveMin
	//	*XSortedSetLengthByScoreRequest_ExclusiveMin
	//	*XSortedSetLengthByScoreRequest_UnboundedMin
	Min isXSortedSetLengthByScoreRequest_Min `protobuf_oneof:"min"`
	// Types that are assignable to Max:
	//
	//	*XSortedSetLengthByScoreRequest_InclusiveMax
	//	*XSortedSetLengthByScoreRequest_ExclusiveMax
	//	*XSortedSetLengthByScoreRequest_UnboundedMax
	Max isXSortedSetLengthByScoreRequest_Max `protobuf_oneof:"max"`
}

func (x *XSortedSetLengthByScoreRequest) Reset() {
	*x = XSortedSetLengthByScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetLengthByScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetLengthByScoreRequest) ProtoMessage() {}

func (x *XSortedSetLengthByScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetLengthByScoreRequest.ProtoReflect.Descriptor instead.
func (*XSortedSetLengthByScoreRequest) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{87}
}

func (x *XSortedSetLengthByScoreRequest) GetSetName() []byte {
	if x != nil {
		return x.SetName
	}
	return nil
}

func (m *XSortedSetLengthByScoreRequest) GetMin() isXSortedSetLengthByScoreRequest_Min {
	if m != nil {
		return m.Min
	}
	return nil
}

func (x *XSortedSetLengthByScoreRequest) GetInclusiveMin() float64 {
	if x, ok := x.GetMin().(*XSortedSetLengthByScoreRequest_InclusiveMin); ok {
		return x.InclusiveMin
	}
	return 0
}

func (x *XSortedSetLengthByScoreRequest) GetExclusiveMin() float64 {
	if x, ok := x.GetMin().(*XSortedSetLengthByScoreRequest_ExclusiveMin); ok {
		return x.ExclusiveMin
	}
	return 0
}

func (x *XSortedSetLengthByScoreRequest) GetUnboundedMin() *XUnbounded {
	if x, ok := x.GetMin().(*XSortedSetLengthByScoreRequest_UnboundedMin); ok {
		return x.UnboundedMin
	}
	return nil
}

func (m *XSortedSetLengthByScoreRequest) GetMax() isXSortedSetLengthByScoreRequest_Max {
	if m != nil {
		return m.Max
	}
	return nil
}

func (x *XSortedSetLengthByScoreRequest) GetInclusiveMax() float64 {
	if x, ok := x.GetMax().(*XSortedSetLengthByScoreRequest_InclusiveMax); ok {
		return x.InclusiveMax
	}
	return 0
}

func (x *XSortedSetLengthByScoreRequest) GetExclusiveMax() float64 {
	if x, ok := x.GetMax().(*XSortedSetLengthByScoreRequest_ExclusiveMax); ok {
		return x.ExclusiveMax
	}
	return 0
}

func (x *XSortedSetLengthByScoreRequest) GetUnboundedMax() *XUnbounded {
	if x, ok := x.GetMax().(*XSortedSetLengthByScoreRequest_UnboundedMax); ok {
		return x.UnboundedMax
	}
	return nil
}

type isXSortedSetLengthByScoreRequest_Min interface {
	isXSortedSetLengthByScoreRequest_Min()
}

type XSortedSetLengthByScoreRequest_InclusiveMin struct {
	InclusiveMin float64 `protobuf:"fixed64,2,opt,name=inclusive_min,json=inclusiveMin,proto3,oneof"`
}

type XSortedSetLengthByScoreRequest_ExclusiveMin struct {
	ExclusiveMin float64 `protobuf:"fixed64,3,opt,name=exclusive_min,json=exclusiveMin,proto3,oneof"`
}

type XSortedSetLengthByScoreRequest_UnboundedMin struct {
	UnboundedMin *XUnbounded `protobuf:"bytes,4,opt,name=unbounded_min,json=unboundedMin,proto3,oneof"`
}

func (*XSortedSetLengthByScoreRequest_InclusiveMin) isXSortedSetLengthByScoreRequest_Min() {}

func (*XSortedSetLengthByScoreRequest_ExclusiveMin) isXSortedSetLengthByScoreRequest_Min() {}

func (*XSortedSetLengthByScoreRequest_UnboundedMin) isXSortedSetLengthByScoreRequest_Min() {}

type isXSortedSetLengthByScoreRequest_Max interface {
	isXSortedSetLengthByScoreRequest_Max()
}

type XSortedSetLengthByScoreRequest_InclusiveMax struct {
	InclusiveMax float64 `protobuf:"fixed64,5,opt,name=inclusive_max,json=inclusiveMax,proto3,oneof"`
}

type XSortedSetLengthByScoreRequest_ExclusiveMax struct {
	ExclusiveMax float64 `protobuf:"fixed64,6,opt,name=exclusive_max,json=exclusiveMax,proto3,oneof"`
}

type XSortedSetLengthByScoreRequest_UnboundedMax struct {
	UnboundedMax *XUnbounded `protobuf:"bytes,7,opt,name=unbounded_max,json=unboundedMax,proto3,oneof"`
}

func (*XSortedSetLengthByScoreRequest_InclusiveMax) isXSortedSetLengthByScoreRequest_Max() {}

func (*XSortedSetLengthByScoreRequest_ExclusiveMax) isXSortedSetLengthByScoreRequest_Max() {}

func (*XSortedSetLengthByScoreRequest_UnboundedMax) isXSortedSetLengthByScoreRequest_Max() {}

type XSortedSetLengthByScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SortedSet:
	//
	//	*XSortedSetLengthByScoreResponse_Found
	//	*XSortedSetLengthByScoreResponse_Missing
	SortedSet isXSortedSetLengthByScoreResponse_SortedSet `protobuf_oneof:"sorted_set"`
}

func (x *XSortedSetLengthByScoreResponse) Reset() {
	*x = XSortedSetLengthByScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetLengthByScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetLengthByScoreResponse) ProtoMessage() {}

func (x *XSortedSetLengthByScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetLengthByScoreResponse.ProtoReflect.Descriptor instead.
func (*XSortedSetLengthByScoreResponse) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{88}
}

func (m *XSortedSetLengthByScoreResponse) GetSortedSet() isXSortedSetLengthByScoreResponse_SortedSet {
	if m != nil {
		return m.SortedSet
	}
	return nil
}

func (x *XSortedSetLengthByScoreResponse) GetFound() *XSortedSetLengthByScoreResponse_XFound {
	if x, ok := x.GetSortedSet().(*XSortedSetLengthByScoreResponse_Found); ok {
		return x.Found
	}
	return nil
}

func (x *XSortedSetLengthByScoreResponse) GetMissing() *XSortedSetLengthByScoreResponse_XMissing {
	if x, ok := x.GetSortedSet().(*XSortedSetLengthByScoreResponse_Missing); ok {
		return x.Missing
	}
	return nil
}

type isXSortedSetLengthByScoreResponse_SortedSet interface {
	isXSortedSetLengthByScoreResponse_SortedSet()
}

type XSortedSetLengthByScoreResponse_Found struct {
	Found *XSortedSetLengthByScoreResponse_XFound `protobuf:"bytes,1,opt,name=found,proto3,oneof"`
}

type XSortedSetLengthByScoreResponse_Missing struct {
	Missing *XSortedSetLengthByScoreResponse_XMissing `protobuf:"bytes,2,opt,name=missing,proto3,oneof"`
}

func (*XSortedSetLengthByScoreResponse_Found) isXSortedSetLengthByScoreResponse_SortedSet() {}

func (*XSortedSetLengthByScoreResponse_Missing) isXSortedSetLengthByScoreResponse_SortedSet() {}

type XSetIfResponse_XStored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetIfResponse_XStored) Reset() {
	*x = XSetIfResponse_XStored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetIfResponse_XStored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetIfResponse_XStored) ProtoMessage() {}

func (x *XSetIfResponse_XStored) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetIfResponse_XStored.ProtoReflect.Descriptor instead.
func (*XSetIfResponse_XStored) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{9, 0}
}

type XSetIfResponse_XNotStored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetIfResponse_XNotStored) Reset() {
	*x = XSetIfResponse_XNotStored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetIfResponse_XNotStored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetIfResponse_XNotStored) ProtoMessage() {}

func (x *XSetIfResponse_XNotStored) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetIfResponse_XNotStored.ProtoReflect.Descriptor instead.
func (*XSetIfResponse_XNotStored) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{9, 1}
}

type XSetIfNotExistsResponse_XStored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetIfNotExistsResponse_XStored) Reset() {
	*x = XSetIfNotExistsResponse_XStored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetIfNotExistsResponse_XStored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetIfNotExistsResponse_XStored) ProtoMessage() {}

func (x *XSetIfNotExistsResponse_XStored) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetIfNotExistsResponse_XStored.ProtoReflect.Descriptor instead.
func (*XSetIfNotExistsResponse_XStored) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{11, 0}
}

type XSetIfNotExistsResponse_XNotStored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetIfNotExistsResponse_XNotStored) Reset() {
	*x = XSetIfNotExistsResponse_XNotStored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetIfNotExistsResponse_XNotStored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetIfNotExistsResponse_XNotStored) ProtoMessage() {}

func (x *XSetIfNotExistsResponse_XNotStored) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetIfNotExistsResponse_XNotStored.ProtoReflect.Descriptor instead.
func (*XSetIfNotExistsResponse_XNotStored) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{11, 1}
}

// Indicates that the ttl was applied.
type XUpdateTtlResponse_XSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XUpdateTtlResponse_XSet) Reset() {
	*x = XUpdateTtlResponse_XSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XUpdateTtlResponse_XSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XUpdateTtlResponse_XSet) ProtoMessage() {}

func (x *XUpdateTtlResponse_XSet) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XUpdateTtlResponse_XSet.ProtoReflect.Descriptor instead.
func (*XUpdateTtlResponse_XSet) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{17, 0}
}

// Indicates that the ttl was not applied due to a failed condition.
type XUpdateTtlResponse_XNotSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XUpdateTtlResponse_XNotSet) Reset() {
	*x = XUpdateTtlResponse_XNotSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XUpdateTtlResponse_XNotSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XUpdateTtlResponse_XNotSet) ProtoMessage() {}

func (x *XUpdateTtlResponse_XNotSet) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XUpdateTtlResponse_XNotSet.ProtoReflect.Descriptor instead.
func (*XUpdateTtlResponse_XNotSet) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{17, 1}
}

// Indicates that the key did not exist.
type XUpdateTtlResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XUpdateTtlResponse_XMissing) Reset() {
	*x = XUpdateTtlResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XUpdateTtlResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XUpdateTtlResponse_XMissing) ProtoMessage() {}

func (x *XUpdateTtlResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XUpdateTtlResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XUpdateTtlResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{17, 2}
}

type XItemGetTtlResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemainingTtlMillis uint64 `protobuf:"varint,1,opt,name=remaining_ttl_millis,json=remainingTtlMillis,proto3" json:"remaining_ttl_millis,omitempty"`
}

func (x *XItemGetTtlResponse_XFound) Reset() {
	*x = XItemGetTtlResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XItemGetTtlResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XItemGetTtlResponse_XFound) ProtoMessage() {}

func (x *XItemGetTtlResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XItemGetTtlResponse_XFound.ProtoReflect.Descriptor instead.
func (*XItemGetTtlResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{19, 0}
}

func (x *XItemGetTtlResponse_XFound) GetRemainingTtlMillis() uint64 {
	if x != nil {
		return x.RemainingTtlMillis
	}
	return 0
}

type XItemGetTtlResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XItemGetTtlResponse_XMissing) Reset() {
	*x = XItemGetTtlResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XItemGetTtlResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XItemGetTtlResponse_XMissing) ProtoMessage() {}

func (x *XItemGetTtlResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XItemGetTtlResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XItemGetTtlResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{19, 1}
}

type XItemGetTypeResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType XItemGetTypeResponse_ItemType `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3,enum=cache_client.XItemGetTypeResponse_ItemType" json:"item_type,omitempty"`
}

func (x *XItemGetTypeResponse_XFound) Reset() {
	*x = XItemGetTypeResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XItemGetTypeResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XItemGetTypeResponse_XFound) ProtoMessage() {}

func (x *XItemGetTypeResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XItemGetTypeResponse_XFound.ProtoReflect.Descriptor instead.
func (*XItemGetTypeResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{21, 0}
}

func (x *XItemGetTypeResponse_XFound) GetItemType() XItemGetTypeResponse_ItemType {
	if x != nil {
		return x.ItemType
	}
	return XItemGetTypeResponse_SCALAR
}

type XItemGetTypeResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XItemGetTypeResponse_XMissing) Reset() {
	*x = XItemGetTypeResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XItemGetTypeResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XItemGetTypeResponse_XMissing) ProtoMessage() {}

func (x *XItemGetTypeResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XItemGetTypeResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XItemGetTypeResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{21, 1}
}

type XDictionaryGetResponse_XDictionaryGetResponsePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    ECacheResult `protobuf:"varint,1,opt,name=result,proto3,enum=cache_client.ECacheResult" json:"result,omitempty"`
	CacheBody []byte       `protobuf:"bytes,2,opt,name=cache_body,json=cacheBody,proto3" json:"cache_body,omitempty"`
}

func (x *XDictionaryGetResponse_XDictionaryGetResponsePart) Reset() {
	*x = XDictionaryGetResponse_XDictionaryGetResponsePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryGetResponse_XDictionaryGetResponsePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryGetResponse_XDictionaryGetResponsePart) ProtoMessage() {}

func (x *XDictionaryGetResponse_XDictionaryGetResponsePart) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryGetResponse_XDictionaryGetResponsePart.ProtoReflect.Descriptor instead.
func (*XDictionaryGetResponse_XDictionaryGetResponsePart) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{23, 0}
}

func (x *XDictionaryGetResponse_XDictionaryGetResponsePart) GetResult() ECacheResult {
	if x != nil {
		return x.Result
	}
	return ECacheResult_Invalid
}

func (x *XDictionaryGetResponse_XDictionaryGetResponsePart) GetCacheBody() []byte {
	if x != nil {
		return x.CacheBody
	}
	return nil
}

type XDictionaryGetResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*XDictionaryGetResponse_XDictionaryGetResponsePart `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *XDictionaryGetResponse_XFound) Reset() {
	*x = XDictionaryGetResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryGetResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryGetResponse_XFound) ProtoMessage() {}

func (x *XDictionaryGetResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryGetResponse_XFound.ProtoReflect.Descriptor instead.
func (*XDictionaryGetResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{23, 1}
}

func (x *XDictionaryGetResponse_XFound) GetItems() []*XDictionaryGetResponse_XDictionaryGetResponsePart {
	if x != nil {
		return x.Items
	}
	return nil
}

type XDictionaryGetResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDictionaryGetResponse_XMissing) Reset() {
	*x = XDictionaryGetResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryGetResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryGetResponse_XMissing) ProtoMessage() {}

func (x *XDictionaryGetResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryGetResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XDictionaryGetResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{23, 2}
}

type XDictionaryFetchResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*XDictionaryFieldValuePair `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *XDictionaryFetchResponse_XFound) Reset() {
	*x = XDictionaryFetchResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryFetchResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryFetchResponse_XFound) ProtoMessage() {}

func (x *XDictionaryFetchResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryFetchResponse_XFound.ProtoReflect.Descriptor instead.
func (*XDictionaryFetchResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{26, 0}
}

func (x *XDictionaryFetchResponse_XFound) GetItems() []*XDictionaryFieldValuePair {
	if x != nil {
		return x.Items
	}
	return nil
}

type XDictionaryFetchResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDictionaryFetchResponse_XMissing) Reset() {
	*x = XDictionaryFetchResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryFetchResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryFetchResponse_XMissing) ProtoMessage() {}

func (x *XDictionaryFetchResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryFetchResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XDictionaryFetchResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{26, 1}
}

type XDictionaryDeleteRequest_Some struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields [][]byte `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *XDictionaryDeleteRequest_Some) Reset() {
	*x = XDictionaryDeleteRequest_Some{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryDeleteRequest_Some) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryDeleteRequest_Some) ProtoMessage() {}

func (x *XDictionaryDeleteRequest_Some) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryDeleteRequest_Some.ProtoReflect.Descriptor instead.
func (*XDictionaryDeleteRequest_Some) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{31, 0}
}

func (x *XDictionaryDeleteRequest_Some) GetFields() [][]byte {
	if x != nil {
		return x.Fields
	}
	return nil
}

type XDictionaryDeleteRequest_All struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDictionaryDeleteRequest_All) Reset() {
	*x = XDictionaryDeleteRequest_All{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryDeleteRequest_All) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryDeleteRequest_All) ProtoMessage() {}

func (x *XDictionaryDeleteRequest_All) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryDeleteRequest_All.ProtoReflect.Descriptor instead.
func (*XDictionaryDeleteRequest_All) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{31, 1}
}

type XDictionaryLengthResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *XDictionaryLengthResponse_XFound) Reset() {
	*x = XDictionaryLengthResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryLengthResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryLengthResponse_XFound) ProtoMessage() {}

func (x *XDictionaryLengthResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryLengthResponse_XFound.ProtoReflect.Descriptor instead.
func (*XDictionaryLengthResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{34, 0}
}

func (x *XDictionaryLengthResponse_XFound) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type XDictionaryLengthResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XDictionaryLengthResponse_XMissing) Reset() {
	*x = XDictionaryLengthResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XDictionaryLengthResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDictionaryLengthResponse_XMissing) ProtoMessage() {}

func (x *XDictionaryLengthResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDictionaryLengthResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XDictionaryLengthResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{34, 1}
}

type XSetFetchResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements [][]byte `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *XSetFetchResponse_XFound) Reset() {
	*x = XSetFetchResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetFetchResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetFetchResponse_XFound) ProtoMessage() {}

func (x *XSetFetchResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetFetchResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSetFetchResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{36, 0}
}

func (x *XSetFetchResponse_XFound) GetElements() [][]byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

type XSetFetchResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetFetchResponse_XMissing) Reset() {
	*x = XSetFetchResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetFetchResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetFetchResponse_XMissing) ProtoMessage() {}

func (x *XSetFetchResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetFetchResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSetFetchResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{36, 1}
}

type XSetSampleResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements [][]byte `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *XSetSampleResponse_XFound) Reset() {
	*x = XSetSampleResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetSampleResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetSampleResponse_XFound) ProtoMessage() {}

func (x *XSetSampleResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetSampleResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSetSampleResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{38, 0}
}

func (x *XSetSampleResponse_XFound) GetElements() [][]byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

type XSetSampleResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetSampleResponse_XMissing) Reset() {
	*x = XSetSampleResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetSampleResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetSampleResponse_XMissing) ProtoMessage() {}

func (x *XSetSampleResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetSampleResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSetSampleResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{38, 1}
}

// cache = request - stored
type XSetDifferenceRequest_XMinuend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements [][]byte `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *XSetDifferenceRequest_XMinuend) Reset() {
	*x = XSetDifferenceRequest_XMinuend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetDifferenceRequest_XMinuend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetDifferenceRequest_XMinuend) ProtoMessage() {}

func (x *XSetDifferenceRequest_XMinuend) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetDifferenceRequest_XMinuend.ProtoReflect.Descriptor instead.
func (*XSetDifferenceRequest_XMinuend) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{41, 0}
}

func (x *XSetDifferenceRequest_XMinuend) GetElements() [][]byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

// cache = stored - request
type XSetDifferenceRequest_XSubtrahend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SubtrahendSet:
	//
	//	*XSetDifferenceRequest_XSubtrahend_Set
	//	*XSetDifferenceRequest_XSubtrahend_Identity
	SubtrahendSet isXSetDifferenceRequest_XSubtrahend_SubtrahendSet `protobuf_oneof:"subtrahend_set"`
}

func (x *XSetDifferenceRequest_XSubtrahend) Reset() {
	*x = XSetDifferenceRequest_XSubtrahend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetDifferenceRequest_XSubtrahend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetDifferenceRequest_XSubtrahend) ProtoMessage() {}

func (x *XSetDifferenceRequest_XSubtrahend) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetDifferenceRequest_XSubtrahend.ProtoReflect.Descriptor instead.
func (*XSetDifferenceRequest_XSubtrahend) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{41, 1}
}

func (m *XSetDifferenceRequest_XSubtrahend) GetSubtrahendSet() isXSetDifferenceRequest_XSubtrahend_SubtrahendSet {
	if m != nil {
		return m.SubtrahendSet
	}
	return nil
}

func (x *XSetDifferenceRequest_XSubtrahend) GetSet() *XSetDifferenceRequest_XSubtrahend_XSet {
	if x, ok := x.GetSubtrahendSet().(*XSetDifferenceRequest_XSubtrahend_Set); ok {
		return x.Set
	}
	return nil
}

func (x *XSetDifferenceRequest_XSubtrahend) GetIdentity() *XSetDifferenceRequest_XSubtrahend_XIdentity {
	if x, ok := x.GetSubtrahendSet().(*XSetDifferenceRequest_XSubtrahend_Identity); ok {
		return x.Identity
	}
	return nil
}

type isXSetDifferenceRequest_XSubtrahend_SubtrahendSet interface {
	isXSetDifferenceRequest_XSubtrahend_SubtrahendSet()
}

type XSetDifferenceRequest_XSubtrahend_Set struct {
	Set *XSetDifferenceRequest_XSubtrahend_XSet `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type XSetDifferenceRequest_XSubtrahend_Identity struct {
	Identity *XSetDifferenceRequest_XSubtrahend_XIdentity `protobuf:"bytes,2,opt,name=identity,proto3,oneof"`
}

func (*XSetDifferenceRequest_XSubtrahend_Set) isXSetDifferenceRequest_XSubtrahend_SubtrahendSet() {}

func (*XSetDifferenceRequest_XSubtrahend_Identity) isXSetDifferenceRequest_XSubtrahend_SubtrahendSet() {
}

// Subtract a set of elements
type XSetDifferenceRequest_XSubtrahend_XSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements [][]byte `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *XSetDifferenceRequest_XSubtrahend_XSet) Reset() {
	*x = XSetDifferenceRequest_XSubtrahend_XSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetDifferenceRequest_XSubtrahend_XSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetDifferenceRequest_XSubtrahend_XSet) ProtoMessage() {}

func (x *XSetDifferenceRequest_XSubtrahend_XSet) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetDifferenceRequest_XSubtrahend_XSet.ProtoReflect.Descriptor instead.
func (*XSetDifferenceRequest_XSubtrahend_XSet) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{41, 1, 0}
}

func (x *XSetDifferenceRequest_XSubtrahend_XSet) GetElements() [][]byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

// Subtract the set's identity (itself) from itself - which deletes it.
type XSetDifferenceRequest_XSubtrahend_XIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetDifferenceRequest_XSubtrahend_XIdentity) Reset() {
	*x = XSetDifferenceRequest_XSubtrahend_XIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetDifferenceRequest_XSubtrahend_XIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetDifferenceRequest_XSubtrahend_XIdentity) ProtoMessage() {}

func (x *XSetDifferenceRequest_XSubtrahend_XIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetDifferenceRequest_XSubtrahend_XIdentity.ProtoReflect.Descriptor instead.
func (*XSetDifferenceRequest_XSubtrahend_XIdentity) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{41, 1, 1}
}

type XSetDifferenceResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetDifferenceResponse_XFound) Reset() {
	*x = XSetDifferenceResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetDifferenceResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetDifferenceResponse_XFound) ProtoMessage() {}

func (x *XSetDifferenceResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetDifferenceResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSetDifferenceResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{42, 0}
}

type XSetDifferenceResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetDifferenceResponse_XMissing) Reset() {
	*x = XSetDifferenceResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetDifferenceResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetDifferenceResponse_XMissing) ProtoMessage() {}

func (x *XSetDifferenceResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetDifferenceResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSetDifferenceResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{42, 1}
}

type XSetContainsResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This will be the same length as the elements passed in the request.
	// It represents whether each element is a member of the set, with indices corresponding to the request elements.
	Contains []bool `protobuf:"varint,1,rep,packed,name=contains,proto3" json:"contains,omitempty"`
}

func (x *XSetContainsResponse_XFound) Reset() {
	*x = XSetContainsResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetContainsResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetContainsResponse_XFound) ProtoMessage() {}

func (x *XSetContainsResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetContainsResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSetContainsResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{44, 0}
}

func (x *XSetContainsResponse_XFound) GetContains() []bool {
	if x != nil {
		return x.Contains
	}
	return nil
}

type XSetContainsResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetContainsResponse_XMissing) Reset() {
	*x = XSetContainsResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetContainsResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetContainsResponse_XMissing) ProtoMessage() {}

func (x *XSetContainsResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetContainsResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSetContainsResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{44, 1}
}

type XSetLengthResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *XSetLengthResponse_XFound) Reset() {
	*x = XSetLengthResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetLengthResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetLengthResponse_XFound) ProtoMessage() {}

func (x *XSetLengthResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetLengthResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSetLengthResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{46, 0}
}

func (x *XSetLengthResponse_XFound) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type XSetLengthResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetLengthResponse_XMissing) Reset() {
	*x = XSetLengthResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetLengthResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetLengthResponse_XMissing) ProtoMessage() {}

func (x *XSetLengthResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetLengthResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSetLengthResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{46, 1}
}

type XSetPopResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements [][]byte `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *XSetPopResponse_XFound) Reset() {
	*x = XSetPopResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetPopResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetPopResponse_XFound) ProtoMessage() {}

func (x *XSetPopResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetPopResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSetPopResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{48, 0}
}

func (x *XSetPopResponse_XFound) GetElements() [][]byte {
	if x != nil {
		return x.Elements
	}
	return nil
}

type XSetPopResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSetPopResponse_XMissing) Reset() {
	*x = XSetPopResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSetPopResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSetPopResponse_XMissing) ProtoMessage() {}

func (x *XSetPopResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSetPopResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSetPopResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{48, 1}
}

type XListPopFrontResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Front []byte `protobuf:"bytes,1,opt,name=front,proto3" json:"front,omitempty"`
	// length of the list after the pop
	ListLength uint32 `protobuf:"varint,2,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListPopFrontResponse_XFound) Reset() {
	*x = XListPopFrontResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPopFrontResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPopFrontResponse_XFound) ProtoMessage() {}

func (x *XListPopFrontResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPopFrontResponse_XFound.ProtoReflect.Descriptor instead.
func (*XListPopFrontResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{58, 0}
}

func (x *XListPopFrontResponse_XFound) GetFront() []byte {
	if x != nil {
		return x.Front
	}
	return nil
}

func (x *XListPopFrontResponse_XFound) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

type XListPopFrontResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListPopFrontResponse_XMissing) Reset() {
	*x = XListPopFrontResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPopFrontResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPopFrontResponse_XMissing) ProtoMessage() {}

func (x *XListPopFrontResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPopFrontResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XListPopFrontResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{58, 1}
}

type XListPopBackResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Back []byte `protobuf:"bytes,1,opt,name=back,proto3" json:"back,omitempty"`
	// length of the list after the pop
	ListLength uint32 `protobuf:"varint,2,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListPopBackResponse_XFound) Reset() {
	*x = XListPopBackResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPopBackResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPopBackResponse_XFound) ProtoMessage() {}

func (x *XListPopBackResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPopBackResponse_XFound.ProtoReflect.Descriptor instead.
func (*XListPopBackResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{60, 0}
}

func (x *XListPopBackResponse_XFound) GetBack() []byte {
	if x != nil {
		return x.Back
	}
	return nil
}

func (x *XListPopBackResponse_XFound) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

type XListPopBackResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListPopBackResponse_XMissing) Reset() {
	*x = XListPopBackResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListPopBackResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListPopBackResponse_XMissing) ProtoMessage() {}

func (x *XListPopBackResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListPopBackResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XListPopBackResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{60, 1}
}

type XListEraseRequest_XAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListEraseRequest_XAll) Reset() {
	*x = XListEraseRequest_XAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListEraseRequest_XAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListEraseRequest_XAll) ProtoMessage() {}

func (x *XListEraseRequest_XAll) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListEraseRequest_XAll.ProtoReflect.Descriptor instead.
func (*XListEraseRequest_XAll) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{62, 0}
}

type XListEraseRequest_XListRanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranges []*XListRange `protobuf:"bytes,1,rep,name=ranges,proto3" json:"ranges,omitempty"`
}

func (x *XListEraseRequest_XListRanges) Reset() {
	*x = XListEraseRequest_XListRanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListEraseRequest_XListRanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListEraseRequest_XListRanges) ProtoMessage() {}

func (x *XListEraseRequest_XListRanges) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListEraseRequest_XListRanges.ProtoReflect.Descriptor instead.
func (*XListEraseRequest_XListRanges) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{62, 1}
}

func (x *XListEraseRequest_XListRanges) GetRanges() []*XListRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type XListEraseResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListLength uint32 `protobuf:"varint,1,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListEraseResponse_XFound) Reset() {
	*x = XListEraseResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListEraseResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListEraseResponse_XFound) ProtoMessage() {}

func (x *XListEraseResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListEraseResponse_XFound.ProtoReflect.Descriptor instead.
func (*XListEraseResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{63, 0}
}

func (x *XListEraseResponse_XFound) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

type XListEraseResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListEraseResponse_XMissing) Reset() {
	*x = XListEraseResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListEraseResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListEraseResponse_XMissing) ProtoMessage() {}

func (x *XListEraseResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListEraseResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XListEraseResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{63, 1}
}

type XListRemoveResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListLength uint32 `protobuf:"varint,1,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListRemoveResponse_XFound) Reset() {
	*x = XListRemoveResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRemoveResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRemoveResponse_XFound) ProtoMessage() {}

func (x *XListRemoveResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRemoveResponse_XFound.ProtoReflect.Descriptor instead.
func (*XListRemoveResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{65, 0}
}

func (x *XListRemoveResponse_XFound) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

type XListRemoveResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListRemoveResponse_XMissing) Reset() {
	*x = XListRemoveResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRemoveResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRemoveResponse_XMissing) ProtoMessage() {}

func (x *XListRemoveResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRemoveResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XListRemoveResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{65, 1}
}

type XListRetainResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListLength uint32 `protobuf:"varint,1,opt,name=list_length,json=listLength,proto3" json:"list_length,omitempty"`
}

func (x *XListRetainResponse_XFound) Reset() {
	*x = XListRetainResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRetainResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRetainResponse_XFound) ProtoMessage() {}

func (x *XListRetainResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRetainResponse_XFound.ProtoReflect.Descriptor instead.
func (*XListRetainResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{68, 0}
}

func (x *XListRetainResponse_XFound) GetListLength() uint32 {
	if x != nil {
		return x.ListLength
	}
	return 0
}

type XListRetainResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListRetainResponse_XMissing) Reset() {
	*x = XListRetainResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListRetainResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListRetainResponse_XMissing) ProtoMessage() {}

func (x *XListRetainResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListRetainResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XListRetainResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{68, 1}
}

type XListFetchResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *XListFetchResponse_XFound) Reset() {
	*x = XListFetchResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListFetchResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListFetchResponse_XFound) ProtoMessage() {}

func (x *XListFetchResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListFetchResponse_XFound.ProtoReflect.Descriptor instead.
func (*XListFetchResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{69, 0}
}

func (x *XListFetchResponse_XFound) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type XListFetchResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListFetchResponse_XMissing) Reset() {
	*x = XListFetchResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListFetchResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListFetchResponse_XMissing) ProtoMessage() {}

func (x *XListFetchResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListFetchResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XListFetchResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{69, 1}
}

type XListLengthResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *XListLengthResponse_XFound) Reset() {
	*x = XListLengthResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListLengthResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListLengthResponse_XFound) ProtoMessage() {}

func (x *XListLengthResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListLengthResponse_XFound.ProtoReflect.Descriptor instead.
func (*XListLengthResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{71, 0}
}

func (x *XListLengthResponse_XFound) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type XListLengthResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XListLengthResponse_XMissing) Reset() {
	*x = XListLengthResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XListLengthResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XListLengthResponse_XMissing) ProtoMessage() {}

func (x *XListLengthResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XListLengthResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XListLengthResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{71, 1}
}

type XSortedSetFetchRequest_XByIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start is inclusive.
	// Unbounded is treated as 0.
	//
	// Types that are assignable to Start:
	//
	//	*XSortedSetFetchRequest_XByIndex_UnboundedStart
	//	*XSortedSetFetchRequest_XByIndex_InclusiveStartIndex
	Start isXSortedSetFetchRequest_XByIndex_Start `protobuf_oneof:"start"`
	// End is exclusive.
	// Unbounded is treated as the number of elements in the sorted set.
	//
	// Types that are assignable to End:
	//
	//	*XSortedSetFetchRequest_XByIndex_UnboundedEnd
	//	*XSortedSetFetchRequest_XByIndex_ExclusiveEndIndex
	End isXSortedSetFetchRequest_XByIndex_End `protobuf_oneof:"end"`
}

func (x *XSortedSetFetchRequest_XByIndex) Reset() {
	*x = XSortedSetFetchRequest_XByIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchRequest_XByIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchRequest_XByIndex) ProtoMessage() {}

func (x *XSortedSetFetchRequest_XByIndex) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchRequest_XByIndex.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchRequest_XByIndex) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{75, 0}
}

func (m *XSortedSetFetchRequest_XByIndex) GetStart() isXSortedSetFetchRequest_XByIndex_Start {
	if m != nil {
		return m.Start
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByIndex) GetUnboundedStart() *XUnbounded {
	if x, ok := x.GetStart().(*XSortedSetFetchRequest_XByIndex_UnboundedStart); ok {
		return x.UnboundedStart
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByIndex) GetInclusiveStartIndex() int32 {
	if x, ok := x.GetStart().(*XSortedSetFetchRequest_XByIndex_InclusiveStartIndex); ok {
		return x.InclusiveStartIndex
	}
	return 0
}

func (m *XSortedSetFetchRequest_XByIndex) GetEnd() isXSortedSetFetchRequest_XByIndex_End {
	if m != nil {
		return m.End
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByIndex) GetUnboundedEnd() *XUnbounded {
	if x, ok := x.GetEnd().(*XSortedSetFetchRequest_XByIndex_UnboundedEnd); ok {
		return x.UnboundedEnd
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByIndex) GetExclusiveEndIndex() int32 {
	if x, ok := x.GetEnd().(*XSortedSetFetchRequest_XByIndex_ExclusiveEndIndex); ok {
		return x.ExclusiveEndIndex
	}
	return 0
}

type isXSortedSetFetchRequest_XByIndex_Start interface {
	isXSortedSetFetchRequest_XByIndex_Start()
}

type XSortedSetFetchRequest_XByIndex_UnboundedStart struct {
	UnboundedStart *XUnbounded `protobuf:"bytes,1,opt,name=unbounded_start,json=unboundedStart,proto3,oneof"`
}

type XSortedSetFetchRequest_XByIndex_InclusiveStartIndex struct {
	InclusiveStartIndex int32 `protobuf:"zigzag32,2,opt,name=inclusive_start_index,json=inclusiveStartIndex,proto3,oneof"`
}

func (*XSortedSetFetchRequest_XByIndex_UnboundedStart) isXSortedSetFetchRequest_XByIndex_Start() {}

func (*XSortedSetFetchRequest_XByIndex_InclusiveStartIndex) isXSortedSetFetchRequest_XByIndex_Start() {
}

type isXSortedSetFetchRequest_XByIndex_End interface {
	isXSortedSetFetchRequest_XByIndex_End()
}

type XSortedSetFetchRequest_XByIndex_UnboundedEnd struct {
	UnboundedEnd *XUnbounded `protobuf:"bytes,3,opt,name=unbounded_end,json=unboundedEnd,proto3,oneof"`
}

type XSortedSetFetchRequest_XByIndex_ExclusiveEndIndex struct {
	ExclusiveEndIndex int32 `protobuf:"zigzag32,4,opt,name=exclusive_end_index,json=exclusiveEndIndex,proto3,oneof"`
}

func (*XSortedSetFetchRequest_XByIndex_UnboundedEnd) isXSortedSetFetchRequest_XByIndex_End() {}

func (*XSortedSetFetchRequest_XByIndex_ExclusiveEndIndex) isXSortedSetFetchRequest_XByIndex_End() {}

type XSortedSetFetchRequest_XByScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Min:
	//
	//	*XSortedSetFetchRequest_XByScore_UnboundedMin
	//	*XSortedSetFetchRequest_XByScore_MinScore
	Min isXSortedSetFetchRequest_XByScore_Min `protobuf_oneof:"min"`
	// Types that are assignable to Max:
	//
	//	*XSortedSetFetchRequest_XByScore_UnboundedMax
	//	*XSortedSetFetchRequest_XByScore_MaxScore
	Max isXSortedSetFetchRequest_XByScore_Max `protobuf_oneof:"max"`
	// Offset and count are used to only get a range of the matching elements,
	// similar to "SELECT LIMIT offset, count" in SQL.
	// A negative count returns all elements from the offset.
	// Use (0, -1) to return all matching elements.
	Offset uint32 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Count  int32  `protobuf:"zigzag32,6,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *XSortedSetFetchRequest_XByScore) Reset() {
	*x = XSortedSetFetchRequest_XByScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchRequest_XByScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchRequest_XByScore) ProtoMessage() {}

func (x *XSortedSetFetchRequest_XByScore) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchRequest_XByScore.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchRequest_XByScore) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{75, 1}
}

func (m *XSortedSetFetchRequest_XByScore) GetMin() isXSortedSetFetchRequest_XByScore_Min {
	if m != nil {
		return m.Min
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByScore) GetUnboundedMin() *XUnbounded {
	if x, ok := x.GetMin().(*XSortedSetFetchRequest_XByScore_UnboundedMin); ok {
		return x.UnboundedMin
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByScore) GetMinScore() *XSortedSetFetchRequest_XByScore_XScore {
	if x, ok := x.GetMin().(*XSortedSetFetchRequest_XByScore_MinScore); ok {
		return x.MinScore
	}
	return nil
}

func (m *XSortedSetFetchRequest_XByScore) GetMax() isXSortedSetFetchRequest_XByScore_Max {
	if m != nil {
		return m.Max
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByScore) GetUnboundedMax() *XUnbounded {
	if x, ok := x.GetMax().(*XSortedSetFetchRequest_XByScore_UnboundedMax); ok {
		return x.UnboundedMax
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByScore) GetMaxScore() *XSortedSetFetchRequest_XByScore_XScore {
	if x, ok := x.GetMax().(*XSortedSetFetchRequest_XByScore_MaxScore); ok {
		return x.MaxScore
	}
	return nil
}

func (x *XSortedSetFetchRequest_XByScore) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *XSortedSetFetchRequest_XByScore) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type isXSortedSetFetchRequest_XByScore_Min interface {
	isXSortedSetFetchRequest_XByScore_Min()
}

type XSortedSetFetchRequest_XByScore_UnboundedMin struct {
	UnboundedMin *XUnbounded `protobuf:"bytes,1,opt,name=unbounded_min,json=unboundedMin,proto3,oneof"`
}

type XSortedSetFetchRequest_XByScore_MinScore struct {
	MinScore *XSortedSetFetchRequest_XByScore_XScore `protobuf:"bytes,2,opt,name=min_score,json=minScore,proto3,oneof"`
}

func (*XSortedSetFetchRequest_XByScore_UnboundedMin) isXSortedSetFetchRequest_XByScore_Min() {}

func (*XSortedSetFetchRequest_XByScore_MinScore) isXSortedSetFetchRequest_XByScore_Min() {}

type isXSortedSetFetchRequest_XByScore_Max interface {
	isXSortedSetFetchRequest_XByScore_Max()
}

type XSortedSetFetchRequest_XByScore_UnboundedMax struct {
	UnboundedMax *XUnbounded `protobuf:"bytes,3,opt,name=unbounded_max,json=unboundedMax,proto3,oneof"`
}

type XSortedSetFetchRequest_XByScore_MaxScore struct {
	MaxScore *XSortedSetFetchRequest_XByScore_XScore `protobuf:"bytes,4,opt,name=max_score,json=maxScore,proto3,oneof"`
}

func (*XSortedSetFetchRequest_XByScore_UnboundedMax) isXSortedSetFetchRequest_XByScore_Max() {}

func (*XSortedSetFetchRequest_XByScore_MaxScore) isXSortedSetFetchRequest_XByScore_Max() {}

type XSortedSetFetchRequest_XByScore_XScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score     float64 `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"`
	Exclusive bool    `protobuf:"varint,2,opt,name=exclusive,proto3" json:"exclusive,omitempty"`
}

func (x *XSortedSetFetchRequest_XByScore_XScore) Reset() {
	*x = XSortedSetFetchRequest_XByScore_XScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchRequest_XByScore_XScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchRequest_XByScore_XScore) ProtoMessage() {}

func (x *XSortedSetFetchRequest_XByScore_XScore) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchRequest_XByScore_XScore.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchRequest_XByScore_XScore) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{75, 1, 0}
}

func (x *XSortedSetFetchRequest_XByScore_XScore) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *XSortedSetFetchRequest_XByScore_XScore) GetExclusive() bool {
	if x != nil {
		return x.Exclusive
	}
	return false
}

type XSortedSetFetchResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Elements:
	//
	//	*XSortedSetFetchResponse_XFound_ValuesWithScores
	//	*XSortedSetFetchResponse_XFound_Values
	Elements isXSortedSetFetchResponse_XFound_Elements `protobuf_oneof:"elements"`
}

func (x *XSortedSetFetchResponse_XFound) Reset() {
	*x = XSortedSetFetchResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchResponse_XFound) ProtoMessage() {}

func (x *XSortedSetFetchResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{76, 0}
}

func (m *XSortedSetFetchResponse_XFound) GetElements() isXSortedSetFetchResponse_XFound_Elements {
	if m != nil {
		return m.Elements
	}
	return nil
}

func (x *XSortedSetFetchResponse_XFound) GetValuesWithScores() *XSortedSetFetchResponse_XFound_XValuesWithScores {
	if x, ok := x.GetElements().(*XSortedSetFetchResponse_XFound_ValuesWithScores); ok {
		return x.ValuesWithScores
	}
	return nil
}

func (x *XSortedSetFetchResponse_XFound) GetValues() *XSortedSetFetchResponse_XFound_XValues {
	if x, ok := x.GetElements().(*XSortedSetFetchResponse_XFound_Values); ok {
		return x.Values
	}
	return nil
}

type isXSortedSetFetchResponse_XFound_Elements interface {
	isXSortedSetFetchResponse_XFound_Elements()
}

type XSortedSetFetchResponse_XFound_ValuesWithScores struct {
	ValuesWithScores *XSortedSetFetchResponse_XFound_XValuesWithScores `protobuf:"bytes,1,opt,name=values_with_scores,json=valuesWithScores,proto3,oneof"`
}

type XSortedSetFetchResponse_XFound_Values struct {
	Values *XSortedSetFetchResponse_XFound_XValues `protobuf:"bytes,2,opt,name=values,proto3,oneof"`
}

func (*XSortedSetFetchResponse_XFound_ValuesWithScores) isXSortedSetFetchResponse_XFound_Elements() {}

func (*XSortedSetFetchResponse_XFound_Values) isXSortedSetFetchResponse_XFound_Elements() {}

type XSortedSetFetchResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSortedSetFetchResponse_XMissing) Reset() {
	*x = XSortedSetFetchResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchResponse_XMissing) ProtoMessage() {}

func (x *XSortedSetFetchResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{76, 1}
}

type XSortedSetFetchResponse_XFound_XValuesWithScores struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*XSortedSetElement `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *XSortedSetFetchResponse_XFound_XValuesWithScores) Reset() {
	*x = XSortedSetFetchResponse_XFound_XValuesWithScores{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchResponse_XFound_XValuesWithScores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchResponse_XFound_XValuesWithScores) ProtoMessage() {}

func (x *XSortedSetFetchResponse_XFound_XValuesWithScores) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchResponse_XFound_XValuesWithScores.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchResponse_XFound_XValuesWithScores) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{76, 0, 0}
}

func (x *XSortedSetFetchResponse_XFound_XValuesWithScores) GetElements() []*XSortedSetElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

type XSortedSetFetchResponse_XFound_XValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *XSortedSetFetchResponse_XFound_XValues) Reset() {
	*x = XSortedSetFetchResponse_XFound_XValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetFetchResponse_XFound_XValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetFetchResponse_XFound_XValues) ProtoMessage() {}

func (x *XSortedSetFetchResponse_XFound_XValues) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetFetchResponse_XFound_XValues.ProtoReflect.Descriptor instead.
func (*XSortedSetFetchResponse_XFound_XValues) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{76, 0, 1}
}

func (x *XSortedSetFetchResponse_XFound_XValues) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ECacheResult `protobuf:"varint,1,opt,name=result,proto3,enum=cache_client.ECacheResult" json:"result,omitempty"`
	Score  float64      `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart) Reset() {
	*x = XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart) ProtoMessage() {}

func (x *XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart.ProtoReflect.Descriptor instead.
func (*XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{78, 0}
}

func (x *XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart) GetResult() ECacheResult {
	if x != nil {
		return x.Result
	}
	return ECacheResult_Invalid
}

func (x *XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type XSortedSetGetScoreResponse_XSortedSetFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *XSortedSetGetScoreResponse_XSortedSetFound) Reset() {
	*x = XSortedSetGetScoreResponse_XSortedSetFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetScoreResponse_XSortedSetFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetScoreResponse_XSortedSetFound) ProtoMessage() {}

func (x *XSortedSetGetScoreResponse_XSortedSetFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetScoreResponse_XSortedSetFound.ProtoReflect.Descriptor instead.
func (*XSortedSetGetScoreResponse_XSortedSetFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{78, 1}
}

func (x *XSortedSetGetScoreResponse_XSortedSetFound) GetElements() []*XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart {
	if x != nil {
		return x.Elements
	}
	return nil
}

type XSortedSetGetScoreResponse_XSortedSetMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSortedSetGetScoreResponse_XSortedSetMissing) Reset() {
	*x = XSortedSetGetScoreResponse_XSortedSetMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetScoreResponse_XSortedSetMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetScoreResponse_XSortedSetMissing) ProtoMessage() {}

func (x *XSortedSetGetScoreResponse_XSortedSetMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetScoreResponse_XSortedSetMissing.ProtoReflect.Descriptor instead.
func (*XSortedSetGetScoreResponse_XSortedSetMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{78, 2}
}

type XSortedSetRemoveRequest_XAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSortedSetRemoveRequest_XAll) Reset() {
	*x = XSortedSetRemoveRequest_XAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetRemoveRequest_XAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetRemoveRequest_XAll) ProtoMessage() {}

func (x *XSortedSetRemoveRequest_XAll) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetRemoveRequest_XAll.ProtoReflect.Descriptor instead.
func (*XSortedSetRemoveRequest_XAll) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{79, 0}
}

type XSortedSetRemoveRequest_XSome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *XSortedSetRemoveRequest_XSome) Reset() {
	*x = XSortedSetRemoveRequest_XSome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetRemoveRequest_XSome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetRemoveRequest_XSome) ProtoMessage() {}

func (x *XSortedSetRemoveRequest_XSome) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetRemoveRequest_XSome.ProtoReflect.Descriptor instead.
func (*XSortedSetRemoveRequest_XSome) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{79, 1}
}

func (x *XSortedSetRemoveRequest_XSome) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type XSortedSetGetRankResponse_XRankResponsePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ECacheResult `protobuf:"varint,1,opt,name=result,proto3,enum=cache_client.ECacheResult" json:"result,omitempty"`
	// Rank is 0-based i.e. when sort order is descending the rank of the
	// value with the highest score will be 0. Similarly for ascending order,
	// value with the lowest score will have rank 0.
	Rank uint64 `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *XSortedSetGetRankResponse_XRankResponsePart) Reset() {
	*x = XSortedSetGetRankResponse_XRankResponsePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetRankResponse_XRankResponsePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetRankResponse_XRankResponsePart) ProtoMessage() {}

func (x *XSortedSetGetRankResponse_XRankResponsePart) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetRankResponse_XRankResponsePart.ProtoReflect.Descriptor instead.
func (*XSortedSetGetRankResponse_XRankResponsePart) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{84, 0}
}

func (x *XSortedSetGetRankResponse_XRankResponsePart) GetResult() ECacheResult {
	if x != nil {
		return x.Result
	}
	return ECacheResult_Invalid
}

func (x *XSortedSetGetRankResponse_XRankResponsePart) GetRank() uint64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type XSortedSetGetRankResponse_XSortedSetMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSortedSetGetRankResponse_XSortedSetMissing) Reset() {
	*x = XSortedSetGetRankResponse_XSortedSetMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetGetRankResponse_XSortedSetMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetGetRankResponse_XSortedSetMissing) ProtoMessage() {}

func (x *XSortedSetGetRankResponse_XSortedSetMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetGetRankResponse_XSortedSetMissing.ProtoReflect.Descriptor instead.
func (*XSortedSetGetRankResponse_XSortedSetMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{84, 1}
}

type XSortedSetLengthResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *XSortedSetLengthResponse_XFound) Reset() {
	*x = XSortedSetLengthResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetLengthResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetLengthResponse_XFound) ProtoMessage() {}

func (x *XSortedSetLengthResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetLengthResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSortedSetLengthResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{86, 0}
}

func (x *XSortedSetLengthResponse_XFound) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type XSortedSetLengthResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSortedSetLengthResponse_XMissing) Reset() {
	*x = XSortedSetLengthResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetLengthResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetLengthResponse_XMissing) ProtoMessage() {}

func (x *XSortedSetLengthResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetLengthResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSortedSetLengthResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{86, 1}
}

type XSortedSetLengthByScoreResponse_XFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *XSortedSetLengthByScoreResponse_XFound) Reset() {
	*x = XSortedSetLengthByScoreResponse_XFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetLengthByScoreResponse_XFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetLengthByScoreResponse_XFound) ProtoMessage() {}

func (x *XSortedSetLengthByScoreResponse_XFound) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetLengthByScoreResponse_XFound.ProtoReflect.Descriptor instead.
func (*XSortedSetLengthByScoreResponse_XFound) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{88, 0}
}

func (x *XSortedSetLengthByScoreResponse_XFound) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type XSortedSetLengthByScoreResponse_XMissing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *XSortedSetLengthByScoreResponse_XMissing) Reset() {
	*x = XSortedSetLengthByScoreResponse_XMissing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cacheclient_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSortedSetLengthByScoreResponse_XMissing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSortedSetLengthByScoreResponse_XMissing) ProtoMessage() {}

func (x *XSortedSetLengthByScoreResponse_XMissing) ProtoReflect() protoreflect.Message {
	mi := &file_cacheclient_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSortedSetLengthByScoreResponse_XMissing.ProtoReflect.Descriptor instead.
func (*XSortedSetLengthByScoreResponse_XMissing) Descriptor() ([]byte, []int) {
	return file_cacheclient_proto_rawDescGZIP(), []int{88, 1}
}

var File_cacheclient_proto protoreflect.FileDescriptor

var file_cacheclient_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2a, 0x0a, 0x0b, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x7b, 0x0a, 0x0c, 0x5f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x10, 0x5f, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2d, 0x0a,
	0x0e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x11, 0x0a, 0x0f,
	0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x74, 0x0a, 0x0b, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74,
	0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x5c, 0x0a, 0x0c, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x10, 0x5f, 0x53, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc4, 0x03, 0x0a, 0x0d, 0x5f, 0x53, 0x65,
	0x74, 0x49, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x4f,
	0x0a, 0x15, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x6f,
	0x74, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x12, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x12,
	0x28, 0x0a, 0x06, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x71, 0x75,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c,
	0x12, 0x3f, 0x0a, 0x0f, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x5f, 0x65, 0x71,
	0x75, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x45, 0x71, 0x75, 0x61, 0x6c,
	0x48, 0x00, 0x52, 0x0d, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x45, 0x71, 0x75, 0x61,
	0x6c, 0x12, 0x2f, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f,
	0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xbd, 0x01, 0x0a, 0x0e, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x64, 0x12, 0x48, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4e, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x1a, 0x09, 0x0a, 0x07,
	0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x1a, 0x0c, 0x0a, 0x0a, 0x5f, 0x4e, 0x6f, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x7f, 0x0a, 0x16, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x22, 0xd8, 0x01, 0x0a, 0x17, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74,
	0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x4e,
	0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x5f, 0x4e, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x6e,
	0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x1a, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x64, 0x1a, 0x0c, 0x0a, 0x0a, 0x5f, 0x4e, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x32, 0x0a, 0x11, 0x5f,
	0x4b, 0x65, 0x79, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22,
	0x2c, 0x0a, 0x12, 0x5f, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x73, 0x0a,
	0x11, 0x5f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x5f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf4,
	0x01, 0x0a, 0x11, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x3a, 0x0a, 0x18, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x16, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x54,
	0x6f, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3a, 0x0a,
	0x18, 0x64, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x16, 0x64, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x6f, 0x76, 0x65,
	0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x17,
	0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x74, 0x6c, 0x22, 0x84, 0x02, 0x0a, 0x12, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x03,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x53, 0x65, 0x74,
	0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x5f, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4e, 0x6f, 0x74, 0x53,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x07,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x1a, 0x06, 0x0a, 0x04, 0x5f, 0x53, 0x65, 0x74, 0x1a, 0x09, 0x0a, 0x07, 0x5f,
	0x4e, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x31, 0x0a, 0x12,
	0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x22,
	0xf1, 0x01, 0x0a, 0x13, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x74, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x74,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47,
	0x65, 0x74, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x1a, 0x3a, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x54, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x1a, 0x0a, 0x0a,
	0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x32, 0x0a, 0x13, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xd7, 0x02, 0x0a, 0x14, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x47, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x52, 0x0a, 0x06,
	0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x48, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0x49, 0x0a, 0x08,
	0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x43, 0x41, 0x4c,
	0x41, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x41,
	0x52, 0x59, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x52, 0x54, 0x45,
	0x44, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x04, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x58, 0x0a, 0x15, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x94, 0x03, 0x0a, 0x16,
	0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x07, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x6f, 0x0a, 0x1a, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0x5f, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x55, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x22, 0x42, 0x0a, 0x17, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x19, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x91, 0x02, 0x0a, 0x18, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x1a, 0x47, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x22, 0xcb, 0x01, 0x0a, 0x15, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x74, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x74,
	0x6c, 0x22, 0x18, 0x0a, 0x16, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x1b,
	0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x74,
	0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x74, 0x6c, 0x22, 0x34,
	0x0a, 0x1c, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x18, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x73, 0x6f,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x6f, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6f, 0x6d, 0x65, 0x12, 0x3e, 0x0a,
	0x03, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x1a, 0x1e, 0x0a,
	0x04, 0x53, 0x6f, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x05, 0x0a,
	0x03, 0x41, 0x6c, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x1b,
	0x0a, 0x19, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x18, 0x5f,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xed, 0x01, 0x0a, 0x19, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x4c, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x1a, 0x20, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x22, 0x2d, 0x0a, 0x10, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xd2, 0x01, 0x0a, 0x11, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x44, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x24, 0x0a, 0x06, 0x5f,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x05, 0x0a,
	0x03, 0x73, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x11, 0x5f, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x12, 0x5f,
	0x53, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x24, 0x0a, 0x06, 0x5f, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x73,
	0x65, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x10, 0x5f, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x74, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x5f, 0x53,
	0x65, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xfb, 0x03, 0x0a, 0x15, 0x5f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x4d, 0x69, 0x6e, 0x75,
	0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x12, 0x51,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x74, 0x72, 0x61, 0x68, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x53, 0x75, 0x62, 0x74, 0x72, 0x61, 0x68,
	0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x74, 0x72, 0x61, 0x68, 0x65, 0x6e,
	0x64, 0x1a, 0x26, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x6e, 0x75, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xf3, 0x01, 0x0a, 0x0b, 0x5f, 0x53,
	0x75, 0x62, 0x74, 0x72, 0x61, 0x68, 0x65, 0x6e, 0x64, 0x12, 0x48, 0x0a, 0x03, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x53, 0x75, 0x62,
	0x74, 0x72, 0x61, 0x68, 0x65, 0x6e, 0x64, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03,
	0x73, 0x65, 0x74, 0x12, 0x57, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x53, 0x75, 0x62, 0x74,
	0x72, 0x61, 0x68, 0x65, 0x6e, 0x64, 0x2e, 0x5f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x22, 0x0a, 0x04,
	0x5f, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x0b, 0x0a, 0x09, 0x5f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x10, 0x0a,
	0x0e, 0x73, 0x75, 0x62, 0x74, 0x72, 0x61, 0x68, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x42,
	0x0c, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xc5, 0x01,
	0x0a, 0x16, 0x5f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x49, 0x0a,
	0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53,
	0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x08, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x05,
	0x0a, 0x03, 0x73, 0x65, 0x74, 0x22, 0x4c, 0x0a, 0x13, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x14, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x47, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x24, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x1a, 0x0a,
	0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x73, 0x65,
	0x74, 0x22, 0x2e, 0x0a, 0x11, 0x5f, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xd1, 0x01, 0x0a, 0x12, 0x5f, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x1a, 0x20, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x05,
	0x0a, 0x03, 0x73, 0x65, 0x74, 0x22, 0x41, 0x0a, 0x0e, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x0f, 0x5f, 0x53, 0x65,
	0x74, 0x50, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x50,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x24,
	0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x42, 0x05, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x1c, 0x5f, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x74, 0x6c, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x40, 0x0a, 0x1d,
	0x5f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xd3,
	0x01, 0x0a, 0x1b, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74,
	0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x74, 0x6c, 0x12,
	0x33, 0x0a, 0x16, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x54, 0x6f,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x3f, 0x0a, 0x1c, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xc9, 0x01, 0x0a, 0x15, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x75, 0x73, 0x68, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x74,
	0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x74, 0x6c, 0x12, 0x31,
	0x0a, 0x15, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x74, 0x6f, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x39, 0x0a, 0x16, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xca, 0x01, 0x0a,
	0x14, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x74, 0x6c, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x38, 0x0a, 0x15, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x22, 0x33, 0x0a, 0x14, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xfa, 0x01, 0x0a, 0x15, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x70, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x48, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x1a, 0x3f, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x06, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x13, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x70, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x14, 0x5f, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x47, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x42, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x3d,
	0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x0a, 0x0a,
	0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x43, 0x0a, 0x0a, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x11, 0x5f, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x73, 0x6f, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6f, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x03,
	0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x41, 0x6c, 0x6c, 0x48,
	0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x1a, 0x06, 0x0a, 0x04, 0x5f, 0x41, 0x6c, 0x6c, 0x1a, 0x3f,
	0x0a, 0x0b, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x72, 0x61, 0x73, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x12, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x45, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x29, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x06,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x12, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x17, 0x61, 0x6c, 0x6c,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x14, 0x61, 0x6c,
	0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0xde, 0x01, 0x0a,
	0x13, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x29,
	0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c,
	0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x98, 0x02,
	0x0a, 0x11, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x0f, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x5f, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x0e, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x29, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x75, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x5f, 0x55, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x01, 0x52, 0x0c, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x76, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x48, 0x01, 0x52, 0x0c,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x65,
	0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xe5, 0x02, 0x0a, 0x12, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0f,
	0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x5f,
	0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x0f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x5f, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x48, 0x01, 0x52, 0x0c, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x45, 0x6e,
	0x64, 0x12, 0x25, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x48, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74,
	0x74, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x74, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0xde, 0x01, 0x0a, 0x13, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x1a, 0x29, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x0a, 0x0a,
	0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xd2, 0x01, 0x0a, 0x12, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x1a, 0x20, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x06,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x12, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x13, 0x5f, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x20, 0x0a, 0x06, 0x5f,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x0a, 0x0a,
	0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x3f, 0x0a, 0x11, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x14, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x74, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74,
	0x74, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x74, 0x6c, 0x22,
	0x17, 0x0a, 0x15, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x08, 0x0a, 0x16, 0x5f, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x12, 0x4a, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x42, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x48, 0x00, 0x52, 0x07, 0x62, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4a, 0x0a,
	0x08, 0x62, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x42, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x62, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0xfc, 0x01, 0x0a, 0x08, 0x5f, 0x42,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3d, 0x0a, 0x0f, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x5f, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x0a, 0x0d, 0x75,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x5f, 0x55, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x01, 0x52, 0x0c, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x11, 0x48, 0x01, 0x52, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x45, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x42, 0x05, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x1a, 0xa4, 0x03, 0x0a, 0x08, 0x5f, 0x42, 0x79,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x5f, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e,
	0x12, 0x53, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x42, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x5f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x5f, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64,
	0x48, 0x01, 0x52, 0x0c, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x61, 0x78,
	0x12, 0x53, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x5f, 0x42, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x5f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x3c, 0x0a, 0x06, 0x5f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x22,
	0x26, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x53, 0x43, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x53, 0x43, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0x91, 0x04, 0x0a, 0x17, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x4a, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0xc9,
	0x02, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x6e, 0x0a, 0x12, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x48, 0x00, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x11, 0x5f, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x3b,
	0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x21, 0x0a, 0x07, 0x5f,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x65, 0x74, 0x22, 0x4e, 0x0a, 0x19, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0xcd, 0x03, 0x0a, 0x1a, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x56, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x6a, 0x0a,
	0x1e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12,
	0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x76, 0x0a, 0x0f, 0x5f, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x63, 0x0a, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x13, 0x0a, 0x11, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x65, 0x74, 0x22, 0xf3, 0x01, 0x0a, 0x17, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x03, 0x61,
	0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x5f, 0x41, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x41, 0x0a, 0x04, 0x73,
	0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x5f, 0x53, 0x6f, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6f, 0x6d, 0x65, 0x1a, 0x06,
	0x0a, 0x04, 0x5f, 0x41, 0x6c, 0x6c, 0x1a, 0x1f, 0x0a, 0x05, 0x5f, 0x53, 0x6f, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x5f, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x1a, 0x5f, 0x53, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x74, 0x6c, 0x22, 0x33, 0x0a, 0x1b, 0x5f, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0xb7, 0x01, 0x0a, 0x18, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x42, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x26, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x53,
	0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x53,
	0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x22, 0xcc, 0x02, 0x0a, 0x19, 0x5f, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x55, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0x5b,
	0x0a, 0x11, 0x5f, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x1a, 0x13, 0x0a, 0x11, 0x5f,
	0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x42, 0x06, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x34, 0x0a, 0x17, 0x5f, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xea,
	0x01, 0x0a, 0x18, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a,
	0x20, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a,
	0x0a, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x22, 0xdb, 0x02, 0x0a, 0x1e,
	0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x42, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e,
	0x12, 0x25, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x0d, 0x75, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x5f, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x4d,
	0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0c, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x25, 0x0a, 0x0d, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78,
	0x12, 0x39, 0x0a, 0x0d, 0x75, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x61,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x5f, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x01, 0x52, 0x0c, 0x75,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x42, 0x05, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x22, 0xff, 0x01, 0x0a, 0x1f, 0x5f, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x79,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x79, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x52, 0x0a, 0x07, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x79, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x5f, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a,
	0x20, 0x0a, 0x06, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a,
	0x0a, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x2a, 0x3c, 0x0a, 0x0c, 0x45,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6b, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x48, 0x69, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x69, 0x73,
	0x73, 0x10, 0x03, 0x22, 0x04, 0x08, 0x04, 0x10, 0x06, 0x32, 0xfc, 0x1e, 0x0a, 0x03, 0x53, 0x63,
	0x73, 0x12, 0x3e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a,
	0x03, 0x53, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x05, 0x53, 0x65, 0x74,
	0x49, 0x66, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x53, 0x65, 0x74, 0x49, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x66, 0x4e, 0x6f, 0x74,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x4b, 0x65, 0x79,
	0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x74, 0x6c, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x74, 0x6c, 0x12, 0x20, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x74,
	0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x74, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x12, 0x23, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x25, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x0d, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x74, 0x12,
	0x23, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x26, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x26, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x53, 0x65,
	0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x53, 0x65, 0x74,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x53,
	0x65, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1f, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65,
	0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53,
	0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x70, 0x12, 0x1c, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74,
	0x50, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x75, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75,
	0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x21,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x72, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x1f, 0x2e, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x20,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x2a, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x12,
	0x29, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x20, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x0c, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x50, 0x75, 0x74, 0x12, 0x22, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x53, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x27,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x74, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x12, 0x53, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x26, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x77, 0x0a, 0x16, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x42, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x64, 0x0a, 0x11, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x01, 0x5a,
	0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x6f, 0x68, 0x71, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x64, 0x6b,
	0x2d, 0x67, 0x6f, 0x3b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x64, 0x6b, 0x5f, 0x67,
	0x6f, 0xaa, 0x02, 0x1a, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cacheclient_proto_rawDescOnce sync.Once
	file_cacheclient_proto_rawDescData = file_cacheclient_proto_rawDesc
)

func file_cacheclient_proto_rawDescGZIP() []byte {
	file_cacheclient_proto_rawDescOnce.Do(func() {
		file_cacheclient_proto_rawDescData = protoimpl.X.CompressGZIP(file_cacheclient_proto_rawDescData)
	})
	return file_cacheclient_proto_rawDescData
}

var file_cacheclient_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_cacheclient_proto_msgTypes = make([]protoimpl.MessageInfo, 159)
var file_cacheclient_proto_goTypes = []interface{}{
	(ECacheResult)(0),                                                 // 0: cache_client.ECacheResult
	(XItemGetTypeResponse_ItemType)(0),                                // 1: cache_client._ItemGetTypeResponse.ItemType
	(XSortedSetFetchRequest_Order)(0),                                 // 2: cache_client._SortedSetFetchRequest.Order
	(XSortedSetGetRankRequest_Order)(0),                               // 3: cache_client._SortedSetGetRankRequest.Order
	(*XGetRequest)(nil),                                               // 4: cache_client._GetRequest
	(*XGetResponse)(nil),                                              // 5: cache_client._GetResponse
	(*XGetBatchRequest)(nil),                                          // 6: cache_client._GetBatchRequest
	(*XDeleteRequest)(nil),                                            // 7: cache_client._DeleteRequest
	(*XDeleteResponse)(nil),                                           // 8: cache_client._DeleteResponse
	(*XSetRequest)(nil),                                               // 9: cache_client._SetRequest
	(*XSetResponse)(nil),                                              // 10: cache_client._SetResponse
	(*XSetBatchRequest)(nil),                                          // 11: cache_client._SetBatchRequest
	(*XSetIfRequest)(nil),                                             // 12: cache_client._SetIfRequest
	(*XSetIfResponse)(nil),                                            // 13: cache_client._SetIfResponse
	(*XSetIfNotExistsRequest)(nil),                                    // 14: cache_client._SetIfNotExistsRequest
	(*XSetIfNotExistsResponse)(nil),                                   // 15: cache_client._SetIfNotExistsResponse
	(*XKeysExistRequest)(nil),                                         // 16: cache_client._KeysExistRequest
	(*XKeysExistResponse)(nil),                                        // 17: cache_client._KeysExistResponse
	(*XIncrementRequest)(nil),                                         // 18: cache_client._IncrementRequest
	(*XIncrementResponse)(nil),                                        // 19: cache_client._IncrementResponse
	(*XUpdateTtlRequest)(nil),                                         // 20: cache_client._UpdateTtlRequest
	(*XUpdateTtlResponse)(nil),                                        // 21: cache_client._UpdateTtlResponse
	(*XItemGetTtlRequest)(nil),                                        // 22: cache_client._ItemGetTtlRequest
	(*XItemGetTtlResponse)(nil),                                       // 23: cache_client._ItemGetTtlResponse
	(*XItemGetTypeRequest)(nil),                                       // 24: cache_client._ItemGetTypeRequest
	(*XItemGetTypeResponse)(nil),                                      // 25: cache_client._ItemGetTypeResponse
	(*XDictionaryGetRequest)(nil),                                     // 26: cache_client._DictionaryGetRequest
	(*XDictionaryGetResponse)(nil),                                    // 27: cache_client._DictionaryGetResponse
	(*XDictionaryFetchRequest)(nil),                                   // 28: cache_client._DictionaryFetchRequest
	(*XDictionaryFieldValuePair)(nil),                                 // 29: cache_client._DictionaryFieldValuePair
	(*XDictionaryFetchResponse)(nil),                                  // 30: cache_client._DictionaryFetchResponse
	(*XDictionarySetRequest)(nil),                                     // 31: cache_client._DictionarySetRequest
	(*XDictionarySetResponse)(nil),                                    // 32: cache_client._DictionarySetResponse
	(*XDictionaryIncrementRequest)(nil),                               // 33: cache_client._DictionaryIncrementRequest
	(*XDictionaryIncrementResponse)(nil),                              // 34: cache_client._DictionaryIncrementResponse
	(*XDictionaryDeleteRequest)(nil),                                  // 35: cache_client._DictionaryDeleteRequest
	(*XDictionaryDeleteResponse)(nil),                                 // 36: cache_client._DictionaryDeleteResponse
	(*XDictionaryLengthRequest)(nil),                                  // 37: cache_client._DictionaryLengthRequest
	(*XDictionaryLengthResponse)(nil),                                 // 38: cache_client._DictionaryLengthResponse
	(*XSetFetchRequest)(nil),                                          // 39: cache_client._SetFetchRequest
	(*XSetFetchResponse)(nil),                                         // 40: cache_client._SetFetchResponse
	(*XSetSampleRequest)(nil),                                         // 41: cache_client._SetSampleRequest
	(*XSetSampleResponse)(nil),                                        // 42: cache_client._SetSampleResponse
	(*XSetUnionRequest)(nil),                                          // 43: cache_client._SetUnionRequest
	(*XSetUnionResponse)(nil),                                         // 44: cache_client._SetUnionResponse
	(*XSetDifferenceRequest)(nil),                                     // 45: cache_client._SetDifferenceRequest
	(*XSetDifferenceResponse)(nil),                                    // 46: cache_client._SetDifferenceResponse
	(*XSetContainsRequest)(nil),                                       // 47: cache_client._SetContainsRequest
	(*XSetContainsResponse)(nil),                                      // 48: cache_client._SetContainsResponse
	(*XSetLengthRequest)(nil),                                         // 49: cache_client._SetLengthRequest
	(*XSetLengthResponse)(nil),                                        // 50: cache_client._SetLengthResponse
	(*XSetPopRequest)(nil),                                            // 51: cache_client._SetPopRequest
	(*XSetPopResponse)(nil),                                           // 52: cache_client._SetPopResponse
	(*XListConcatenateFrontRequest)(nil),                              // 53: cache_client._ListConcatenateFrontRequest
	(*XListConcatenateFrontResponse)(nil),                             // 54: cache_client._ListConcatenateFrontResponse
	(*XListConcatenateBackRequest)(nil),                               // 55: cache_client._ListConcatenateBackRequest
	(*XListConcatenateBackResponse)(nil),                              // 56: cache_client._ListConcatenateBackResponse
	(*XListPushFrontRequest)(nil),                                     // 57: cache_client._ListPushFrontRequest
	(*XListPushFrontResponse)(nil),                                    // 58: cache_client._ListPushFrontResponse
	(*XListPushBackRequest)(nil),                                      // 59: cache_client._ListPushBackRequest
	(*XListPushBackResponse)(nil),                                     // 60: cache_client._ListPushBackResponse
	(*XListPopFrontRequest)(nil),                                      // 61: cache_client._ListPopFrontRequest
	(*XListPopFrontResponse)(nil),                                     // 62: cache_client._ListPopFrontResponse
	(*XListPopBackRequest)(nil),                                       // 63: cache_client._ListPopBackRequest
	(*XListPopBackResponse)(nil),                                      // 64: cache_client._ListPopBackResponse
	(*XListRange)(nil),                                                // 65: cache_client._ListRange
	(*XListEraseRequest)(nil),                                         // 66: cache_client._ListEraseRequest
	(*XListEraseResponse)(nil),                                        // 67: cache_client._ListEraseResponse
	(*XListRemoveRequest)(nil),                                        // 68: cache_client._ListRemoveRequest
	(*XListRemoveResponse)(nil),                                       // 69: cache_client._ListRemoveResponse
	(*XListFetchRequest)(nil),                                         // 70: cache_client._ListFetchRequest
	(*XListRetainRequest)(nil),                                        // 71: cache_client._ListRetainRequest
	(*XListRetainResponse)(nil),                                       // 72: cache_client._ListRetainResponse
	(*XListFetchResponse)(nil),                                        // 73: cache_client._ListFetchResponse
	(*XListLengthRequest)(nil),                                        // 74: cache_client._ListLengthRequest
	(*XListLengthResponse)(nil),                                       // 75: cache_client._ListLengthResponse
	(*XSortedSetElement)(nil),                                         // 76: cache_client._SortedSetElement
	(*XSortedSetPutRequest)(nil),                                      // 77: cache_client._SortedSetPutRequest
	(*XSortedSetPutResponse)(nil),                                     // 78: cache_client._SortedSetPutResponse
	(*XSortedSetFetchRequest)(nil),                                    // 79: cache_client._SortedSetFetchRequest
	(*XSortedSetFetchResponse)(nil),                                   // 80: cache_client._SortedSetFetchResponse
	(*XSortedSetGetScoreRequest)(nil),                                 // 81: cache_client._SortedSetGetScoreRequest
	(*XSortedSetGetScoreResponse)(nil),                                // 82: cache_client._SortedSetGetScoreResponse
	(*XSortedSetRemoveRequest)(nil),                                   // 83: cache_client._SortedSetRemoveRequest
	(*XSortedSetRemoveResponse)(nil),                                  // 84: cache_client._SortedSetRemoveResponse
	(*XSortedSetIncrementRequest)(nil),                                // 85: cache_client._SortedSetIncrementRequest
	(*XSortedSetIncrementResponse)(nil),                               // 86: cache_client._SortedSetIncrementResponse
	(*XSortedSetGetRankRequest)(nil),                                  // 87: cache_client._SortedSetGetRankRequest
	(*XSortedSetGetRankResponse)(nil),                                 // 88: cache_client._SortedSetGetRankResponse
	(*XSortedSetLengthRequest)(nil),                                   // 89: cache_client._SortedSetLengthRequest
	(*XSortedSetLengthResponse)(nil),                                  // 90: cache_client._SortedSetLengthResponse
	(*XSortedSetLengthByScoreRequest)(nil),                            // 91: cache_client._SortedSetLengthByScoreRequest
	(*XSortedSetLengthByScoreResponse)(nil),                           // 92: cache_client._SortedSetLengthByScoreResponse
	(*XSetIfResponse_XStored)(nil),                                    // 93: cache_client._SetIfResponse._Stored
	(*XSetIfResponse_XNotStored)(nil),                                 // 94: cache_client._SetIfResponse._NotStored
	(*XSetIfNotExistsResponse_XStored)(nil),                           // 95: cache_client._SetIfNotExistsResponse._Stored
	(*XSetIfNotExistsResponse_XNotStored)(nil),                        // 96: cache_client._SetIfNotExistsResponse._NotStored
	(*XUpdateTtlResponse_XSet)(nil),                                   // 97: cache_client._UpdateTtlResponse._Set
	(*XUpdateTtlResponse_XNotSet)(nil),                                // 98: cache_client._UpdateTtlResponse._NotSet
	(*XUpdateTtlResponse_XMissing)(nil),                               // 99: cache_client._UpdateTtlResponse._Missing
	(*XItemGetTtlResponse_XFound)(nil),                                // 100: cache_client._ItemGetTtlResponse._Found
	(*XItemGetTtlResponse_XMissing)(nil),                              // 101: cache_client._ItemGetTtlResponse._Missing
	(*XItemGetTypeResponse_XFound)(nil),                               // 102: cache_client._ItemGetTypeResponse._Found
	(*XItemGetTypeResponse_XMissing)(nil),                             // 103: cache_client._ItemGetTypeResponse._Missing
	(*XDictionaryGetResponse_XDictionaryGetResponsePart)(nil),         // 104: cache_client._DictionaryGetResponse._DictionaryGetResponsePart
	(*XDictionaryGetResponse_XFound)(nil),                             // 105: cache_client._DictionaryGetResponse._Found
	(*XDictionaryGetResponse_XMissing)(nil),                           // 106: cache_client._DictionaryGetResponse._Missing
	(*XDictionaryFetchResponse_XFound)(nil),                           // 107: cache_client._DictionaryFetchResponse._Found
	(*XDictionaryFetchResponse_XMissing)(nil),                         // 108: cache_client._DictionaryFetchResponse._Missing
	(*XDictionaryDeleteRequest_Some)(nil),                             // 109: cache_client._DictionaryDeleteRequest.Some
	(*XDictionaryDeleteRequest_All)(nil),                              // 110: cache_client._DictionaryDeleteRequest.All
	(*XDictionaryLengthResponse_XFound)(nil),                          // 111: cache_client._DictionaryLengthResponse._Found
	(*XDictionaryLengthResponse_XMissing)(nil),                        // 112: cache_client._DictionaryLengthResponse._Missing
	(*XSetFetchResponse_XFound)(nil),                                  // 113: cache_client._SetFetchResponse._Found
	(*XSetFetchResponse_XMissing)(nil),                                // 114: cache_client._SetFetchResponse._Missing
	(*XSetSampleResponse_XFound)(nil),                                 // 115: cache_client._SetSampleResponse._Found
	(*XSetSampleResponse_XMissing)(nil),                               // 116: cache_client._SetSampleResponse._Missing
	(*XSetDifferenceRequest_XMinuend)(nil),                            // 117: cache_client._SetDifferenceRequest._Minuend
	(*XSetDifferenceRequest_XSubtrahend)(nil),                         // 118: cache_client._SetDifferenceRequest._Subtrahend
	(*XSetDifferenceRequest_XSubtrahend_XSet)(nil),                    // 119: cache_client._SetDifferenceRequest._Subtrahend._Set
	(*XSetDifferenceRequest_XSubtrahend_XIdentity)(nil),               // 120: cache_client._SetDifferenceRequest._Subtrahend._Identity
	(*XSetDifferenceResponse_XFound)(nil),                             // 121: cache_client._SetDifferenceResponse._Found
	(*XSetDifferenceResponse_XMissing)(nil),                           // 122: cache_client._SetDifferenceResponse._Missing
	(*XSetContainsResponse_XFound)(nil),                               // 123: cache_client._SetContainsResponse._Found
	(*XSetContainsResponse_XMissing)(nil),                             // 124: cache_client._SetContainsResponse._Missing
	(*XSetLengthResponse_XFound)(nil),                                 // 125: cache_client._SetLengthResponse._Found
	(*XSetLengthResponse_XMissing)(nil),                               // 126: cache_client._SetLengthResponse._Missing
	(*XSetPopResponse_XFound)(nil),                                    // 127: cache_client._SetPopResponse._Found
	(*XSetPopResponse_XMissing)(nil),                                  // 128: cache_client._SetPopResponse._Missing
	(*XListPopFrontResponse_XFound)(nil),                              // 129: cache_client._ListPopFrontResponse._Found
	(*XListPopFrontResponse_XMissing)(nil),                            // 130: cache_client._ListPopFrontResponse._Missing
	(*XListPopBackResponse_XFound)(nil),                               // 131: cache_client._ListPopBackResponse._Found
	(*XListPopBackResponse_XMissing)(nil),                             // 132: cache_client._ListPopBackResponse._Missing
	(*XListEraseRequest_XAll)(nil),                                    // 133: cache_client._ListEraseRequest._All
	(*XListEraseRequest_XListRanges)(nil),                             // 134: cache_client._ListEraseRequest._ListRanges
	(*XListEraseResponse_XFound)(nil),                                 // 135: cache_client._ListEraseResponse._Found
	(*XListEraseResponse_XMissing)(nil),                               // 136: cache_client._ListEraseResponse._Missing
	(*XListRemoveResponse_XFound)(nil),                                // 137: cache_client._ListRemoveResponse._Found
	(*XListRemoveResponse_XMissing)(nil),                              // 138: cache_client._ListRemoveResponse._Missing
	(*XListRetainResponse_XFound)(nil),                                // 139: cache_client._ListRetainResponse._Found
	(*XListRetainResponse_XMissing)(nil),                              // 140: cache_client._ListRetainResponse._Missing
	(*XListFetchResponse_XFound)(nil),                                 // 141: cache_client._ListFetchResponse._Found
	(*XListFetchResponse_XMissing)(nil),                               // 142: cache_client._ListFetchResponse._Missing
	(*XListLengthResponse_XFound)(nil),                                // 143: cache_client._ListLengthResponse._Found
	(*XListLengthResponse_XMissing)(nil),                              // 144: cache_client._ListLengthResponse._Missing
	(*XSortedSetFetchRequest_XByIndex)(nil),                           // 145: cache_client._SortedSetFetchRequest._ByIndex
	(*XSortedSetFetchRequest_XByScore)(nil),                           // 146: cache_client._SortedSetFetchRequest._ByScore
	(*XSortedSetFetchRequest_XByScore_XScore)(nil),                    // 147: cache_client._SortedSetFetchRequest._ByScore._Score
	(*XSortedSetFetchResponse_XFound)(nil),                            // 148: cache_client._SortedSetFetchResponse._Found
	(*XSortedSetFetchResponse_XMissing)(nil),                          // 149: cache_client._SortedSetFetchResponse._Missing
	(*XSortedSetFetchResponse_XFound_XValuesWithScores)(nil),          // 150: cache_client._SortedSetFetchResponse._Found._ValuesWithScores
	(*XSortedSetFetchResponse_XFound_XValues)(nil),                    // 151: cache_client._SortedSetFetchResponse._Found._Values
	(*XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart)(nil), // 152: cache_client._SortedSetGetScoreResponse._SortedSetGetScoreResponsePart
	(*XSortedSetGetScoreResponse_XSortedSetFound)(nil),                // 153: cache_client._SortedSetGetScoreResponse._SortedSetFound
	(*XSortedSetGetScoreResponse_XSortedSetMissing)(nil),              // 154: cache_client._SortedSetGetScoreResponse._SortedSetMissing
	(*XSortedSetRemoveRequest_XAll)(nil),                              // 155: cache_client._SortedSetRemoveRequest._All
	(*XSortedSetRemoveRequest_XSome)(nil),                             // 156: cache_client._SortedSetRemoveRequest._Some
	(*XSortedSetGetRankResponse_XRankResponsePart)(nil),               // 157: cache_client._SortedSetGetRankResponse._RankResponsePart
	(*XSortedSetGetRankResponse_XSortedSetMissing)(nil),               // 158: cache_client._SortedSetGetRankResponse._SortedSetMissing
	(*XSortedSetLengthResponse_XFound)(nil),                           // 159: cache_client._SortedSetLengthResponse._Found
	(*XSortedSetLengthResponse_XMissing)(nil),                         // 160: cache_client._SortedSetLengthResponse._Missing
	(*XSortedSetLengthByScoreResponse_XFound)(nil),                    // 161: cache_client._SortedSetLengthByScoreResponse._Found
	(*XSortedSetLengthByScoreResponse_XMissing)(nil),                  // 162: cache_client._SortedSetLengthByScoreResponse._Missing
	(*Present)(nil),                                                   // 163: common.Present
	(*PresentAndNotEqual)(nil),                                        // 164: common.PresentAndNotEqual
	(*Absent)(nil),                                                    // 165: common.Absent
	(*Equal)(nil),                                                     // 166: common.Equal
	(*AbsentOrEqual)(nil),                                             // 167: common.AbsentOrEqual
	(*NotEqual)(nil),                                                  // 168: common.NotEqual
	(*XUnbounded)(nil),                                                // 169: common._Unbounded
}
var file_cacheclient_proto_depIdxs = []int32{
	0,   // 0: cache_client._GetResponse.result:type_name -> cache_client.ECacheResult
	4,   // 1: cache_client._GetBatchRequest.items:type_name -> cache_client._GetRequest
	0,   // 2: cache_client._SetResponse.result:type_name -> cache_client.ECacheResult
	9,   // 3: cache_client._SetBatchRequest.items:type_name -> cache_client._SetRequest
	163, // 4: cache_client._SetIfRequest.present:type_name -> common.Present
	164, // 5: cache_client._SetIfRequest.present_and_not_equal:type_name -> common.PresentAndNotEqual
	165, // 6: cache_client._SetIfRequest.absent:type_name -> common.Absent
	166, // 7: cache_client._SetIfRequest.equal:type_name -> common.Equal
	167, // 8: cache_client._SetIfRequest.absent_or_equal:type_name -> common.AbsentOrEqual
	168, // 9: cache_client._SetIfRequest.not_equal:type_name -> common.NotEqual
	93,  // 10: cache_client._SetIfResponse.stored:type_name -> cache_client._SetIfResponse._Stored
	94,  // 11: cache_client._SetIfResponse.not_stored:type_name -> cache_client._SetIfResponse._NotStored
	95,  // 12: cache_client._SetIfNotExistsResponse.stored:type_name -> cache_client._SetIfNotExistsResponse._Stored
	96,  // 13: cache_client._SetIfNotExistsResponse.not_stored:type_name -> cache_client._SetIfNotExistsResponse._NotStored
	97,  // 14: cache_client._UpdateTtlResponse.set:type_name -> cache_client._UpdateTtlResponse._Set
	98,  // 15: cache_client._UpdateTtlResponse.not_set:type_name -> cache_client._UpdateTtlResponse._NotSet
	99,  // 16: cache_client._UpdateTtlResponse.missing:type_name -> cache_client._UpdateTtlResponse._Missing
	100, // 17: cache_client._ItemGetTtlResponse.found:type_name -> cache_client._ItemGetTtlResponse._Found
	101, // 18: cache_client._ItemGetTtlResponse.missing:type_name -> cache_client._ItemGetTtlResponse._Missing
	102, // 19: cache_client._ItemGetTypeResponse.found:type_name -> cache_client._ItemGetTypeResponse._Found
	103, // 20: cache_client._ItemGetTypeResponse.missing:type_name -> cache_client._ItemGetTypeResponse._Missing
	105, // 21: cache_client._DictionaryGetResponse.found:type_name -> cache_client._DictionaryGetResponse._Found
	106, // 22: cache_client._DictionaryGetResponse.missing:type_name -> cache_client._DictionaryGetResponse._Missing
	107, // 23: cache_client._DictionaryFetchResponse.found:type_name -> cache_client._DictionaryFetchResponse._Found
	108, // 24: cache_client._DictionaryFetchResponse.missing:type_name -> cache_client._DictionaryFetchResponse._Missing
	29,  // 25: cache_client._DictionarySetRequest.items:type_name -> cache_client._DictionaryFieldValuePair
	109, // 26: cache_client._DictionaryDeleteRequest.some:type_name -> cache_client._DictionaryDeleteRequest.Some
	110, // 27: cache_client._DictionaryDeleteRequest.all:type_name -> cache_client._DictionaryDeleteRequest.All
	111, // 28: cache_client._DictionaryLengthResponse.found:type_name -> cache_client._DictionaryLengthResponse._Found
	112, // 29: cache_client._DictionaryLengthResponse.missing:type_name -> cache_client._DictionaryLengthResponse._Missing
	113, // 30: cache_client._SetFetchResponse.found:type_name -> cache_client._SetFetchResponse._Found
	114, // 31: cache_client._SetFetchResponse.missing:type_name -> cache_client._SetFetchResponse._Missing
	115, // 32: cache_client._SetSampleResponse.found:type_name -> cache_client._SetSampleResponse._Found
	116, // 33: cache_client._SetSampleResponse.missing:type_name -> cache_client._SetSampleResponse._Missing
	117, // 34: cache_client._SetDifferenceRequest.minuend:type_name -> cache_client._SetDifferenceRequest._Minuend
	118, // 35: cache_client._SetDifferenceRequest.subtrahend:type_name -> cache_client._SetDifferenceRequest._Subtrahend
	121, // 36: cache_client._SetDifferenceResponse.found:type_name -> cache_client._SetDifferenceResponse._Found
	122, // 37: cache_client._SetDifferenceResponse.missing:type_name -> cache_client._SetDifferenceResponse._Missing
	123, // 38: cache_client._SetContainsResponse.found:type_name -> cache_client._SetContainsResponse._Found
	124, // 39: cache_client._SetContainsResponse.missing:type_name -> cache_client._SetContainsResponse._Missing
	125, // 40: cache_client._SetLengthResponse.found:type_name -> cache_client._SetLengthResponse._Found
	126, // 41: cache_client._SetLengthResponse.missing:type_name -> cache_client._SetLengthResponse._Missing
	127, // 42: cache_client._SetPopResponse.found:type_name -> cache_client._SetPopResponse._Found
	128, // 43: cache_client._SetPopResponse.missing:type_name -> cache_client._SetPopResponse._Missing
	129, // 44: cache_client._ListPopFrontResponse.found:type_name -> cache_client._ListPopFrontResponse._Found
	130, // 45: cache_client._ListPopFrontResponse.missing:type_name -> cache_client._ListPopFrontResponse._Missing
	131, // 46: cache_client._ListPopBackResponse.found:type_name -> cache_client._ListPopBackResponse._Found
	132, // 47: cache_client._ListPopBackResponse.missing:type_name -> cache_client._ListPopBackResponse._Missing
	134, // 48: cache_client._ListEraseRequest.some:type_name -> cache_client._ListEraseRequest._ListRanges
	133, // 49: cache_client._ListEraseRequest.all:type_name -> cache_client._ListEraseRequest._All
	135, // 50: cache_client._ListEraseResponse.found:type_name -> cache_client._ListEraseResponse._Found
	136, // 51: cache_client._ListEraseResponse.missing:type_name -> cache_client._ListEraseResponse._Missing
	137, // 52: cache_client._ListRemoveResponse.found:type_name -> cache_client._ListRemoveResponse._Found
	138, // 53: cache_client._ListRemoveResponse.missing:type_name -> cache_client._ListRemoveResponse._Missing
	169, // 54: cache_client._ListFetchRequest.unbounded_start:type_name -> common._Unbounded
	169, // 55: cache_client._ListFetchRequest.unbounded_end:type_name -> common._Unbounded
	169, // 56: cache_client._ListRetainRequest.unbounded_start:type_name -> common._Unbounded
	169, // 57: cache_client._ListRetainRequest.unbounded_end:type_name -> common._Unbounded
	139, // 58: cache_client._ListRetainResponse.found:type_name -> cache_client._ListRetainResponse._Found
	140, // 59: cache_client._ListRetainResponse.missing:type_name -> cache_client._ListRetainResponse._Missing
	141, // 60: cache_client._ListFetchResponse.found:type_name -> cache_client._ListFetchResponse._Found
	142, // 61: cache_client._ListFetchResponse.missing:type_name -> cache_client._ListFetchResponse._Missing
	143, // 62: cache_client._ListLengthResponse.found:type_name -> cache_client._ListLengthResponse._Found
	144, // 63: cache_client._ListLengthResponse.missing:type_name -> cache_client._ListLengthResponse._Missing
	76,  // 64: cache_client._SortedSetPutRequest.elements:type_name -> cache_client._SortedSetElement
	2,   // 65: cache_client._SortedSetFetchRequest.order:type_name -> cache_client._SortedSetFetchRequest.Order
	145, // 66: cache_client._SortedSetFetchRequest.by_index:type_name -> cache_client._SortedSetFetchRequest._ByIndex
	146, // 67: cache_client._SortedSetFetchRequest.by_score:type_name -> cache_client._SortedSetFetchRequest._ByScore
	148, // 68: cache_client._SortedSetFetchResponse.found:type_name -> cache_client._SortedSetFetchResponse._Found
	149, // 69: cache_client._SortedSetFetchResponse.missing:type_name -> cache_client._SortedSetFetchResponse._Missing
	153, // 70: cache_client._SortedSetGetScoreResponse.found:type_name -> cache_client._SortedSetGetScoreResponse._SortedSetFound
	154, // 71: cache_client._SortedSetGetScoreResponse.missing:type_name -> cache_client._SortedSetGetScoreResponse._SortedSetMissing
	155, // 72: cache_client._SortedSetRemoveRequest.all:type_name -> cache_client._SortedSetRemoveRequest._All
	156, // 73: cache_client._SortedSetRemoveRequest.some:type_name -> cache_client._SortedSetRemoveRequest._Some
	3,   // 74: cache_client._SortedSetGetRankRequest.order:type_name -> cache_client._SortedSetGetRankRequest.Order
	157, // 75: cache_client._SortedSetGetRankResponse.element_rank:type_name -> cache_client._SortedSetGetRankResponse._RankResponsePart
	158, // 76: cache_client._SortedSetGetRankResponse.missing:type_name -> cache_client._SortedSetGetRankResponse._SortedSetMissing
	159, // 77: cache_client._SortedSetLengthResponse.found:type_name -> cache_client._SortedSetLengthResponse._Found
	160, // 78: cache_client._SortedSetLengthResponse.missing:type_name -> cache_client._SortedSetLengthResponse._Missing
	169, // 79: cache_client._SortedSetLengthByScoreRequest.unbounded_min:type_name -> common._Unbounded
	169, // 80: cache_client._SortedSetLengthByScoreRequest.unbounded_max:type_name -> common._Unbounded
	161, // 81: cache_client._SortedSetLengthByScoreResponse.found:type_name -> cache_client._SortedSetLengthByScoreResponse._Found
	162, // 82: cache_client._SortedSetLengthByScoreResponse.missing:type_name -> cache_client._SortedSetLengthByScoreResponse._Missing
	1,   // 83: cache_client._ItemGetTypeResponse._Found.item_type:type_name -> cache_client._ItemGetTypeResponse.ItemType
	0,   // 84: cache_client._DictionaryGetResponse._DictionaryGetResponsePart.result:type_name -> cache_client.ECacheResult
	104, // 85: cache_client._DictionaryGetResponse._Found.items:type_name -> cache_client._DictionaryGetResponse._DictionaryGetResponsePart
	29,  // 86: cache_client._DictionaryFetchResponse._Found.items:type_name -> cache_client._DictionaryFieldValuePair
	119, // 87: cache_client._SetDifferenceRequest._Subtrahend.set:type_name -> cache_client._SetDifferenceRequest._Subtrahend._Set
	120, // 88: cache_client._SetDifferenceRequest._Subtrahend.identity:type_name -> cache_client._SetDifferenceRequest._Subtrahend._Identity
	65,  // 89: cache_client._ListEraseRequest._ListRanges.ranges:type_name -> cache_client._ListRange
	169, // 90: cache_client._SortedSetFetchRequest._ByIndex.unbounded_start:type_name -> common._Unbounded
	169, // 91: cache_client._SortedSetFetchRequest._ByIndex.unbounded_end:type_name -> common._Unbounded
	169, // 92: cache_client._SortedSetFetchRequest._ByScore.unbounded_min:type_name -> common._Unbounded
	147, // 93: cache_client._SortedSetFetchRequest._ByScore.min_score:type_name -> cache_client._SortedSetFetchRequest._ByScore._Score
	169, // 94: cache_client._SortedSetFetchRequest._ByScore.unbounded_max:type_name -> common._Unbounded
	147, // 95: cache_client._SortedSetFetchRequest._ByScore.max_score:type_name -> cache_client._SortedSetFetchRequest._ByScore._Score
	150, // 96: cache_client._SortedSetFetchResponse._Found.values_with_scores:type_name -> cache_client._SortedSetFetchResponse._Found._ValuesWithScores
	151, // 97: cache_client._SortedSetFetchResponse._Found.values:type_name -> cache_client._SortedSetFetchResponse._Found._Values
	76,  // 98: cache_client._SortedSetFetchResponse._Found._ValuesWithScores.elements:type_name -> cache_client._SortedSetElement
	0,   // 99: cache_client._SortedSetGetScoreResponse._SortedSetGetScoreResponsePart.result:type_name -> cache_client.ECacheResult
	152, // 100: cache_client._SortedSetGetScoreResponse._SortedSetFound.elements:type_name -> cache_client._SortedSetGetScoreResponse._SortedSetGetScoreResponsePart
	0,   // 101: cache_client._SortedSetGetRankResponse._RankResponsePart.result:type_name -> cache_client.ECacheResult
	4,   // 102: cache_client.Scs.Get:input_type -> cache_client._GetRequest
	6,   // 103: cache_client.Scs.GetBatch:input_type -> cache_client._GetBatchRequest
	9,   // 104: cache_client.Scs.Set:input_type -> cache_client._SetRequest
	11,  // 105: cache_client.Scs.SetBatch:input_type -> cache_client._SetBatchRequest
	12,  // 106: cache_client.Scs.SetIf:input_type -> cache_client._SetIfRequest
	14,  // 107: cache_client.Scs.SetIfNotExists:input_type -> cache_client._SetIfNotExistsRequest
	7,   // 108: cache_client.Scs.Delete:input_type -> cache_client._DeleteRequest
	16,  // 109: cache_client.Scs.KeysExist:input_type -> cache_client._KeysExistRequest
	18,  // 110: cache_client.Scs.Increment:input_type -> cache_client._IncrementRequest
	20,  // 111: cache_client.Scs.UpdateTtl:input_type -> cache_client._UpdateTtlRequest
	22,  // 112: cache_client.Scs.ItemGetTtl:input_type -> cache_client._ItemGetTtlRequest
	24,  // 113: cache_client.Scs.ItemGetType:input_type -> cache_client._ItemGetTypeRequest
	26,  // 114: cache_client.Scs.DictionaryGet:input_type -> cache_client._DictionaryGetRequest
	28,  // 115: cache_client.Scs.DictionaryFetch:input_type -> cache_client._DictionaryFetchRequest
	31,  // 116: cache_client.Scs.DictionarySet:input_type -> cache_client._DictionarySetRequest
	33,  // 117: cache_client.Scs.DictionaryIncrement:input_type -> cache_client._DictionaryIncrementRequest
	35,  // 118: cache_client.Scs.DictionaryDelete:input_type -> cache_client._DictionaryDeleteRequest
	37,  // 119: cache_client.Scs.DictionaryLength:input_type -> cache_client._DictionaryLengthRequest
	39,  // 120: cache_client.Scs.SetFetch:input_type -> cache_client._SetFetchRequest
	41,  // 121: cache_client.Scs.SetSample:input_type -> cache_client._SetSampleRequest
	43,  // 122: cache_client.Scs.SetUnion:input_type -> cache_client._SetUnionRequest
	45,  // 123: cache_client.Scs.SetDifference:input_type -> cache_client._SetDifferenceRequest
	47,  // 124: cache_client.Scs.SetContains:input_type -> cache_client._SetContainsRequest
	49,  // 125: cache_client.Scs.SetLength:input_type -> cache_client._SetLengthRequest
	51,  // 126: cache_client.Scs.SetPop:input_type -> cache_client._SetPopRequest
	57,  // 127: cache_client.Scs.ListPushFront:input_type -> cache_client._ListPushFrontRequest
	59,  // 128: cache_client.Scs.ListPushBack:input_type -> cache_client._ListPushBackRequest
	61,  // 129: cache_client.Scs.ListPopFront:input_type -> cache_client._ListPopFrontRequest
	63,  // 130: cache_client.Scs.ListPopBack:input_type -> cache_client._ListPopBackRequest
	66,  // 131: cache_client.Scs.ListErase:input_type -> cache_client._ListEraseRequest
	68,  // 132: cache_client.Scs.ListRemove:input_type -> cache_client._ListRemoveRequest
	70,  // 133: cache_client.Scs.ListFetch:input_type -> cache_client._ListFetchRequest
	74,  // 134: cache_client.Scs.ListLength:input_type -> cache_client._ListLengthRequest
	53,  // 135: cache_client.Scs.ListConcatenateFront:input_type -> cache_client._ListConcatenateFrontRequest
	55,  // 136: cache_client.Scs.ListConcatenateBack:input_type -> cache_client._ListConcatenateBackRequest
	71,  // 137: cache_client.Scs.ListRetain:input_type -> cache_client._ListRetainRequest
	77,  // 138: cache_client.Scs.SortedSetPut:input_type -> cache_client._SortedSetPutRequest
	79,  // 139: cache_client.Scs.SortedSetFetch:input_type -> cache_client._SortedSetFetchRequest
	81,  // 140: cache_client.Scs.SortedSetGetScore:input_type -> cache_client._SortedSetGetScoreRequest
	83,  // 141: cache_client.Scs.SortedSetRemove:input_type -> cache_client._SortedSetRemoveRequest
	85,  // 142: cache_client.Scs.SortedSetIncrement:input_type -> cache_client._SortedSetIncrementRequest
	87,  // 143: cache_client.Scs.SortedSetGetRank:input_type -> cache_client._SortedSetGetRankRequest
	89,  // 144: cache_client.Scs.SortedSetLength:input_type -> cache_client._SortedSetLengthRequest
	91,  // 145: cache_client.Scs.SortedSetLengthByScore:input_type -> cache_client._SortedSetLengthByScoreRequest
	5,   // 146: cache_client.Scs.Get:output_type -> cache_client._GetResponse
	5,   // 147: cache_client.Scs.GetBatch:output_type -> cache_client._GetResponse
	10,  // 148: cache_client.Scs.Set:output_type -> cache_client._SetResponse
	10,  // 149: cache_client.Scs.SetBatch:output_type -> cache_client._SetResponse
	13,  // 150: cache_client.Scs.SetIf:output_type -> cache_client._SetIfResponse
	15,  // 151: cache_client.Scs.SetIfNotExists:output_type -> cache_client._SetIfNotExistsResponse
	8,   // 152: cache_client.Scs.Delete:output_type -> cache_client._DeleteResponse
	17,  // 153: cache_client.Scs.KeysExist:output_type -> cache_client._KeysExistResponse
	19,  // 154: cache_client.Scs.Increment:output_type -> cache_client._IncrementResponse
	21,  // 155: cache_client.Scs.UpdateTtl:output_type -> cache_client._UpdateTtlResponse
	23,  // 156: cache_client.Scs.ItemGetTtl:output_type -> cache_client._ItemGetTtlResponse
	25,  // 157: cache_client.Scs.ItemGetType:output_type -> cache_client._ItemGetTypeResponse
	27,  // 158: cache_client.Scs.DictionaryGet:output_type -> cache_client._DictionaryGetResponse
	30,  // 159: cache_client.Scs.DictionaryFetch:output_type -> cache_client._DictionaryFetchResponse
	32,  // 160: cache_client.Scs.DictionarySet:output_type -> cache_client._DictionarySetResponse
	34,  // 161: cache_client.Scs.DictionaryIncrement:output_type -> cache_client._DictionaryIncrementResponse
	36,  // 162: cache_client.Scs.DictionaryDelete:output_type -> cache_client._DictionaryDeleteResponse
	38,  // 163: cache_client.Scs.DictionaryLength:output_type -> cache_client._DictionaryLengthResponse
	40,  // 164: cache_client.Scs.SetFetch:output_type -> cache_client._SetFetchResponse
	42,  // 165: cache_client.Scs.SetSample:output_type -> cache_client._SetSampleResponse
	44,  // 166: cache_client.Scs.SetUnion:output_type -> cache_client._SetUnionResponse
	46,  // 167: cache_client.Scs.SetDifference:output_type -> cache_client._SetDifferenceResponse
	48,  // 168: cache_client.Scs.SetContains:output_type -> cache_client._SetContainsResponse
	50,  // 169: cache_client.Scs.SetLength:output_type -> cache_client._SetLengthResponse
	52,  // 170: cache_client.Scs.SetPop:output_type -> cache_client._SetPopResponse
	58,  // 171: cache_client.Scs.ListPushFront:output_type -> cache_client._ListPushFrontResponse
	60,  // 172: cache_client.Scs.ListPushBack:output_type -> cache_client._ListPushBackResponse
	62,  // 173: cache_client.Scs.ListPopFront:output_type -> cache_client._ListPopFrontResponse
	64,  // 174: cache_client.Scs.ListPopBack:output_type -> cache_client._ListPopBackResponse
	67,  // 175: cache_client.Scs.ListErase:output_type -> cache_client._ListEraseResponse
	69,  // 176: cache_client.Scs.ListRemove:output_type -> cache_client._ListRemoveResponse
	73,  // 177: cache_client.Scs.ListFetch:output_type -> cache_client._ListFetchResponse
	75,  // 178: cache_client.Scs.ListLength:output_type -> cache_client._ListLengthResponse
	54,  // 179: cache_client.Scs.ListConcatenateFront:output_type -> cache_client._ListConcatenateFrontResponse
	56,  // 180: cache_client.Scs.ListConcatenateBack:output_type -> cache_client._ListConcatenateBackResponse
	72,  // 181: cache_client.Scs.ListRetain:output_type -> cache_client._ListRetainResponse
	78,  // 182: cache_client.Scs.SortedSetPut:output_type -> cache_client._SortedSetPutResponse
	80,  // 183: cache_client.Scs.SortedSetFetch:output_type -> cache_client._SortedSetFetchResponse
	82,  // 184: cache_client.Scs.SortedSetGetScore:output_type -> cache_client._SortedSetGetScoreResponse
	84,  // 185: cache_client.Scs.SortedSetRemove:output_type -> cache_client._SortedSetRemoveResponse
	86,  // 186: cache_client.Scs.SortedSetIncrement:output_type -> cache_client._SortedSetIncrementResponse
	88,  // 187: cache_client.Scs.SortedSetGetRank:output_type -> cache_client._SortedSetGetRankResponse
	90,  // 188: cache_client.Scs.SortedSetLength:output_type -> cache_client._SortedSetLengthResponse
	92,  // 189: cache_client.Scs.SortedSetLengthByScore:output_type -> cache_client._SortedSetLengthByScoreResponse
	146, // [146:190] is the sub-list for method output_type
	102, // [102:146] is the sub-list for method input_type
	102, // [102:102] is the sub-list for extension type_name
	102, // [102:102] is the sub-list for extension extendee
	0,   // [0:102] is the sub-list for field type_name
}

func init() { file_cacheclient_proto_init() }
func file_cacheclient_proto_init() {
	if File_cacheclient_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cacheclient_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XGetBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetIfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetIfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetIfNotExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetIfNotExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XKeysExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XKeysExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XIncrementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XIncrementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XUpdateTtlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XUpdateTtlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XItemGetTtlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XItemGetTtlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XItemGetTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XItemGetTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryFieldValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryFetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionarySetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionarySetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryIncrementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryIncrementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryLengthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetFetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetSampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetSampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetUnionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetUnionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetDifferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetDifferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetContainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetContainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetLengthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetPopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetPopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListConcatenateFrontRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListConcatenateFrontResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListConcatenateBackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListConcatenateBackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPushFrontRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPushFrontResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPushBackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPushBackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPopFrontRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPopFrontResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPopBackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPopBackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListEraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListEraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRetainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRetainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListFetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListLengthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetPutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetPutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetIncrementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetIncrementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetLengthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetLengthByScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetLengthByScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetIfResponse_XStored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetIfResponse_XNotStored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetIfNotExistsResponse_XStored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetIfNotExistsResponse_XNotStored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XUpdateTtlResponse_XSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XUpdateTtlResponse_XNotSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XUpdateTtlResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XItemGetTtlResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XItemGetTtlResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XItemGetTypeResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XItemGetTypeResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryGetResponse_XDictionaryGetResponsePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryGetResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryGetResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryFetchResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryFetchResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryDeleteRequest_Some); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryDeleteRequest_All); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryLengthResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XDictionaryLengthResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetFetchResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetFetchResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetSampleResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetSampleResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetDifferenceRequest_XMinuend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetDifferenceRequest_XSubtrahend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetDifferenceRequest_XSubtrahend_XSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetDifferenceRequest_XSubtrahend_XIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetDifferenceResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetDifferenceResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetContainsResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetContainsResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetLengthResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetLengthResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetPopResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSetPopResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPopFrontResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPopFrontResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPopBackResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListPopBackResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListEraseRequest_XAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListEraseRequest_XListRanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListEraseResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListEraseResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRemoveResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRemoveResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRetainResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListRetainResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListFetchResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListFetchResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListLengthResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XListLengthResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchRequest_XByIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchRequest_XByScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchRequest_XByScore_XScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchResponse_XFound_XValuesWithScores); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetFetchResponse_XFound_XValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetScoreResponse_XSortedSetGetScoreResponsePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetScoreResponse_XSortedSetFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetScoreResponse_XSortedSetMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetRemoveRequest_XAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetRemoveRequest_XSome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetRankResponse_XRankResponsePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetGetRankResponse_XSortedSetMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetLengthResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetLengthResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetLengthByScoreResponse_XFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cacheclient_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSortedSetLengthByScoreResponse_XMissing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cacheclient_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*XSetIfRequest_Present)(nil),
		(*XSetIfRequest_PresentAndNotEqual)(nil),
		(*XSetIfRequest_Absent)(nil),
		(*XSetIfRequest_Equal)(nil),
		(*XSetIfRequest_AbsentOrEqual)(nil),
		(*XSetIfRequest_NotEqual)(nil),
	}
	file_cacheclient_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*XSetIfResponse_Stored)(nil),
		(*XSetIfResponse_NotStored)(nil),
	}
	file_cacheclient_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*XSetIfNotExistsResponse_Stored)(nil),
		(*XSetIfNotExistsResponse_NotStored)(nil),
	}
	file_cacheclient_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*XUpdateTtlRequest_IncreaseToMilliseconds)(nil),
		(*XUpdateTtlRequest_DecreaseToMilliseconds)(nil),
		(*XUpdateTtlRequest_OverwriteToMilliseconds)(nil),
	}
	file_cacheclient_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*XUpdateTtlResponse_Set)(nil),
		(*XUpdateTtlResponse_NotSet)(nil),
		(*XUpdateTtlResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*XItemGetTtlResponse_Found)(nil),
		(*XItemGetTtlResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*XItemGetTypeResponse_Found)(nil),
		(*XItemGetTypeResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*XDictionaryGetResponse_Found)(nil),
		(*XDictionaryGetResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*XDictionaryFetchResponse_Found)(nil),
		(*XDictionaryFetchResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*XDictionaryDeleteRequest_Some_)(nil),
		(*XDictionaryDeleteRequest_All_)(nil),
	}
	file_cacheclient_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*XDictionaryLengthResponse_Found)(nil),
		(*XDictionaryLengthResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*XSetFetchResponse_Found)(nil),
		(*XSetFetchResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*XSetSampleResponse_Found)(nil),
		(*XSetSampleResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[41].OneofWrappers = []interface{}{
		(*XSetDifferenceRequest_Minuend)(nil),
		(*XSetDifferenceRequest_Subtrahend)(nil),
	}
	file_cacheclient_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*XSetDifferenceResponse_Found)(nil),
		(*XSetDifferenceResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*XSetContainsResponse_Found)(nil),
		(*XSetContainsResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[46].OneofWrappers = []interface{}{
		(*XSetLengthResponse_Found)(nil),
		(*XSetLengthResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[48].OneofWrappers = []interface{}{
		(*XSetPopResponse_Found)(nil),
		(*XSetPopResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[58].OneofWrappers = []interface{}{
		(*XListPopFrontResponse_Found)(nil),
		(*XListPopFrontResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[60].OneofWrappers = []interface{}{
		(*XListPopBackResponse_Found)(nil),
		(*XListPopBackResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[62].OneofWrappers = []interface{}{
		(*XListEraseRequest_Some)(nil),
		(*XListEraseRequest_All)(nil),
	}
	file_cacheclient_proto_msgTypes[63].OneofWrappers = []interface{}{
		(*XListEraseResponse_Found)(nil),
		(*XListEraseResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[64].OneofWrappers = []interface{}{
		(*XListRemoveRequest_AllElementsWithValue)(nil),
	}
	file_cacheclient_proto_msgTypes[65].OneofWrappers = []interface{}{
		(*XListRemoveResponse_Found)(nil),
		(*XListRemoveResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[66].OneofWrappers = []interface{}{
		(*XListFetchRequest_UnboundedStart)(nil),
		(*XListFetchRequest_InclusiveStart)(nil),
		(*XListFetchRequest_UnboundedEnd)(nil),
		(*XListFetchRequest_ExclusiveEnd)(nil),
	}
	file_cacheclient_proto_msgTypes[67].OneofWrappers = []interface{}{
		(*XListRetainRequest_UnboundedStart)(nil),
		(*XListRetainRequest_InclusiveStart)(nil),
		(*XListRetainRequest_UnboundedEnd)(nil),
		(*XListRetainRequest_ExclusiveEnd)(nil),
	}
	file_cacheclient_proto_msgTypes[68].OneofWrappers = []interface{}{
		(*XListRetainResponse_Found)(nil),
		(*XListRetainResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[69].OneofWrappers = []interface{}{
		(*XListFetchResponse_Found)(nil),
		(*XListFetchResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[71].OneofWrappers = []interface{}{
		(*XListLengthResponse_Found)(nil),
		(*XListLengthResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[75].OneofWrappers = []interface{}{
		(*XSortedSetFetchRequest_ByIndex)(nil),
		(*XSortedSetFetchRequest_ByScore)(nil),
	}
	file_cacheclient_proto_msgTypes[76].OneofWrappers = []interface{}{
		(*XSortedSetFetchResponse_Found)(nil),
		(*XSortedSetFetchResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[78].OneofWrappers = []interface{}{
		(*XSortedSetGetScoreResponse_Found)(nil),
		(*XSortedSetGetScoreResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[79].OneofWrappers = []interface{}{
		(*XSortedSetRemoveRequest_All)(nil),
		(*XSortedSetRemoveRequest_Some)(nil),
	}
	file_cacheclient_proto_msgTypes[84].OneofWrappers = []interface{}{
		(*XSortedSetGetRankResponse_ElementRank)(nil),
		(*XSortedSetGetRankResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[86].OneofWrappers = []interface{}{
		(*XSortedSetLengthResponse_Found)(nil),
		(*XSortedSetLengthResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[87].OneofWrappers = []interface{}{
		(*XSortedSetLengthByScoreRequest_InclusiveMin)(nil),
		(*XSortedSetLengthByScoreRequest_ExclusiveMin)(nil),
		(*XSortedSetLengthByScoreRequest_UnboundedMin)(nil),
		(*XSortedSetLengthByScoreRequest_InclusiveMax)(nil),
		(*XSortedSetLengthByScoreRequest_ExclusiveMax)(nil),
		(*XSortedSetLengthByScoreRequest_UnboundedMax)(nil),
	}
	file_cacheclient_proto_msgTypes[88].OneofWrappers = []interface{}{
		(*XSortedSetLengthByScoreResponse_Found)(nil),
		(*XSortedSetLengthByScoreResponse_Missing)(nil),
	}
	file_cacheclient_proto_msgTypes[114].OneofWrappers = []interface{}{
		(*XSetDifferenceRequest_XSubtrahend_Set)(nil),
		(*XSetDifferenceRequest_XSubtrahend_Identity)(nil),
	}
	file_cacheclient_proto_msgTypes[141].OneofWrappers = []interface{}{
		(*XSortedSetFetchRequest_XByIndex_UnboundedStart)(nil),
		(*XSortedSetFetchRequest_XByIndex_InclusiveStartIndex)(nil),
		(*XSortedSetFetchRequest_XByIndex_UnboundedEnd)(nil),
		(*XSortedSetFetchRequest_XByIndex_ExclusiveEndIndex)(nil),
	}
	file_cacheclient_proto_msgTypes[142].OneofWrappers = []interface{}{
		(*XSortedSetFetchRequest_XByScore_UnboundedMin)(nil),
		(*XSortedSetFetchRequest_XByScore_MinScore)(nil),
		(*XSortedSetFetchRequest_XByScore_UnboundedMax)(nil),
		(*XSortedSetFetchRequest_XByScore_MaxScore)(nil),
	}
	file_cacheclient_proto_msgTypes[144].OneofWrappers = []interface{}{
		(*XSortedSetFetchResponse_XFound_ValuesWithScores)(nil),
		(*XSortedSetFetchResponse_XFound_Values)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cacheclient_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   159,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cacheclient_proto_goTypes,
		DependencyIndexes: file_cacheclient_proto_depIdxs,
		EnumInfos:         file_cacheclient_proto_enumTypes,
		MessageInfos:      file_cacheclient_proto_msgTypes,
	}.Build()
	File_cacheclient_proto = out.File
	file_cacheclient_proto_rawDesc = nil
	file_cacheclient_proto_goTypes = nil
	file_cacheclient_proto_depIdxs = nil
}
