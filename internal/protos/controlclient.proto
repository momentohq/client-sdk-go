syntax = "proto3";

option go_package = "github.com/momentohq/client-sdk-go;client_sdk_go";
option java_multiple_files = true;
option java_package = "grpc.control_client";
option csharp_namespace = "Momento.Protos.ControlClient";

package control_client;

service ScsControl {
  rpc CreateCache (_CreateCacheRequest) returns (_CreateCacheResponse) {}
  rpc DeleteCache (_DeleteCacheRequest) returns (_DeleteCacheResponse) {}
  rpc ListCaches (_ListCachesRequest) returns (_ListCachesResponse) {}
  rpc FlushCache (_FlushCacheRequest) returns (_FlushCacheResponse) {}
  rpc CreateSigningKey (_CreateSigningKeyRequest) returns (_CreateSigningKeyResponse) {}
  rpc RevokeSigningKey (_RevokeSigningKeyRequest) returns (_RevokeSigningKeyResponse) {}
  rpc ListSigningKeys (_ListSigningKeysRequest) returns (_ListSigningKeysResponse) {}
  // api for programatically generating api and refresh tokens
  rpc GenerateApiToken(_GenerateApiTokenRequest) returns (_GenerateApiTokenResponse) {}
}

message _DeleteCacheRequest {
  string cache_name = 1;
}

message _DeleteCacheResponse {
}

message _CreateCacheRequest {
  string cache_name = 1;
}

message _CreateCacheResponse {
}

message _ListCachesRequest {
  string next_token = 1;
}

message _Cache {
  string cache_name = 1;
}

message _ListCachesResponse {
  repeated _Cache cache = 1;
  string next_token = 2;
}

message _CreateSigningKeyRequest {
  uint32 ttl_minutes = 1;
}

message _CreateSigningKeyResponse {
  string key = 1;
  uint64 expires_at = 2;
}

message _RevokeSigningKeyRequest {
  string key_id = 1;
}

message _RevokeSigningKeyResponse {
}

message _SigningKey {
  // The id of the signing key
  string key_id = 1;
  // Epoch time in seconds when the signing key expires
  uint64 expires_at = 2;
}

message _ListSigningKeysRequest {
  string next_token = 1;
}

message _ListSigningKeysResponse {
  repeated _SigningKey signing_key = 1;
  string next_token = 2;
}

message _FlushCacheRequest {
  string cache_name = 1;
}

message _FlushCacheResponse {

}

message _GenerateApiTokenRequest {
  // generate a token that will never expire
  message Never {}
  // generate a token that has an expiry
  message Expires {
    // how many seconds do you want the api token to be valid for?
    uint32 valid_for_seconds = 1;
  }

  oneof expiry {
    Never never = 2;
    Expires expires = 3;
  }

  reserved 1;
}

message _GenerateApiTokenResponse {
  // the api key used for authentication against Momento backend
  string api_key = 1;
  // the token that will allow the api token to be refreshed, which will
  // give you back a new refresh and api token
  string refresh_token = 2;
  // the Momento endpoint that this token is allowed to make requests against
  string endpoint = 3;
  // epoch seconds when the api token expires
  uint64 valid_until = 4;
}
