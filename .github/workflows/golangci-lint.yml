name: golangci-lint
on:
  pull_request:
  push:
    branches: [main]
permissions:
  contents: read
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Get Go cache paths
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up Go cache
        uses: actions/cache@v3
        with:
          key: golangci-lint-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: golangci-lint-${{ runner.os }}-go-
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.49.0
      - name: Get golangci-lint cache path
        id: golangci-lint-cache-status
        run: |
          echo "::set-output name=dir::$(golangci-lint cache status | head -1 | sed 's/^Dir: //')"
      - name: Set up golangci-lint cache
        uses: actions/cache@v3.0.2
        with:
          key: golangci-lint-${{ runner.os }}-golangci-lint-${{ hashFiles('**/go.mod') }}
          restore-keys: golangci-lint-${{ runner.os }}-golangci-lint-
          path: ${{ steps.golangci-lint-cache-status.outputs.dir }}
      - name: Run golangci-lint
        run: |
          golangci-lint run --out-format=github-actions -- \
            $(go work edit -json | jq -c -r '[.Use[].DiskPath | select(. != "syncx" and . != "process")] | map_values(. + "/...")[]')
